{"version":3,"file":"static/js/495.4e7bbd93.chunk.js","mappings":"6OAuBA,MAglBA,EAhlB8DA,IAKvD,IALwD,UAC7DC,EAAS,WACTC,EAAU,aACVC,EAAY,cACZC,GAAgB,GACjBJ,EACC,MAAOK,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAqB,UAC1DC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAiB,KAC5CG,EAASC,IAAcJ,EAAAA,EAAAA,UAAiB,KACxCK,EAAYC,IAAiBN,EAAAA,EAAAA,UAAuB,KACpDO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAChCS,EAAWC,IAAgBV,EAAAA,EAAAA,UAAgB,KAC3CW,EAAkBC,IAAuBZ,EAAAA,EAAAA,UAAwB,OACjEa,EAAkBC,IAAuBd,EAAAA,EAAAA,WAAkB,IASlEe,EAAAA,EAAAA,WAAU,KACJlB,GACFmB,IAEFC,KACC,CAACnB,EAAgBD,KAEpBkB,EAAAA,EAAAA,WAAU,KACJd,GAAaE,GACfe,KAED,CAACjB,EAAWE,EAASQ,EAAkBE,IAE1C,MAAMG,EAAgBG,UACpB,IACE,MAAMC,QAAsBC,EAAAA,UAAUC,aAAa5B,GACnDgB,EAAaU,GACTA,EAAcG,OAAS,GACzBX,EAAoBQ,EAAc,GAAGI,GAEzC,CAAE,MAAOC,GACPC,QAAQD,MAAM,8CAAoCA,EACpD,GAGIR,EAAkBA,KACtB,MAAMU,EAAM,IAAIC,KAChB,IAAIC,EACAC,EAEJ,OAAQhC,GACN,IAAK,OACH+B,EAAQ,IAAID,KAAKD,GACjBE,EAAME,QAAQJ,EAAIK,UAAYL,EAAIM,SAAW,GAC7CH,EAAM,IAAIF,KAAKD,GACf,MACF,IAAK,QAWL,QACEE,EAAQ,IAAID,KAAKD,EAAIO,cAAeP,EAAIQ,WAAY,GACpDL,EAAM,IAAIF,KAAKD,EAAIO,cAAeP,EAAIQ,WAAa,EAAG,SATxD,IAAK,OACHN,EAAQ,IAAID,KAAKD,EAAIO,cAAe,EAAG,GACvCJ,EAAM,IAAIF,KAAKD,EAAIO,cAAe,GAAI,IACtC,MACF,IAAK,SAEH,OAOJ,MAAME,EAAcC,IAClB,MAAMC,EAAOD,EAAKH,cACZK,EAAQC,OAAOH,EAAKF,WAAa,GAAGM,SAAS,EAAG,KAChDC,EAAMF,OAAOH,EAAKL,WAAWS,SAAS,EAAG,KAC/C,MAAM,GAANE,OAAUL,EAAI,KAAAK,OAAIJ,EAAK,KAAAI,OAAID,IAG7BxC,EAAakC,EAAWP,IACxBzB,EAAWgC,EAAWN,KAGlBZ,EAAiBC,UACrB,GAAKlB,GAAcE,EAAnB,CAEAK,GAAW,GACX,IACE,GAAIK,EAAkB,CAEpB,MAqBM+B,SArB0BC,QAAQC,IACtCrC,EAAUsC,IAAI5B,UACZ,IAOE,aAN4BE,EAAAA,UAAU2B,cACpCtD,EACAuD,EAAIzB,GACJvB,EACAE,IAEmB4C,IAAIG,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvBD,GAAG,IACNE,cAAc,GAADT,OAAKM,EAAII,WAAU,KAAAV,OAAIM,EAAIK,aAE5C,CAAE,MAAO7B,GAEP,OADAC,QAAQD,MAAM,8DAADkB,OAAiDM,EAAIzB,GAAE,KAAKC,GAClE,EACT,MAKyC8B,OAC7CjD,EAAcsC,EAChB,KAAO,CACL,MAAMY,EAAmB7D,GAAcgB,EACvC,IAAK6C,EAAkB,OAGvB,IACE,MAAMC,QAAmBpC,EAAAA,UAAUqC,0BACjChE,EACA8D,EACAvD,EACAE,GAEEsD,EAAWA,YAAcA,EAAWA,WAAWlC,OAAS,GAC1DG,QAAQiC,KAAK,uDAAyCF,EAAWA,WAErE,CAAE,MAAOhC,GACPC,QAAQD,MAAM,kDAA6CA,EAC7D,CAEA,MAAMmC,QAAuBvC,EAAAA,UAAU2B,cACrCtD,EACA8D,EACAvD,EACAE,GAEFG,EAAcsD,EAChB,CACF,CAAE,MAAOnC,GACPC,QAAQD,MAAM,8CAAiCA,EACjD,CAAC,QACCjB,GAAW,EACb,CA5DkC,GA+J9BqD,EAAcC,IAClB,IAAKA,EAAY,MAAO,IAExB,IAEE,GAAIA,EAAWC,MAAM,iBACnB,OAAOD,EAIT,MAAMzB,EAAO,IAAIT,KAAKkC,GACtB,OAAIE,MAAM3B,EAAK4B,WACN,IAGF5B,EAAK6B,mBAAmB,QAAS,CACtCC,KAAM,UACNC,OAAQ,UACRC,QAAQ,GAEZ,CAAE,MAAO5C,GAEP,OADAC,QAAQD,MAAM,yCAA+BqC,EAAYrC,GAClD,GACT,IAGK6C,EAAOC,IAAYvE,EAAAA,EAAAA,UAAc,MAexC,OAbAe,EAAAA,EAAAA,WAAU,KACR,MAAMyD,EAAYrD,UAChB,MAAMsD,OA9HatD,WACrB,IAAKd,EAAWkB,OAAQ,OAAO,KAE/B,IAAImD,EACAC,EACAC,EACAC,EAEC,GAAIhE,EAAkB,CAKxB6D,QAFkCI,EAAAA,EAAgBC,qBAAqB9E,EAAWE,GAKlF,MAAM6E,EAAkB3E,EAAW4E,OAAOC,GAAkB,WAAbA,EAAEC,QAAqB5D,OACtEoD,EAAcK,EACdJ,EAAaF,EAAYM,EACzBH,EAAWxE,EAAW4E,OAAOC,GAAkB,SAAbA,EAAEC,QAAmB5D,MAC1D,KAAO,CAGLmD,QADkCI,EAAAA,EAAgBC,qBAAqB9E,EAAWE,GAIlF,MAAMiF,EAAe,IAAIC,IACvBhF,EACG4E,OAAOC,GAAkB,YAAbA,EAAEC,QACdpC,IAAImC,GAAKA,EAAE7C,OAEViD,EAAY,IAAID,IACpBhF,EACG4E,OAAOC,GAAkB,SAAbA,EAAEC,QACdpC,IAAImC,GAAKA,EAAE7C,OAIVkD,EAAqB,IAAIF,IAC/BD,EAAaI,QAAQnD,GAAQkD,EAAmBE,IAAIpD,IACpDiD,EAAUE,QAAQnD,GAAQkD,EAAmBE,IAAIpD,IACjDsC,EAAcY,EAAmBG,KAGjCd,EAAae,KAAKC,IAAI,EAAGlB,EAAYC,GACrCE,EAAWS,EAAUI,IACvB,CAEA,MAAMG,EAAaxF,EAAWyF,OAAO,CAACC,EAAKb,IAAMa,GAAOb,EAAEc,aAAe,GAAI,GACvEC,EAAoB5F,EAAWyF,OAAO,CAACC,EAAKb,IAAMa,GAAOb,EAAEgB,eAAiB,GAAI,GAEhFC,EAAezB,EAAY,EAAImB,EAAanB,EAAY,EAExD0B,EAAiB1B,EAAY,EAAIiB,KAAKU,IAAI,IAAM1B,EAAcD,EAAa,KAAO,EAsBxF,OAnBAhD,QAAQ4E,IAAI,6BAA8B,CACxCC,iBAAkBlG,EAAWkB,OAC7BsE,aACAI,oBACAtB,cACAC,aACAF,YACA0B,iBACAD,eACAK,YAAa3F,EAAmB,MAAQ,IAAIwE,IAAIhF,EAAW0C,IAAImC,GAAKA,EAAE7C,OAAOqD,KAC7EN,aAAcvE,EAAmB,MAAQ,IAAIwE,IAAIhF,EAAW4E,OAAOC,GAAkB,YAAbA,EAAEC,QAAsBpC,IAAImC,GAAKA,EAAE7C,OAAOqD,KAClHJ,UAAWzE,EAAmB,MAAQ,IAAIwE,IAAIhF,EAAW4E,OAAOC,GAAkB,SAAbA,EAAEC,QAAmBpC,IAAImC,GAAKA,EAAE7C,OAAOqD,OAQvG,CACLhB,YACAC,cACAC,aACAC,WACAgB,aACAI,oBACAE,eACAC,iBACAK,gBAbsB5F,EACpB,IAAIwE,IAAIhF,EAAW0C,IAAImC,GAAKA,EAAE9B,gBAAgBsC,KAC9C,IAqD4BgB,GAC9BnC,EAASE,IAGPpE,EAAWkB,OAAS,EACtBiD,IAEAD,EAAS,OAEV,CAAClE,EAAYQ,EAAkBZ,EAAWE,EAASM,EAAUc,UAG9DoF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kDAAiDC,SAAA,EAC9DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oEAAmEC,SAAA,EAChFF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yDAAwDC,SAAC,8BAGtEjH,IACCkH,EAAAA,EAAAA,KAAA,KAAGF,UAAU,2CAA0CC,SACpDjH,QAMP+G,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+CAA8CC,SAAA,EAC3DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAACH,UAAU,2BACxBE,EAAAA,EAAAA,KAAA,UACEE,MAAOlH,EACPmH,SAAWC,GAAMnH,EAAkBmH,EAAEC,OAAOH,OAC5CJ,UAAU,gNAA+MC,SArS/L,CACpC,CAAEG,MAAO,OAAQI,MAAO,6BACxB,CAAEJ,MAAO,QAASI,MAAO,gBACzB,CAAEJ,MAAO,OAAQI,MAAO,aACxB,CAAEJ,MAAO,SAAUI,MAAO,uBAmSDrE,IAAIsE,IACjBP,EAAAA,EAAAA,KAAA,UAA2BE,MAAOK,EAAOL,MAAMH,SAC5CQ,EAAOD,OADGC,EAAOL,aAON,WAAnBlH,IACC6G,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,SACEQ,KAAK,OACLN,MAAO/G,EACPgH,SAAWC,GAAMhH,EAAagH,EAAEC,OAAOH,OACvCJ,UAAU,mNAEZE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAC,OAChCC,EAAAA,EAAAA,KAAA,SACEQ,KAAK,OACLN,MAAO7G,EACP8G,SAAWC,GAAM9G,EAAW8G,EAAEC,OAAOH,OACrCJ,UAAU,2NAQnB/G,GAAiBY,EAAUc,OAAS,IACnCoF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,6DAA4DC,SAAC,6BAG9EF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,oBAAmBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SACEQ,KAAK,QACLC,KAAK,WACLC,SAAU3G,EACVoG,SAAUA,IAAMnG,GAAoB,GACpC8F,UAAU,UAEZE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,2CAA0CC,SAAC,wBAE7DF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,oBAAmBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SACEQ,KAAK,QACLC,KAAK,WACLC,QAAS3G,EACToG,SAAUA,IAAMnG,GAAoB,GACpC8F,UAAU,UAEZE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,2CAA0CC,SAAC,sCAK/DhG,IACAiG,EAAAA,EAAAA,KAAA,UACEE,MAAOrG,GAAoB,GAC3BsG,SAAWC,GAAMtG,EAAoB6G,OAAOP,EAAEC,OAAOH,QACrDJ,UAAU,+MAA8MC,SAEvNpG,EAAUsC,IAAIE,IACb0D,EAAAA,EAAAA,MAAA,UAAqBK,MAAO/D,EAAIzB,GAAGqF,SAAA,CAChC5D,EAAII,WAAW,IAAEJ,EAAIK,YADXL,EAAIzB,UAU1B8C,IACCqC,EAAAA,EAAAA,MAAA,OAAKC,UAAS,mCAAAjE,OAAqC9B,EAAmB,iBAAmB,GAAE,eAAcgG,SAAA,EACvGC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gDAA+CC,UAC5DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAACY,EAAAA,EAAY,CAACd,UAAU,8CACxBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uDAAsDC,SAAC,wBACpEF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,sDAAqDC,SAAA,CAC/DvC,EAAM8B,eAAeuB,QAAQ,GAAG,gBAMzCb,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kDAAiDC,UAC9DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CAAChB,UAAU,gDACrBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,yDAAwDC,SAAC,uBACtEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wDAAuDC,SACjE,MACC,MAAMgB,EAAQvD,EAAMuB,WACdiC,EAAanC,KAAKoC,MAAMF,GACxBG,EAAUrC,KAAKsC,MAA6B,IAAtBJ,EAAQC,IACpC,MAAM,GAANnF,OAAUmF,EAAU,KAAAnF,OAAIqF,EAAQE,WAAWzF,SAAS,EAAG,KACxD,EALA,cAWTqE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oDAAmDC,UAChEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CAAChB,UAAU,kDACrBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,2DAA0DC,SAAC,yBACxEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0DAAyDC,SACnE,MACC,MAAMgB,EAAQvD,EAAM6B,aACd2B,EAAanC,KAAKoC,MAAMF,GACxBG,EAAUrC,KAAKsC,MAA6B,IAAtBJ,EAAQC,IACpC,MAAM,GAANnF,OAAUmF,EAAU,KAAAnF,OAAIqF,EAAQE,WAAWzF,SAAS,EAAG,KACxD,EALA,cAWTqE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oDAAmDC,UAChEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CAAChB,UAAU,kDACrBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,2DAA0DC,SAAC,kBACxEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0DAAyDC,SACnE,MACC,MAAMsB,EAAexC,KAAKsC,MAAM3D,EAAM2B,mBAChC4B,EAAQlC,KAAKoC,MAAMI,EAAe,IAClCH,EAAUG,EAAe,GAC/B,MAAM,GAANxF,OAAUkF,EAAK,KAAAlF,OAAIqF,EAAQE,WAAWzF,SAAS,EAAG,KACnD,EALA,aAWR5B,IACCiG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oDAAmDC,UAChEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAACY,EAAAA,EAAY,CAACd,UAAU,kDACxBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,2DAA0DC,SAAC,iBACxEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0DAAyDC,SACnEvC,EAAMmC,6BAUnBnC,IACCqC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,EACzDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yDAAwDC,SAAA,EACrEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,mDAAkDC,SAAEvC,EAAMI,aACvEoC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,2CAA0CC,SACpDhG,EAAmB,+BAA2B,uBAGnD8F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8DAA6DC,SAAA,EAC1EC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wDAAuDC,SAAEvC,EAAMK,eAC5EmC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6CAA4CC,SACtDhG,EAAmB,+BAAyB,2BAGjD8F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0DAAyDC,SAAA,EACtEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,oDAAmDC,SAAEvC,EAAMM,cACxEkC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,yCAAwCC,SAClDhG,EAAmB,qBAAiB,6BAGzC8F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gEAA+DC,SAAA,EAC5EC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0DAAyDC,SAAEvC,EAAMO,YAC9EiC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,+CAA8CC,SAAC,yBAMnEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,2DAA0DC,SAAA,EACzEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,8BAA6BC,UAC5CF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACGhG,IACCiG,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oGAAmGC,SAAC,iBAIpHC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oGAAmGC,SAAC,cAGlHC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oGAAmGC,SAAC,gBAGlHC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oGAAmGC,SAAC,YAGlHC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oGAAmGC,SAAC,YAGlHC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oGAAmGC,SAAC,kBAGlHC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oGAAmGC,SAAC,iBAKtHC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,0EAAyEC,SACvFtG,GACCuG,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIsB,QAASvH,EAAmB,EAAI,EAAG+F,UAAU,yDAAwDC,SAAC,2BAIpF,IAAtBxG,EAAWkB,QACbuF,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIsB,QAASvH,EAAmB,EAAI,EAAG+F,UAAU,yDAAwDC,SAAC,iEAK5GxG,EAAW0C,IAAKG,IACdyD,SAAAA,EAAAA,MAAA,MAAiBC,UAAU,0CAAyCC,SAAA,CACjEhG,IACCiG,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oEAAmEC,SAC9E3D,EAAIE,eAAiB,OAG1B0D,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oEAAmEC,UApT7EwB,EAqTUnF,EAAIb,KApTzB,IAAIT,KAAKyG,GAAYC,mBAAmB,QAAS,CACtDC,QAAS,QACT7F,IAAK,UACLH,MAAO,gBAmTKuE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oEAAmEC,SAC9E3D,EAAIsF,SAAW3E,EAAWX,EAAIsF,UAAY,OAE7C1B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oEAAmEC,SAC9E3D,EAAIuF,UAAY5E,EAAWX,EAAIuF,WAAa,OAE/C3B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oEAAmEC,SAC9E3D,EAAI8C,YAAc,MACjB,MAAM6B,EAAQ3E,EAAI8C,YACZ8B,EAAanC,KAAKoC,MAAMF,GACxBG,EAAUrC,KAAKsC,MAA6B,IAAtBJ,EAAQC,IACpC,MAAM,GAANnF,OAAUmF,EAAU,KAAAnF,OAAIqF,EAAQE,WAAWzF,SAAS,EAAG,KACxD,EALkB,GAKZ,OAETqE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oEAAmEC,SAC9E3D,EAAIgD,cAAgB,MACnB,MAAMiC,EAAejF,EAAIgD,cACnB2B,EAAQlC,KAAKoC,MAAMI,EAAe,IAClCH,EAAUG,EAAe,GAC/B,MAAM,GAANxF,OAAUkF,EAAK,KAAAlF,OAAIqF,EAAQE,WAAWzF,SAAS,EAAG,KACnD,EALoB,GAKd,OAETqE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,QAAMF,UAAS,8CAAAjE,OACE,YAAfO,EAAIiC,OACA,oEACe,SAAfjC,EAAIiC,OACJ,wEACA,6DACH0B,SACAxF,EAAAA,UAAUqH,yBAAyBxF,EAAIiC,cAvCrCjC,EAAI1B,IA9SP6G,kB,kDCvPf,MAAMvD,EAEX,4BAAa6D,CAAgBrG,GAC3B,OAAOsG,EAAAA,WAAWC,IAAI,qBAADlG,OAAsBL,GAC7C,CAGA,gBAAOwG,CAAUzG,GACf,MAAMK,EAAML,EAAKJ,SACjB,OAAe,IAARS,GAAqB,IAARA,CACtB,CAGA,gBAAOqG,CAAU1G,EAAY2G,GAE3B,MAAM1G,EAAOD,EAAKH,cACZK,EAAQC,OAAOH,EAAKF,WAAa,GAAGM,SAAS,EAAG,KAChDC,EAAMF,OAAOH,EAAKL,WAAWS,SAAS,EAAG,KACzC4F,EAAU,GAAA1F,OAAML,EAAI,KAAAK,OAAIJ,EAAK,KAAAI,OAAID,GACvC,OAAOsG,EAASC,KAAKC,GAAWA,EAAQ7G,OAASgG,EACnD,CAGA,iCAAatD,CAAqB9E,EAAmBE,GACnD,IACE,MAAM0B,EAAQ,IAAID,KAAK3B,GACjB6B,EAAM,IAAIF,KAAKzB,GACfmC,EAAOT,EAAMK,cAGbiH,QAAiBC,KAAKT,gBAAgBrG,GAE5C,IAAI+G,EAAc,EAClB,MAAMC,EAAU,IAAI1H,KAAKC,GAGzB,KAAOyH,GAAWxH,GAEXsH,KAAKN,UAAUQ,IAAaF,KAAKL,UAAUO,EAASH,EAASH,WAChEK,IAEFC,EAAQvH,QAAQuH,EAAQtH,UAAY,GAGtC,OAAOqH,CAET,CAAE,MAAO5H,GAIP,OAHAC,QAAQD,MAAM,yDAAuCA,GAG9C2H,KAAKG,0BAA0BtJ,EAAWE,EACnD,CACF,CAGA,gCAAOoJ,CAA0BtJ,EAAmBE,GAClD,IAAKF,IAAcE,EAAS,OAAO,EAEnC,MAAM0B,EAAQ,IAAID,KAAK3B,GACjB6B,EAAM,IAAIF,KAAKzB,GAErB,IAAIkJ,EAAc,EAClB,MAAMC,EAAU,IAAI1H,KAAKC,GAEzB,KAAOyH,GAAWxH,GACXsH,KAAKN,UAAUQ,IAClBD,IAEFC,EAAQvH,QAAQuH,EAAQtH,UAAY,GAGtC,OAAOqH,CACT,CAGA,qBAAOG,CAAenH,EAAY2G,GAEhC,MAAM1G,EAAOD,EAAKH,cACZK,EAAQC,OAAOH,EAAKF,WAAa,GAAGM,SAAS,EAAG,KAChDC,EAAMF,OAAOH,EAAKL,WAAWS,SAAS,EAAG,KACzC4F,EAAU,GAAA1F,OAAML,EAAI,KAAAK,OAAIJ,EAAK,KAAAI,OAAID,GACjCwG,EAAUF,EAASS,KAAKC,GAAKA,EAAErH,OAASgG,GAC9C,OAAOa,EAAUA,EAAQS,MAAQ,IACnC,CAGA,yBAAOC,CAAmB3J,EAAmBE,EAAiB6I,GAC5D,MAAMnH,EAAQ,IAAID,KAAK3B,GACjB6B,EAAM,IAAIF,KAAKzB,GAErB,OAAO6I,EAAS/D,OAAOiE,IACrB,MAAMW,EAAc,IAAIjI,KAAKsH,EAAQ7G,MACrC,OAAOwH,GAAehI,GAASgI,GAAe/H,GAElD,CAGA,iBAAOM,CAAWC,GAChB,OAAOA,EAAKiG,mBAAmB,QAAS,CACtCC,QAAS,OACTjG,KAAM,UACNC,MAAO,OACPG,IAAK,WAET,CAGA,iBAAOoH,CAAWzH,EAAY2G,GAM5B,MAAMF,EAAYM,KAAKN,UAAUzG,GAC3B0G,EAAYK,KAAKL,UAAU1G,EAAM2G,GAGvC,MAAO,CACLe,cAAejB,IAAcC,EAC7BD,YACAC,YACAiB,YANkBjB,EAAYK,KAAKI,eAAenH,EAAM2G,QAAYiB,EAQxE,E,0IC3HF,MA6OA,EA7O8CxK,IAQvC,IARwC,MAC7CuH,EAAK,SACLC,EAAQ,IACRZ,EAAG,IACHT,EAAG,YACHsE,EAAc,mBAAe,UAC7BtD,EAAY,GAAE,SACduD,GAAW,GACZ1K,EACC,MAAO2K,EAAQC,IAAarK,EAAAA,EAAAA,WAAS,IAC9BsK,EAAcC,IAAmBvK,EAAAA,EAAAA,UAAS,IAAI4B,OAC9CoH,EAAUwB,IAAexK,EAAAA,EAAAA,UAAoB,KAC7CO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAGvCe,EAAAA,EAAAA,WAAU,KACaI,WACnBX,GAAW,GACX,IACE,MAAM8B,EAAOgI,EAAapI,cACpBiH,QAAiBrE,EAAAA,EAAgB6D,gBAAgBrG,GACvDkI,EAAYrB,EAASH,SACvB,CAAE,MAAOvH,GACPC,QAAQD,MAAM,0CAAgCA,GAC9C+I,EAAY,GACd,CAAC,QACChK,GAAW,EACb,GAGFiK,IACC,CAACH,EAAapI,gBAGjB,MAmDMwI,EAAqBC,IACzBJ,EAAgBK,IACd,MAAMC,EAAW,IAAIjJ,KAAKgJ,GAM1B,MALkB,SAAdD,EACFE,EAASC,SAASD,EAAS1I,WAAa,GAExC0I,EAASC,SAASD,EAAS1I,WAAa,GAEnC0I,KASLE,EApEuBC,MAC3B,MAAM1I,EAAOgI,EAAapI,cACpBK,EAAQ+H,EAAanI,WAErB8I,EAAW,IAAIrJ,KAAKU,EAAMC,EAAO,GACvB,IAAIX,KAAKU,EAAMC,EAAQ,EAAG,GAK1C,IAAI2I,EAAiBD,EAAShJ,SACP,IAAnBiJ,IAAsBA,EAAiB,GAC3CA,GAAkC,EAElC,MAAMjL,EAAY,IAAI2B,KAAKqJ,GAC3BhL,EAAU8B,QAAQ9B,EAAU+B,UAAYkJ,GAExC,MAAMC,EAAO,GACPC,EAAc,IAAIxJ,KAAK3B,GAG7B,IAAK,IAAIoL,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAMC,EAAUxG,EAAAA,EAAgBgF,WAAWsB,EAAapC,GAExDmC,EAAKI,KAAK,CACRlJ,KAAM,IAAIT,KAAKwJ,GACfI,eAAgBJ,EAAYjJ,aAAeI,EAC3CkJ,QAASL,EAAYM,kBAAmB,IAAI9J,MAAO8J,eACnDC,WAAY3E,IAAK,GAAArE,OAAQyI,EAAYlJ,cAAa,KAAAS,OAAIH,OAAO4I,EAAYjJ,WAAa,GAAGM,SAAS,EAAG,KAAI,KAAAE,OAAIH,OAAO4I,EAAYpJ,WAAWS,SAAS,EAAG,MACvJqG,UAAWwC,EAAQxC,UACnBC,UAAWuC,EAAQvC,UACnBiB,YAAasB,EAAQtB,kBAAeC,EACpC2B,WAAYC,QAASxF,GAAO+E,EAAc,IAAIxJ,KAAKyE,IAAUT,GAAOwF,EAAc,IAAIxJ,KAAKgE,MAG7FwF,EAAYrJ,QAAQqJ,EAAYpJ,UAAY,EAC9C,CAEA,OAAOmJ,GA8BYH,GAErB,OACErE,EAAAA,EAAAA,MAAA,OAAKC,UAAS,YAAAjE,OAAciE,GAAYC,SAAA,EAEtCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SACEQ,KAAK,OACLN,MAZDA,EACE,IAAIpF,KAAKoF,GAAOsB,mBAAmB,SADvB,GAab4B,YAAaA,EACb4B,UAAQ,EACR3B,SAAUA,EACV4B,QAASA,KAAO5B,GAAYE,GAAWD,GACvCxD,UAAU,iRAEZE,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAACH,UAAU,iFAIzBwD,IACCzD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8IAA6IC,SAAA,EAE1JF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sFAAqFC,SAAA,EAClGC,EAAAA,EAAAA,KAAA,UACEiF,QAASA,IAAMrB,EAAkB,QACjC9D,UAAU,uDAAsDC,UAEhEC,EAAAA,EAAAA,KAACkF,EAAAA,EAAe,CAACpF,UAAU,eAG7BE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAC9DyD,EAAahC,mBAAmB,QAAS,CAAE/F,MAAO,OAAQD,KAAM,eAGnEwE,EAAAA,EAAAA,KAAA,UACEiF,QAASA,IAAMrB,EAAkB,QACjC9D,UAAU,uDAAsDC,UAEhEC,EAAAA,EAAAA,KAACmF,EAAAA,EAAgB,CAACrF,UAAU,kBAKhCE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uDAAsDC,SAClE,CAAC,KAAM,KAAM,KAAM,UAAM,KAAM,KAAM,MAAM9D,IAAIL,IAC9CoE,EAAAA,EAAAA,KAAA,OAAeF,UAAU,iGAAgGC,SACtHnE,GADOA,OAOdoE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uDAAsDC,SAClEkE,EAAahI,IAAI,CAACL,EAAKwJ,KACtB,IAAIC,EAAU,4BACVC,EAAY,gCACZC,EAAc,GAwBlB,OAtBI3J,EAAIiJ,YACNQ,EAAU,cACVC,EAAY,cACH1J,EAAI+I,UACbY,EAAc,4BAGG3J,EAAIoG,WAEpBqD,EAAUzJ,EAAIiJ,WAAa,eAAiB,mCAC5CS,EAAY1J,EAAIiJ,WAAa,aAAe,sCACnCjJ,EAAIqG,YAEboD,EAAUzJ,EAAIiJ,WAAa,aAAe,+BAC1CS,EAAY1J,EAAIiJ,WAAa,aAAe,kCAG3CjJ,EAAIkJ,aACNO,EAAU,+BACVC,EAAY,qCAIZtF,EAAAA,EAAAA,KAAA,UAEEiF,QAASA,KAAOrJ,EAAIkJ,YA9GVvJ,KAExB,MAAMC,EAAOD,EAAKH,cACZK,EAAQC,OAAOH,EAAKF,WAAa,GAAGM,SAAS,EAAG,KAChDC,EAAMF,OAAOH,EAAKL,WAAWS,SAAS,EAAG,KACzC4F,EAAU,GAAA1F,OAAML,EAAI,KAAAK,OAAIJ,EAAK,KAAAI,OAAID,GACvCuE,EAASoB,GACTgC,GAAU,IAuGsCiC,CAAiB5J,EAAIL,MACvD8H,SAAUzH,EAAIkJ,WACdhF,UAAS,yBAAAjE,OACLwJ,EAAO,KAAAxJ,OAAIyJ,EAAS,KAAAzJ,OAAI0J,EAAW,qLAAA1J,OAGlCD,EAAI8I,eAAgC,GAAf,aAAiB,sDAGxB7B,MAAOjH,EAAIsH,YAAW,YAAArH,OAAeD,EAAIsH,aAAiBtH,EAAIoG,UAAY,iBAAWmB,EAAWpD,SAElHnE,EAAIL,KAAKL,WAZLkK,QAoBbpF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gFAA+EC,UAC5FF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6EAA4EC,SAAA,EAC1EF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EACxDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oFACfE,EAAAA,EAAAA,KAAA,QAAAD,SAAM,gBAERF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4FACfE,EAAAA,EAAAA,KAAA,QAAAD,SAAM,qBAGVtG,IACCuG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mCAAkCC,SAAC,iCAU3DuD,IACCtD,EAAAA,EAAAA,KAAA,OACEF,UAAU,qBACVmF,QAASA,IAAM1B,GAAU,SC7O7BjI,EAAcC,IAClB,MAAMC,EAAOD,EAAKH,cACZK,EAAQC,OAAOH,EAAKF,WAAa,GAAGM,SAAS,EAAG,KAChDC,EAAMF,OAAOH,EAAKL,WAAWS,SAAS,EAAG,KAC/C,MAAM,GAANE,OAAUL,EAAI,KAAAK,OAAIJ,EAAK,KAAAI,OAAID,IAmS7B,EAtR4DjD,IAQrD,IARsD,OAC3D2K,EAAM,QACNmC,EAAO,aACPC,EAAY,UACZ9M,EAAS,WACTC,EAAU,aACVC,EAAY,UACZ6M,GACDhN,EACC,MAAOiN,EAAUC,IAAe3M,EAAAA,EAAAA,UAAS,CACvC4M,WAAY,WACZC,WAAY,GACZC,SAAU,GACVC,WAAY,GACZC,OAAQ,MAGHzM,EAASC,IAAcR,EAAAA,EAAAA,WAAS,GACjCiN,IAAWT,GAEjBzL,EAAAA,EAAAA,WAAU,KACJqJ,GAEAuC,EADEH,EACU,CACVI,WAAYJ,EAAaI,WACzBC,WAAYL,EAAaK,WACzBC,SAAUN,EAAaM,SACvBC,WAAYP,EAAaO,WAAW7E,WACpC8E,OAAQR,EAAaQ,QAAU,IAGrB,CACVJ,WAAY,WACZC,WAAY,GACZC,SAAU,GACVC,WAAY,GACZC,OAAQ,MAIb,CAAC5C,EAAQoC,IAGZ,MAUMU,EAAmB/L,MAAOgM,EAAkCnG,KAChE2F,EAAY/B,IACV,MAAMwC,GAAOjK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQyH,GAAI,IAAE,CAACuC,GAAQnG,IAYpC,OATIoG,EAAQP,YAAcO,EAAQN,UAfhB3L,OAAOlB,EAAmBE,KAC9C,IACE,aAAa2E,EAAAA,EAAgBC,qBAAqB9E,EAAWE,EAC/D,CAAE,MAAOsB,GAGP,OAFAC,QAAQD,MAAM,yDAAuCA,GAE9CqD,EAAAA,EAAgByE,0BAA0BtJ,EAAWE,EAC9D,GASIkN,CAAcD,EAAQP,WAAYO,EAAQN,UAAUQ,KAAKnC,IACvDwB,EAAYrD,IAAOnG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdmG,GAAO,IACVyD,WAAY5B,EAAKjD,gBAKhBkF,KAqCLG,EAAqBrG,IACzB,MAAM,KAAEK,EAAI,MAAEP,GAAUE,EAAEC,OACb,eAATI,GAAkC,aAATA,EAC3B2F,EAAiB3F,EAAmCP,GAEpD2F,EAAY/B,IAAIzH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXyH,GAAI,IACP,CAACrD,GAAOP,MAKd,OAAKoD,GAGHtD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6EAA4EC,UACzFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oGAAmGC,SAAA,EAChHF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sFAAqFC,SAAA,EAClGC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sDAAqDC,SAChEoG,EAAS,6CAAgC,2CAE5CnG,EAAAA,EAAAA,KAAA,UACEiF,QAASQ,EACT3F,UAAU,6DAA4DC,UAEtEC,EAAAA,EAAAA,KAAC0G,EAAAA,EAAS,CAAC5G,UAAU,kBAIzBD,EAAAA,EAAAA,MAAA,QAAM8G,SA9DStM,UACnB+F,EAAEwG,iBACFlN,GAAW,GAEX,IACE,MAAMmN,EAAY,CAChBC,YAAajO,EACbkO,WAAYnO,EACZkN,WAAYF,EAASE,WACrBC,WAAYH,EAASG,WACrBC,SAAUJ,EAASI,SACnBC,WAAYe,SAASpB,EAASK,YAC9B5H,OAAQ,UACR6H,OAAQN,EAASM,aAAU/C,GAGzBgD,EAEFc,MAAM,qEAEA1M,EAAU,UAAA2M,gBAAgBL,GAGlClB,IACAF,GACF,CAAE,MAAO9K,GACPC,QAAQD,MAAM,mDAA4CA,GAC1DsM,MAAM,kDACR,CAAC,QACCvN,GAAW,EACb,GAgCkCoG,UAAU,gBAAeC,SAAA,EAErDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,EACzDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4DAA2DC,SAAC,iBAC1EC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gCAA+BC,SAAEjH,QAGhD+G,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EAEpDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,kEAAiEC,SAAC,qBAGnFF,EAAAA,EAAAA,MAAA,UACEY,KAAK,aACLP,MAAO0F,EAASE,WAChB3F,SAAUsG,EACVU,UAAQ,EACRrH,UAAU,+MAA8MC,SAAA,EAExNC,EAAAA,EAAAA,KAAA,UAAQE,MAAM,WAAUH,SAAC,eACzBC,EAAAA,EAAAA,KAAA,UAAQE,MAAM,aAAYH,SAAC,QAC3BC,EAAAA,EAAAA,KAAA,UAAQE,MAAM,iBAAgBH,SAAC,0BAC/BC,EAAAA,EAAAA,KAAA,UAAQE,MAAM,kBAAiBH,SAAC,2BAChCC,EAAAA,EAAAA,KAAA,UAAQE,MAAM,kBAAiBH,SAAC,2BAChCC,EAAAA,EAAAA,KAAA,UAAQE,MAAM,eAAcH,SAAC,mCAKjCF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,kEAAiEC,SAAC,yBAGnFC,EAAAA,EAAAA,KAAA,SACEQ,KAAK,SACLC,KAAK,aACLP,MAAO0F,EAASK,WAChB9F,SAAUsG,EACVlH,IAAI,IACJ4H,UAAQ,EACRrH,UAAU,+MACVsD,YAAY,UAKhBvD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,kEAAiEC,SAAC,+BAGnFC,EAAAA,EAAAA,KAACoH,EAAU,CACTlH,MAAO0F,EAASG,WAChB5F,SAAW5E,GAAS6K,EAAiB,aAAc7K,GACnDgE,IAAKjE,EAAW,IAAIR,MACpBsI,YAAY,iCACZtD,UAAU,eAKdD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,kEAAiEC,SAAC,wBAGnFC,EAAAA,EAAAA,KAACoH,EAAU,CACTlH,MAAO0F,EAASI,SAChB7F,SAAW5E,GAAS6K,EAAiB,WAAY7K,GACjDgE,IAAKqG,EAASG,YAAczK,EAAW,IAAIR,MAC3CsI,YAAY,yBACZtD,UAAU,kBAMhBD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,kEAAiEC,SAAC,cAGnFC,EAAAA,EAAAA,KAAA,YACES,KAAK,SACLP,MAAO0F,EAASM,OAChB/F,SAAUsG,EACVY,KAAM,EACNvH,UAAU,+MACVsD,YAAY,6DAKfwC,EAASG,YAAcH,EAASI,WAC/BnG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gDAA+CC,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4DAA2DC,SAAC,+BAC1EF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC7CF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mCAAkCC,SAAC,SACnDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wCAAuCC,SACpD,IAAIjF,KAAK8K,EAASG,YAAYvE,mBAAmB,eAGtD3B,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mCAAkCC,SAAC,SACnDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wCAAuCC,SACpD,IAAIjF,KAAK8K,EAASI,UAAUxE,mBAAmB,eAGpD3B,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mCAAkCC,SAAC,wBACnDF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,wCAAuCC,SAAA,CACpD6F,EAASK,WAAW,iBAGzBpG,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mCAAkCC,SAAC,UACnDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wCAAuCC,SACpDxF,EAAU,UAAA+M,kBAAkB1B,EAASE,wBAOhDjG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gFAA+EC,SAAA,EAC5FC,EAAAA,EAAAA,KAAA,UACEQ,KAAK,SACLyE,QAASQ,EACT3F,UAAU,gJAA+IC,SAC1J,sBAGDC,EAAAA,EAAAA,KAAA,UACEQ,KAAK,SACL6C,SAAU5J,EACVqG,UAAU,8IAA6IC,SAEtJtG,EAAU,gBAAgB0M,EAAS,eAAY,8CAzJxC,K","sources":["components/AttendanceOverview.tsx","services/calendarService.ts","components/DatePicker.tsx","components/LeaveRequestModal.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  CalendarIcon, \r\n  ClockIcon, \r\n  ChartBarIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { hrService, Attendance } from '../services/hrService';\r\nimport { CalendarService } from '../services/calendarService';\r\n\r\ninterface AttendanceOverviewProps {\r\n  companyId: number;\r\n  employeeId?: number; // Voliteľné - ak nie je uvedené, zobrazí všetkých zamestnancov\r\n  employeeName?: string;\r\n  isCompanyView?: boolean; // Pre rozlíšenie medzi pohľadom firmy a zamestnanca\r\n}\r\n\r\ntype PeriodType = 'year' | 'month' | 'custom' | 'week';\r\n\r\ninterface PeriodOption {\r\n  value: PeriodType;\r\n  label: string;\r\n}\r\n\r\nconst AttendanceOverview: React.FC<AttendanceOverviewProps> = ({\r\n  companyId,\r\n  employeeId,\r\n  employeeName,\r\n  isCompanyView = false\r\n}) => {\r\n  const [selectedPeriod, setSelectedPeriod] = useState<PeriodType>('month');\r\n  const [startDate, setStartDate] = useState<string>('');\r\n  const [endDate, setEndDate] = useState<string>('');\r\n  const [attendance, setAttendance] = useState<Attendance[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [employees, setEmployees] = useState<any[]>([]);\r\n  const [selectedEmployee, setSelectedEmployee] = useState<number | null>(null);\r\n  const [showAllEmployees, setShowAllEmployees] = useState<boolean>(false);\r\n\r\n  const periodOptions: PeriodOption[] = [\r\n    { value: 'week', label: 'Tento týždeň' },\r\n    { value: 'month', label: 'Tento mesiac' },\r\n    { value: 'year', label: 'Tento rok' },\r\n    { value: 'custom', label: 'Vlastné obdobie' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (isCompanyView) {\r\n      loadEmployees();\r\n    }\r\n    updateDateRange();\r\n  }, [selectedPeriod, isCompanyView]);\r\n\r\n  useEffect(() => {\r\n    if (startDate && endDate) {\r\n      loadAttendance();\r\n    }\r\n  }, [startDate, endDate, selectedEmployee, showAllEmployees]);\r\n\r\n  const loadEmployees = async () => {\r\n    try {\r\n      const employeesData = await hrService.getEmployees(companyId);\r\n      setEmployees(employeesData);\r\n      if (employeesData.length > 0) {\r\n        setSelectedEmployee(employeesData[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Chyba pri načítaní zamestnancov:', error);\r\n    }\r\n  };\r\n\r\n  const updateDateRange = () => {\r\n    const now = new Date();\r\n    let start: Date;\r\n    let end: Date;\r\n\r\n    switch (selectedPeriod) {\r\n      case 'week':\r\n        start = new Date(now);\r\n        start.setDate(now.getDate() - now.getDay() + 1); // Pondelok\r\n        end = new Date(now);\r\n        break;\r\n      case 'month':\r\n        start = new Date(now.getFullYear(), now.getMonth(), 1);\r\n        end = new Date(now.getFullYear(), now.getMonth() + 1, 0); // Posledný deň mesiaca\r\n        break;\r\n      case 'year':\r\n        start = new Date(now.getFullYear(), 0, 1);\r\n        end = new Date(now.getFullYear(), 11, 31); // 31. december\r\n        break;\r\n      case 'custom':\r\n        // Použije aktuálne hodnoty startDate a endDate\r\n        return;\r\n      default:\r\n        start = new Date(now.getFullYear(), now.getMonth(), 1);\r\n        end = new Date(now.getFullYear(), now.getMonth() + 1, 0);\r\n    }\r\n\r\n    // Použiť lokálne dátumové formátovanie namiesto toISOString()\r\n    const formatDate = (date: Date): string => {\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, '0');\r\n      const day = String(date.getDate()).padStart(2, '0');\r\n      return `${year}-${month}-${day}`;\r\n    };\r\n\r\n    setStartDate(formatDate(start));\r\n    setEndDate(formatDate(end));\r\n  };\r\n\r\n  const loadAttendance = async () => {\r\n    if (!startDate || !endDate) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      if (showAllEmployees) {\r\n        // Načítanie dochádzky pre všetkých zamestnancov\r\n        const allAttendanceData = await Promise.all(\r\n          employees.map(async (emp) => {\r\n            try {\r\n              const empAttendance = await hrService.getAttendance(\r\n                companyId,\r\n                emp.id,\r\n                startDate,\r\n                endDate\r\n              );\r\n              return empAttendance.map(att => ({\r\n                ...att,\r\n                employee_name: `${emp.first_name} ${emp.last_name}`\r\n              }));\r\n            } catch (error) {\r\n              console.error(`Chyba pri načítaní dochádzky pre zamestnanca ${emp.id}:`, error);\r\n              return [];\r\n            }\r\n          })\r\n        );\r\n        \r\n        // Spojenie všetkých dochádzok do jedného poľa\r\n        const combinedAttendance = allAttendanceData.flat();\r\n        setAttendance(combinedAttendance);\r\n      } else {\r\n        const targetEmployeeId = employeeId || selectedEmployee;\r\n        if (!targetEmployeeId) return;\r\n\r\n        // Kontrola duplicitných záznamov\r\n        try {\r\n          const duplicates = await hrService.checkAttendanceDuplicates(\r\n            companyId,\r\n            targetEmployeeId,\r\n            startDate,\r\n            endDate\r\n          );\r\n          if (duplicates.duplicates && duplicates.duplicates.length > 0) {\r\n            console.warn('Nájdené duplicitné záznamy dochádzky:', duplicates.duplicates);\r\n          }\r\n        } catch (error) {\r\n          console.error('Chyba pri kontrole duplicitných záznamov:', error);\r\n        }\r\n\r\n        const attendanceData = await hrService.getAttendance(\r\n          companyId, \r\n          targetEmployeeId, \r\n          startDate, \r\n          endDate\r\n        );\r\n        setAttendance(attendanceData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Chyba pri načítaní dochádzky:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const calculateStats = async () => {\r\n    if (!attendance.length) return null;\r\n\r\n    let totalDays: number;\r\n    let presentDays: number;\r\n    let absentDays: number;\r\n    let lateDays: number;\r\n    \r\n         if (showAllEmployees) {\r\n       // Pre všetkých zamestnancov počítame podľa kalendára\r\n       // Počítame pracovné dni v období pomocou CalendarService\r\n       const workingDaysInPeriod = await CalendarService.calculateWorkingDays(startDate, endDate);\r\n       \r\n       totalDays = workingDaysInPeriod; // Celkový počet pracovných dní v období\r\n       \r\n       // Počítame dni pracovného voľna ako celkové pracovné dni mínus neprítomné dni\r\n       const totalAbsentDays = attendance.filter(a => a.status === 'absent').length;\r\n       presentDays = totalAbsentDays; // Dni pracovného voľna = neprítomné dni\r\n       absentDays = totalDays - totalAbsentDays; // Prítomné dni = celkové dni mínus neprítomné dni\r\n       lateDays = attendance.filter(a => a.status === 'late').length;\r\n    } else {\r\n      // Pre individuálneho zamestnanca počítame pracovné dni v období\r\n      const workingDaysInPeriod = await CalendarService.calculateWorkingDays(startDate, endDate);\r\n      totalDays = workingDaysInPeriod;\r\n      \r\n      // Počítame unikátne dni s dochádzkou (aby sme eliminovali duplicity)\r\n      const presentDates = new Set(\r\n        attendance\r\n          .filter(a => a.status === 'present')\r\n          .map(a => a.date)\r\n      );\r\n      const lateDates = new Set(\r\n        attendance\r\n          .filter(a => a.status === 'late')\r\n          .map(a => a.date)\r\n      );\r\n      \r\n      // Počítame dni s dochádzkou (prítomné + meškanie)\r\n      const daysWithAttendance = new Set();\r\n      presentDates.forEach(date => daysWithAttendance.add(date));\r\n      lateDates.forEach(date => daysWithAttendance.add(date));\r\n      presentDays = daysWithAttendance.size;\r\n      \r\n      // Neprítomné dni = celkové pracovné dni mínus dni s dochádzkou\r\n      absentDays = Math.max(0, totalDays - presentDays);\r\n      lateDays = lateDates.size;\r\n    }\r\n    \r\n    const totalHours = attendance.reduce((sum, a) => sum + (a.total_hours || 0), 0);\r\n    const totalBreakMinutes = attendance.reduce((sum, a) => sum + (a.break_minutes || 0), 0);\r\n    \r\n    const averageHours = totalDays > 0 ? totalHours / totalDays : 0;\r\n    // Účasť = (dni s dochádzkou / celkové pracovné dni) * 100\r\n    const attendanceRate = totalDays > 0 ? Math.min(100, (presentDays / totalDays) * 100) : 0;\r\n    \r\n    // Debug informácie\r\n    console.log('Attendance Overview Debug:', {\r\n      attendanceLength: attendance.length,\r\n      totalHours,\r\n      totalBreakMinutes,\r\n      presentDays,\r\n      absentDays,\r\n      totalDays,\r\n      attendanceRate,\r\n      averageHours,\r\n      uniqueDates: showAllEmployees ? 'N/A' : new Set(attendance.map(a => a.date)).size,\r\n      presentDates: showAllEmployees ? 'N/A' : new Set(attendance.filter(a => a.status === 'present').map(a => a.date)).size,\r\n      lateDates: showAllEmployees ? 'N/A' : new Set(attendance.filter(a => a.status === 'late').map(a => a.date)).size\r\n    });\r\n\r\n    // Pre všetkých zamestnancov pridáme informáciu o počte zamestnancov\r\n    const uniqueEmployees = showAllEmployees \r\n      ? new Set(attendance.map(a => a.employee_name)).size \r\n      : 1;\r\n\r\n    return {\r\n      totalDays,\r\n      presentDays,\r\n      absentDays,\r\n      lateDays,\r\n      totalHours,\r\n      totalBreakMinutes,\r\n      averageHours,\r\n      attendanceRate,\r\n      uniqueEmployees\r\n    };\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('sk-SK', {\r\n      weekday: 'short',\r\n      day: '2-digit',\r\n      month: '2-digit'\r\n    });\r\n  };\r\n\r\n  const formatTime = (timeString: string | null) => {\r\n    if (!timeString) return '-';\r\n    \r\n    try {\r\n      // Ak je to už čas v formáte HH:MM, vráť ho\r\n      if (timeString.match(/^\\d{2}:\\d{2}$/)) {\r\n        return timeString;\r\n      }\r\n      \r\n      // Ak je to dátum, skús ho spracovať\r\n      const date = new Date(timeString);\r\n      if (isNaN(date.getTime())) {\r\n        return '-';\r\n      }\r\n      \r\n      return date.toLocaleTimeString('sk-SK', {\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        hour12: false\r\n      });\r\n    } catch (error) {\r\n      console.error('Chyba pri formátovaní času:', timeString, error);\r\n      return '-';\r\n    }\r\n  };\r\n\r\n  const [stats, setStats] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    const loadStats = async () => {\r\n      const calculatedStats = await calculateStats();\r\n      setStats(calculatedStats);\r\n    };\r\n    \r\n    if (attendance.length > 0) {\r\n      loadStats();\r\n    } else {\r\n      setStats(null);\r\n    }\r\n  }, [attendance, showAllEmployees, startDate, endDate, employees.length]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-dark-800 rounded-lg shadow p-6\">\r\n      <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-6\">\r\n        <div>\r\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n            Prehľad dochádzky\r\n          </h3>\r\n          {employeeName && (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              {employeeName}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Výber obdobia */}\r\n        <div className=\"flex flex-col sm:flex-row gap-3 mt-4 lg:mt-0\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <CalendarIcon className=\"w-5 h-5 text-gray-400\" />\r\n            <select\r\n              value={selectedPeriod}\r\n              onChange={(e) => setSelectedPeriod(e.target.value as PeriodType)}\r\n              className=\"px-3 py-2 border border-gray-300 dark:border-dark-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-dark-700 text-gray-900 dark:text-white text-sm\"\r\n            >\r\n              {periodOptions.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {selectedPeriod === 'custom' && (\r\n            <div className=\"flex items-center space-x-2\">\r\n              <input\r\n                type=\"date\"\r\n                value={startDate}\r\n                onChange={(e) => setStartDate(e.target.value)}\r\n                className=\"px-3 py-2 border border-gray-300 dark:border-dark-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-dark-700 text-gray-900 dark:text-white text-sm\"\r\n              />\r\n              <span className=\"text-gray-500\">-</span>\r\n              <input\r\n                type=\"date\"\r\n                value={endDate}\r\n                onChange={(e) => setEndDate(e.target.value)}\r\n                className=\"px-3 py-2 border border-gray-300 dark:border-dark-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-dark-700 text-gray-900 dark:text-white text-sm\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Výber zamestnanca pre firmu */}\r\n      {isCompanyView && employees.length > 0 && (\r\n        <div className=\"mb-6\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              Zobrazenie dochádzky\r\n            </label>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <label className=\"flex items-center\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"viewType\"\r\n                  checked={!showAllEmployees}\r\n                  onChange={() => setShowAllEmployees(false)}\r\n                  className=\"mr-2\"\r\n                />\r\n                <span className=\"text-sm text-gray-700 dark:text-gray-300\">Individuálne</span>\r\n              </label>\r\n              <label className=\"flex items-center\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"viewType\"\r\n                  checked={showAllEmployees}\r\n                  onChange={() => setShowAllEmployees(true)}\r\n                  className=\"mr-2\"\r\n                />\r\n                <span className=\"text-sm text-gray-700 dark:text-gray-300\">Všetci zamestnanci</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          \r\n          {!showAllEmployees && (\r\n            <select\r\n              value={selectedEmployee || ''}\r\n              onChange={(e) => setSelectedEmployee(Number(e.target.value))}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-dark-700 text-gray-900 dark:text-white\"\r\n            >\r\n              {employees.map(emp => (\r\n                <option key={emp.id} value={emp.id}>\r\n                  {emp.first_name} {emp.last_name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Štatistiky */}\r\n      {stats && (\r\n        <div className={`grid grid-cols-2 md:grid-cols-4 ${showAllEmployees ? 'lg:grid-cols-5' : ''} gap-4 mb-6`}>\r\n          <div className=\"bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg\">\r\n            <div className=\"flex items-center\">\r\n              <ChartBarIcon className=\"w-8 h-8 text-blue-600 dark:text-blue-400\" />\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm font-medium text-blue-600 dark:text-blue-400\">Účasť</p>\r\n                <p className=\"text-2xl font-bold text-blue-900 dark:text-blue-100\">\r\n                  {stats.attendanceRate.toFixed(1)}%\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-green-50 dark:bg-green-900/20 p-4 rounded-lg\">\r\n            <div className=\"flex items-center\">\r\n              <ClockIcon className=\"w-8 h-8 text-green-600 dark:text-green-400\" />\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm font-medium text-green-600 dark:text-green-400\">Celkové hodiny</p>\r\n                <p className=\"text-2xl font-bold text-green-900 dark:text-green-100\">\r\n                  {(() => {\r\n                    const hours = stats.totalHours;\r\n                    const wholeHours = Math.floor(hours);\r\n                    const minutes = Math.round((hours - wholeHours) * 60);\r\n                    return `${wholeHours}:${minutes.toString().padStart(2, '0')}`;\r\n                  })()}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-yellow-50 dark:bg-yellow-900/20 p-4 rounded-lg\">\r\n            <div className=\"flex items-center\">\r\n              <ClockIcon className=\"w-8 h-8 text-yellow-600 dark:text-yellow-400\" />\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm font-medium text-yellow-600 dark:text-yellow-400\">Priemerné hodiny</p>\r\n                <p className=\"text-2xl font-bold text-yellow-900 dark:text-yellow-100\">\r\n                  {(() => {\r\n                    const hours = stats.averageHours;\r\n                    const wholeHours = Math.floor(hours);\r\n                    const minutes = Math.round((hours - wholeHours) * 60);\r\n                    return `${wholeHours}:${minutes.toString().padStart(2, '0')}`;\r\n                  })()}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-purple-50 dark:bg-purple-900/20 p-4 rounded-lg\">\r\n            <div className=\"flex items-center\">\r\n              <ClockIcon className=\"w-8 h-8 text-purple-600 dark:text-purple-400\" />\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm font-medium text-purple-600 dark:text-purple-400\">Prestávky</p>\r\n                <p className=\"text-2xl font-bold text-purple-900 dark:text-purple-100\">\r\n                  {(() => {\r\n                    const totalMinutes = Math.round(stats.totalBreakMinutes);\r\n                    const hours = Math.floor(totalMinutes / 60);\r\n                    const minutes = totalMinutes % 60;\r\n                    return `${hours}:${minutes.toString().padStart(2, '0')}`;\r\n                  })()}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {showAllEmployees && (\r\n            <div className=\"bg-indigo-50 dark:bg-indigo-900/20 p-4 rounded-lg\">\r\n              <div className=\"flex items-center\">\r\n                <ChartBarIcon className=\"w-8 h-8 text-indigo-600 dark:text-indigo-400\" />\r\n                <div className=\"ml-3\">\r\n                  <p className=\"text-sm font-medium text-indigo-600 dark:text-indigo-400\">Zamestnanci</p>\r\n                  <p className=\"text-2xl font-bold text-indigo-900 dark:text-indigo-100\">\r\n                    {stats.uniqueEmployees}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n             {/* Detailné štatistiky */}\r\n       {stats && (\r\n         <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\r\n           <div className=\"text-center p-3 bg-gray-50 dark:bg-dark-700 rounded-lg\">\r\n             <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.totalDays}</p>\r\n             <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n               {showAllEmployees ? 'Celkovo pracovných dní' : 'Celkovo dní'}\r\n             </p>\r\n           </div>\r\n           <div className=\"text-center p-3 bg-green-50 dark:bg-green-900/20 rounded-lg\">\r\n             <p className=\"text-2xl font-bold text-green-600 dark:text-green-400\">{stats.presentDays}</p>\r\n             <p className=\"text-sm text-green-600 dark:text-green-400\">\r\n               {showAllEmployees ? 'Dni pracovného voľna' : 'Prítomné dni'}\r\n             </p>\r\n           </div>\r\n           <div className=\"text-center p-3 bg-red-50 dark:bg-red-900/20 rounded-lg\">\r\n             <p className=\"text-2xl font-bold text-red-600 dark:text-red-400\">{stats.absentDays}</p>\r\n             <p className=\"text-sm text-red-600 dark:text-red-400\">\r\n               {showAllEmployees ? 'Prítomné dni' : 'Neprítomné dni'}\r\n             </p>\r\n           </div>\r\n           <div className=\"text-center p-3 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg\">\r\n             <p className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">{stats.lateDays}</p>\r\n             <p className=\"text-sm text-yellow-600 dark:text-yellow-400\">Meškania</p>\r\n           </div>\r\n         </div>\r\n       )}\r\n\r\n      {/* Tabuľka dochádzky */}\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-dark-600\">\r\n          <thead className=\"bg-gray-50 dark:bg-dark-700\">\r\n            <tr>\r\n              {showAllEmployees && (\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                  Zamestnanec\r\n                </th>\r\n              )}\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                Dátum\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                Príchod\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                Odchod\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                Hodiny\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                Prestávky\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                Status\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white dark:bg-dark-800 divide-y divide-gray-200 dark:divide-dark-600\">\r\n            {loading ? (\r\n              <tr>\r\n                <td colSpan={showAllEmployees ? 7 : 6} className=\"px-6 py-4 text-center text-gray-500 dark:text-gray-400\">\r\n                  Načítavam...\r\n                </td>\r\n              </tr>\r\n            ) : attendance.length === 0 ? (\r\n              <tr>\r\n                <td colSpan={showAllEmployees ? 7 : 6} className=\"px-6 py-4 text-center text-gray-500 dark:text-gray-400\">\r\n                  Žiadne záznamy dochádzky pre vybrané obdobie\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              attendance.map((att) => (\r\n                <tr key={att.id} className=\"hover:bg-gray-50 dark:hover:bg-dark-700\">\r\n                  {showAllEmployees && (\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                      {att.employee_name || '-'}\r\n                    </td>\r\n                  )}\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                    {formatDate(att.date)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                    {att.check_in ? formatTime(att.check_in) : '-'}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                    {att.check_out ? formatTime(att.check_out) : '-'}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                    {att.total_hours ? (() => {\r\n                      const hours = att.total_hours;\r\n                      const wholeHours = Math.floor(hours);\r\n                      const minutes = Math.round((hours - wholeHours) * 60);\r\n                      return `${wholeHours}:${minutes.toString().padStart(2, '0')}`;\r\n                    })() : '-'}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                    {att.break_minutes ? (() => {\r\n                      const totalMinutes = att.break_minutes;\r\n                      const hours = Math.floor(totalMinutes / 60);\r\n                      const minutes = totalMinutes % 60;\r\n                      return `${hours}:${minutes.toString().padStart(2, '0')}`;\r\n                    })() : '-'}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                      att.status === 'present' \r\n                        ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200'\r\n                        : att.status === 'late'\r\n                        ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200'\r\n                        : 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200'\r\n                    }`}>\r\n                      {hrService.getAttendanceStatusLabel(att.status)}\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceOverview;\r\n","import { apiService } from './apiService';\r\n\r\nexport interface Holiday {\r\n  date: string;\r\n  title: string;\r\n  description?: string;\r\n}\r\n\r\nexport interface WorkCalendar {\r\n  year: number;\r\n  holidays: Holiday[];\r\n  source: 'google_calendar' | 'local_fallback';\r\n}\r\n\r\nexport class CalendarService {\r\n  // Získanie pracovného kalendára pre rok\r\n  static async getWorkCalendar(year: number): Promise<WorkCalendar> {\r\n    return apiService.get(`/hr/work-calendar/${year}`);\r\n  }\r\n\r\n  // Kontrola či je deň víkend\r\n  static isWeekend(date: Date): boolean {\r\n    const day = date.getDay();\r\n    return day === 0 || day === 6; // 0 = nedeľa, 6 = sobota\r\n  }\r\n\r\n  // Kontrola či je deň sviatok\r\n  static isHoliday(date: Date, holidays: Holiday[]): boolean {\r\n    // Použijeme lokálny dátum namiesto UTC aby sme predišli posunu\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const dateString = `${year}-${month}-${day}`;\r\n    return holidays.some(holiday => holiday.date === dateString);\r\n  }\r\n\r\n  // Výpočet pracovných dní s aktuálnym kalendárom\r\n  static async calculateWorkingDays(startDate: string, endDate: string): Promise<number> {\r\n    try {\r\n      const start = new Date(startDate);\r\n      const end = new Date(endDate);\r\n      const year = start.getFullYear();\r\n\r\n      // Získanie aktuálneho kalendára\r\n      const calendar = await this.getWorkCalendar(year);\r\n\r\n      let workingDays = 0;\r\n      const current = new Date(start);\r\n\r\n      // Iterujeme cez každý deň v rozsahu\r\n      while (current <= end) {\r\n        // Ak nie je víkend a nie je sviatok, počítame ako pracovný deň\r\n        if (!this.isWeekend(current) && !this.isHoliday(current, calendar.holidays)) {\r\n          workingDays++;\r\n        }\r\n        current.setDate(current.getDate() + 1);\r\n      }\r\n\r\n      return workingDays;\r\n\r\n    } catch (error) {\r\n      console.error('❌ Chyba pri výpočte pracovných dní:', error);\r\n      \r\n      // Fallback na základný výpočet\r\n      return this.calculateBasicWorkingDays(startDate, endDate);\r\n    }\r\n  }\r\n\r\n  // Základný výpočet pracovných dní (fallback)\r\n  static calculateBasicWorkingDays(startDate: string, endDate: string): number {\r\n    if (!startDate || !endDate) return 0;\r\n    \r\n    const start = new Date(startDate);\r\n    const end = new Date(endDate);\r\n    \r\n    let workingDays = 0;\r\n    const current = new Date(start);\r\n    \r\n    while (current <= end) {\r\n      if (!this.isWeekend(current)) {\r\n        workingDays++;\r\n      }\r\n      current.setDate(current.getDate() + 1);\r\n    }\r\n    \r\n    return workingDays;\r\n  }\r\n\r\n  // Získanie názvu sviatku pre dátum\r\n  static getHolidayName(date: Date, holidays: Holiday[]): string | null {\r\n    // Použijeme lokálny dátum namiesto UTC aby sme predišli posunu\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const dateString = `${year}-${month}-${day}`;\r\n    const holiday = holidays.find(h => h.date === dateString);\r\n    return holiday ? holiday.title : null;\r\n  }\r\n\r\n  // Získanie všetkých sviatkov v rozsahu dátumov\r\n  static getHolidaysInRange(startDate: string, endDate: string, holidays: Holiday[]): Holiday[] {\r\n    const start = new Date(startDate);\r\n    const end = new Date(endDate);\r\n    \r\n    return holidays.filter(holiday => {\r\n      const holidayDate = new Date(holiday.date);\r\n      return holidayDate >= start && holidayDate <= end;\r\n    });\r\n  }\r\n\r\n  // Formátovanie dátumu pre zobrazenie\r\n  static formatDate(date: Date): string {\r\n    return date.toLocaleDateString('sk-SK', {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  }\r\n\r\n  // Získanie informácií o dni (pracovný/nepracovný, sviatok)\r\n  static getDayInfo(date: Date, holidays: Holiday[]): {\r\n    isWorkingDay: boolean;\r\n    isWeekend: boolean;\r\n    isHoliday: boolean;\r\n    holidayName?: string | null;\r\n  } {\r\n    const isWeekend = this.isWeekend(date);\r\n    const isHoliday = this.isHoliday(date, holidays);\r\n    const holidayName = isHoliday ? this.getHolidayName(date, holidays) : undefined;\r\n    \r\n    return {\r\n      isWorkingDay: !isWeekend && !isHoliday,\r\n      isWeekend,\r\n      isHoliday,\r\n      holidayName\r\n    };\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ChevronLeftIcon, ChevronRightIcon, CalendarIcon } from '@heroicons/react/24/outline';\r\nimport { CalendarService, Holiday } from '../services/calendarService';\r\n\r\ninterface DatePickerProps {\r\n  value: string;\r\n  onChange: (date: string) => void;\r\n  min?: string;\r\n  max?: string;\r\n  placeholder?: string;\r\n  className?: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst DatePicker: React.FC<DatePickerProps> = ({\r\n  value,\r\n  onChange,\r\n  min,\r\n  max,\r\n  placeholder = 'Vyberte dátum',\r\n  className = '',\r\n  disabled = false\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n  const [holidays, setHolidays] = useState<Holiday[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Načítanie sviatkov pre aktuálny rok\r\n  useEffect(() => {\r\n    const loadHolidays = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const year = currentMonth.getFullYear();\r\n        const calendar = await CalendarService.getWorkCalendar(year);\r\n        setHolidays(calendar.holidays);\r\n      } catch (error) {\r\n        console.error('Chyba pri načítaní sviatkov:', error);\r\n        setHolidays([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadHolidays();\r\n  }, [currentMonth.getFullYear()]);\r\n\r\n  // Generovanie kalendára pre aktuálny mesiac\r\n  const generateCalendarDays = () => {\r\n    const year = currentMonth.getFullYear();\r\n    const month = currentMonth.getMonth();\r\n    \r\n    const firstDay = new Date(year, month, 1);\r\n    const lastDay = new Date(year, month + 1, 0);\r\n    \r\n    // Na Slovensku začína týždeň pondelkom (1), nie nedeľou (0)\r\n    // getDay() vracia 0=nedeľa, 1=pondelok, ..., 6=sobota\r\n    // Pre slovenský kalendár potrebujeme: 0=pondelok, 1=utorok, ..., 6=nedeľa\r\n    let firstDayOfWeek = firstDay.getDay();\r\n    if (firstDayOfWeek === 0) firstDayOfWeek = 7; // Nedeľa sa stáva 7\r\n    firstDayOfWeek = firstDayOfWeek - 1; // Posunieme o 1, aby pondelok bol 0\r\n    \r\n    const startDate = new Date(firstDay);\r\n    startDate.setDate(startDate.getDate() - firstDayOfWeek);\r\n    \r\n    const days = [];\r\n    const currentDate = new Date(startDate);\r\n    \r\n    // Generujeme 6 týždňov (42 dní) pre konzistentný layout\r\n    for (let i = 0; i < 42; i++) {\r\n      const dayInfo = CalendarService.getDayInfo(currentDate, holidays);\r\n      \r\n      days.push({\r\n        date: new Date(currentDate),\r\n        isCurrentMonth: currentDate.getMonth() === month,\r\n        isToday: currentDate.toDateString() === new Date().toDateString(),\r\n        isSelected: value === `${currentDate.getFullYear()}-${String(currentDate.getMonth() + 1).padStart(2, '0')}-${String(currentDate.getDate()).padStart(2, '0')}`,\r\n        isWeekend: dayInfo.isWeekend,\r\n        isHoliday: dayInfo.isHoliday,\r\n        holidayName: dayInfo.holidayName || undefined,\r\n        isDisabled: Boolean((min && currentDate < new Date(min)) || (max && currentDate > new Date(max)))\r\n      });\r\n      \r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n    \r\n    return days;\r\n  };\r\n\r\n  const handleDateSelect = (date: Date) => {\r\n    // Použijeme lokálny dátum namiesto UTC aby sme predišli posunu\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const dateString = `${year}-${month}-${day}`;\r\n    onChange(dateString);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleMonthChange = (direction: 'prev' | 'next') => {\r\n    setCurrentMonth(prev => {\r\n      const newMonth = new Date(prev);\r\n      if (direction === 'prev') {\r\n        newMonth.setMonth(newMonth.getMonth() - 1);\r\n      } else {\r\n        newMonth.setMonth(newMonth.getMonth() + 1);\r\n      }\r\n      return newMonth;\r\n    });\r\n  };\r\n\r\n  const formatDisplayValue = () => {\r\n    if (!value) return '';\r\n    return new Date(value).toLocaleDateString('sk-SK');\r\n  };\r\n\r\n  const calendarDays = generateCalendarDays();\r\n\r\n  return (\r\n    <div className={`relative ${className}`}>\r\n      {/* Input field */}\r\n      <div className=\"relative\">\r\n        <input\r\n          type=\"text\"\r\n          value={formatDisplayValue()}\r\n          placeholder={placeholder}\r\n          readOnly\r\n          disabled={disabled}\r\n          onClick={() => !disabled && setIsOpen(!isOpen)}\r\n          className=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-dark-700 text-gray-900 dark:text-white cursor-pointer disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        />\r\n        <CalendarIcon className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\r\n      </div>\r\n\r\n      {/* Calendar dropdown */}\r\n      {isOpen && (\r\n        <div className=\"absolute top-full left-0 mt-1 bg-white dark:bg-dark-800 border border-gray-300 dark:border-dark-600 rounded-md shadow-lg z-50 min-w-[280px]\">\r\n          {/* Header */}\r\n          <div className=\"flex items-center justify-between p-3 border-b border-gray-200 dark:border-dark-600\">\r\n            <button\r\n              onClick={() => handleMonthChange('prev')}\r\n              className=\"p-1 hover:bg-gray-100 dark:hover:bg-dark-700 rounded\"\r\n            >\r\n              <ChevronLeftIcon className=\"h-5 w-5\" />\r\n            </button>\r\n            \r\n            <h3 className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n              {currentMonth.toLocaleDateString('sk-SK', { month: 'long', year: 'numeric' })}\r\n            </h3>\r\n            \r\n            <button\r\n              onClick={() => handleMonthChange('next')}\r\n              className=\"p-1 hover:bg-gray-100 dark:hover:bg-dark-700 rounded\"\r\n            >\r\n              <ChevronRightIcon className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Week days header */}\r\n          <div className=\"grid grid-cols-7 gap-px bg-gray-200 dark:bg-dark-600\">\r\n            {['Po', 'Ut', 'St', 'Št', 'Pi', 'So', 'Ne'].map(day => (\r\n              <div key={day} className=\"bg-white dark:bg-dark-800 p-2 text-center text-xs font-medium text-gray-500 dark:text-gray-400\">\r\n                {day}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Calendar days */}\r\n          <div className=\"grid grid-cols-7 gap-px bg-gray-200 dark:bg-dark-600\">\r\n            {calendarDays.map((day, index) => {\r\n              let bgColor = 'bg-white dark:bg-dark-800';\r\n              let textColor = 'text-gray-900 dark:text-white';\r\n              let borderColor = '';\r\n              \r\n              if (day.isSelected) {\r\n                bgColor = 'bg-blue-500';\r\n                textColor = 'text-white';\r\n              } else if (day.isToday) {\r\n                borderColor = 'border-2 border-blue-500';\r\n              }\r\n              \r\n                             if (day.isWeekend) {\r\n                 // Zelená pre víkendy\r\n                 bgColor = day.isSelected ? 'bg-green-500' : 'bg-green-50 dark:bg-green-900/20';\r\n                 textColor = day.isSelected ? 'text-white' : 'text-green-700 dark:text-green-300';\r\n               } else if (day.isHoliday) {\r\n                 // Červená pre sviatky (dni pracovného pokoja okrem víkendov)\r\n                 bgColor = day.isSelected ? 'bg-red-500' : 'bg-red-50 dark:bg-red-900/20';\r\n                 textColor = day.isSelected ? 'text-white' : 'text-red-700 dark:text-red-300';\r\n               }\r\n              \r\n              if (day.isDisabled) {\r\n                bgColor = 'bg-gray-100 dark:bg-dark-700';\r\n                textColor = 'text-gray-400 dark:text-gray-500';\r\n              }\r\n\r\n              return (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => !day.isDisabled && handleDateSelect(day.date)}\r\n                  disabled={day.isDisabled}\r\n                  className={`\r\n                    ${bgColor} ${textColor} ${borderColor}\r\n                    p-2 text-sm font-medium hover:bg-gray-100 dark:hover:bg-dark-700\r\n                    disabled:cursor-not-allowed disabled:opacity-50\r\n                    ${!day.isCurrentMonth ? 'opacity-30' : ''}\r\n                    relative\r\n                  `}\r\n                                     title={day.holidayName ? `Sviatok: ${day.holidayName}` : (day.isWeekend ? 'Víkend' : undefined)}\r\n                >\r\n                  {day.date.getDate()}\r\n\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* Legend */}\r\n          <div className=\"p-3 border-t border-gray-200 dark:border-dark-600 bg-gray-50 dark:bg-dark-700\">\r\n            <div className=\"flex items-center justify-between text-xs text-gray-600 dark:text-gray-400\">\r\n                             <div className=\"flex items-center space-x-3\">\r\n                 <div className=\"flex items-center space-x-1\">\r\n                   <div className=\"w-3 h-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-700\"></div>\r\n                   <span>Sviatky</span>\r\n                 </div>\r\n                 <div className=\"flex items-center space-x-1\">\r\n                   <div className=\"w-3 h-3 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-700\"></div>\r\n                   <span>Víkendy</span>\r\n                 </div>\r\n               </div>\r\n              {loading && (\r\n                <div className=\"text-blue-600 dark:text-blue-400\">\r\n                  Načítavam...\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Click outside to close */}\r\n      {isOpen && (\r\n        <div\r\n          className=\"fixed inset-0 z-40\"\r\n          onClick={() => setIsOpen(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { XMarkIcon } from '@heroicons/react/24/outline';\r\nimport { LeaveRequest, hrService } from '../services/hrService';\r\nimport { CalendarService } from '../services/calendarService';\r\nimport DatePicker from './DatePicker';\r\n\r\n// Helper funkcia pre lokálne formátovanie dátumu\r\nconst formatDate = (date: Date): string => {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0');\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\ninterface LeaveRequestModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  leaveRequest?: LeaveRequest | null;\r\n  companyId: number;\r\n  employeeId: number;\r\n  employeeName: string;\r\n  onSuccess: () => void;\r\n}\r\n\r\nconst LeaveRequestModal: React.FC<LeaveRequestModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  leaveRequest,\r\n  companyId,\r\n  employeeId,\r\n  employeeName,\r\n  onSuccess\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    leave_type: 'vacation' as 'vacation' | 'sick_leave' | 'personal_leave' | 'maternity_leave' | 'paternity_leave' | 'unpaid_leave',\r\n    start_date: '',\r\n    end_date: '',\r\n    total_days: '',\r\n    reason: ''\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const isEdit = !!leaveRequest;\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      if (leaveRequest) {\r\n        setFormData({\r\n          leave_type: leaveRequest.leave_type,\r\n          start_date: leaveRequest.start_date,\r\n          end_date: leaveRequest.end_date,\r\n          total_days: leaveRequest.total_days.toString(),\r\n          reason: leaveRequest.reason || ''\r\n        });\r\n      } else {\r\n        setFormData({\r\n          leave_type: 'vacation',\r\n          start_date: '',\r\n          end_date: '',\r\n          total_days: '',\r\n          reason: ''\r\n        });\r\n      }\r\n    }\r\n  }, [isOpen, leaveRequest]);\r\n\r\n  // Výpočet pracovných dní s aktuálnym kalendárom\r\n  const calculateDays = async (startDate: string, endDate: string): Promise<number> => {\r\n    try {\r\n      return await CalendarService.calculateWorkingDays(startDate, endDate);\r\n    } catch (error) {\r\n      console.error('❌ Chyba pri výpočte pracovných dní:', error);\r\n      // Fallback na základný výpočet\r\n      return CalendarService.calculateBasicWorkingDays(startDate, endDate);\r\n    }\r\n  };\r\n\r\n  const handleDateChange = async (field: 'start_date' | 'end_date', value: string) => {\r\n    setFormData(prev => {\r\n      const newData = { ...prev, [field]: value };\r\n      \r\n      // Automaticky vypočítať počet dní\r\n      if (newData.start_date && newData.end_date) {\r\n        calculateDays(newData.start_date, newData.end_date).then(days => {\r\n          setFormData(current => ({\r\n            ...current,\r\n            total_days: days.toString()\r\n          }));\r\n        });\r\n      }\r\n      \r\n      return newData;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const leaveData = {\r\n        employee_id: employeeId,\r\n        company_id: companyId,\r\n        leave_type: formData.leave_type,\r\n        start_date: formData.start_date,\r\n        end_date: formData.end_date,\r\n        total_days: parseInt(formData.total_days),\r\n        status: 'pending' as const,\r\n        reason: formData.reason || undefined\r\n      };\r\n\r\n      if (isEdit) {\r\n        // Pre editáciu by sme potrebovali endpoint na update\r\n        alert('Editácia dovoleniek zatiaľ nie je implementovaná');\r\n      } else {\r\n        await hrService.addLeaveRequest(leaveData);\r\n      }\r\n\r\n      onSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Chyba pri ukladaní žiadosti o dovolenku:', error);\r\n      alert('Chyba pri ukladaní žiadosti o dovolenku');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'start_date' || name === 'end_date') {\r\n      handleDateChange(name as 'start_date' | 'end_date', value);\r\n    } else {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [name]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white dark:bg-dark-800 rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-dark-600\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n            {isEdit ? 'Upraviť žiadosť o dovolenku' : 'Nová žiadosť o dovolenku'}\r\n          </h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\r\n          >\r\n            <XMarkIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\r\n          {/* Informácie o zamestnancovi */}\r\n          <div className=\"p-4 bg-gray-50 dark:bg-dark-700 rounded-lg\">\r\n            <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">Zamestnanec</h3>\r\n            <p className=\"text-gray-900 dark:text-white\">{employeeName}</p>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {/* Typ dovolenky */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                Typ dovolenky *\r\n              </label>\r\n              <select\r\n                name=\"leave_type\"\r\n                value={formData.leave_type}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-dark-700 text-gray-900 dark:text-white\"\r\n              >\r\n                <option value=\"vacation\">Dovolenka</option>\r\n                <option value=\"sick_leave\">PN</option>\r\n                <option value=\"personal_leave\">Osobné voľno</option>\r\n                <option value=\"maternity_leave\">Materská dovolenka</option>\r\n                <option value=\"paternity_leave\">Otcovská dovolenka</option>\r\n                <option value=\"unpaid_leave\">Neplatené voľno</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* Počet dní */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                Počet dní *\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"total_days\"\r\n                value={formData.total_days}\r\n                onChange={handleInputChange}\r\n                min=\"1\"\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-dark-700 text-gray-900 dark:text-white\"\r\n                placeholder=\"5\"\r\n              />\r\n            </div>\r\n\r\n            {/* Začiatok dovolenky */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                Začiatok dovolenky *\r\n              </label>\r\n              <DatePicker\r\n                value={formData.start_date}\r\n                onChange={(date) => handleDateChange('start_date', date)}\r\n                min={formatDate(new Date())}\r\n                placeholder=\"Vyberte dátum začiatku\"\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n\r\n            {/* Koniec dovolenky */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                Koniec dovolenky *\r\n              </label>\r\n              <DatePicker\r\n                value={formData.end_date}\r\n                onChange={(date) => handleDateChange('end_date', date)}\r\n                min={formData.start_date || formatDate(new Date())}\r\n                placeholder=\"Vyberte dátum konca\"\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Dôvod */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n              Dôvod\r\n            </label>\r\n            <textarea\r\n              name=\"reason\"\r\n              value={formData.reason}\r\n              onChange={handleInputChange}\r\n              rows={4}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-dark-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"Popíšte dôvod žiadosti o dovolenku...\"\r\n            />\r\n          </div>\r\n\r\n          {/* Informácie o dovolenke */}\r\n          {formData.start_date && formData.end_date && (\r\n            <div className=\"p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n              <h4 className=\"text-sm font-medium text-blue-800 dark:text-blue-200 mb-2\">Informácie o dovolenke</h4>\r\n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                <div>\r\n                  <span className=\"text-blue-700 dark:text-blue-300\">Od:</span>\r\n                  <span className=\"ml-2 text-blue-900 dark:text-blue-100\">\r\n                    {new Date(formData.start_date).toLocaleDateString('sk-SK')}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"text-blue-700 dark:text-blue-300\">Do:</span>\r\n                  <span className=\"ml-2 text-blue-900 dark:text-blue-100\">\r\n                    {new Date(formData.end_date).toLocaleDateString('sk-SK')}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"text-blue-700 dark:text-blue-300\">Počet dní:</span>\r\n                  <span className=\"ml-2 text-blue-900 dark:text-blue-100\">\r\n                    {formData.total_days} dní\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"text-blue-700 dark:text-blue-300\">Typ:</span>\r\n                  <span className=\"ml-2 text-blue-900 dark:text-blue-100\">\r\n                    {hrService.getLeaveTypeLabel(formData.leave_type)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"flex justify-end space-x-3 pt-6 border-t border-gray-200 dark:border-dark-600\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"px-4 py-2 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-dark-700 rounded-md hover:bg-gray-200 dark:hover:bg-dark-600 transition-colors\"\r\n            >\r\n              Zrušiť\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"px-4 py-2 bg-blue-600 dark:bg-blue-500 text-white rounded-md hover:bg-blue-700 dark:hover:bg-blue-600 transition-colors disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Ukladám...' : (isEdit ? 'Upraviť' : 'Odoslať žiadosť')}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaveRequestModal;\r\n"],"names":["_ref","companyId","employeeId","employeeName","isCompanyView","selectedPeriod","setSelectedPeriod","useState","startDate","setStartDate","endDate","setEndDate","attendance","setAttendance","loading","setLoading","employees","setEmployees","selectedEmployee","setSelectedEmployee","showAllEmployees","setShowAllEmployees","useEffect","loadEmployees","updateDateRange","loadAttendance","async","employeesData","hrService","getEmployees","length","id","error","console","now","Date","start","end","setDate","getDate","getDay","getFullYear","getMonth","formatDate","date","year","month","String","padStart","day","concat","combinedAttendance","Promise","all","map","getAttendance","emp","att","_objectSpread","employee_name","first_name","last_name","flat","targetEmployeeId","duplicates","checkAttendanceDuplicates","warn","attendanceData","formatTime","timeString","match","isNaN","getTime","toLocaleTimeString","hour","minute","hour12","stats","setStats","loadStats","calculatedStats","totalDays","presentDays","absentDays","lateDays","CalendarService","calculateWorkingDays","totalAbsentDays","filter","a","status","presentDates","Set","lateDates","daysWithAttendance","forEach","add","size","Math","max","totalHours","reduce","sum","total_hours","totalBreakMinutes","break_minutes","averageHours","attendanceRate","min","log","attendanceLength","uniqueDates","uniqueEmployees","calculateStats","_jsxs","className","children","_jsx","CalendarIcon","value","onChange","e","target","label","option","type","name","checked","Number","ChartBarIcon","toFixed","ClockIcon","hours","wholeHours","floor","minutes","round","toString","totalMinutes","colSpan","dateString","toLocaleDateString","weekday","check_in","check_out","getAttendanceStatusLabel","getWorkCalendar","apiService","get","isWeekend","isHoliday","holidays","some","holiday","calendar","this","workingDays","current","calculateBasicWorkingDays","getHolidayName","find","h","title","getHolidaysInRange","holidayDate","getDayInfo","isWorkingDay","holidayName","undefined","placeholder","disabled","isOpen","setIsOpen","currentMonth","setCurrentMonth","setHolidays","loadHolidays","handleMonthChange","direction","prev","newMonth","setMonth","calendarDays","generateCalendarDays","firstDay","firstDayOfWeek","days","currentDate","i","dayInfo","push","isCurrentMonth","isToday","toDateString","isSelected","isDisabled","Boolean","readOnly","onClick","ChevronLeftIcon","ChevronRightIcon","index","bgColor","textColor","borderColor","handleDateSelect","onClose","leaveRequest","onSuccess","formData","setFormData","leave_type","start_date","end_date","total_days","reason","isEdit","handleDateChange","field","newData","calculateDays","then","handleInputChange","XMarkIcon","onSubmit","preventDefault","leaveData","employee_id","company_id","parseInt","alert","addLeaveRequest","required","DatePicker","rows","getLeaveTypeLabel"],"sourceRoot":""}