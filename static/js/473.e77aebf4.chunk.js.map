{"version":3,"file":"static/js/473.e77aebf4.chunk.js","mappings":"2KAu0BO,MAAMA,EAAoB,IA1kB1B,MAGH,iBAAMC,CAAYC,GAElB,aADuBC,EAAAA,WAAWC,IAAI,wBAADC,OAAyBH,GAEhE,CAEA,kBAAMI,CAAaJ,EAAmBK,GAEpC,aADuBJ,EAAAA,WAAWK,KAAK,wBAADH,OAAyBH,GAAaK,EAE9E,CAIA,oBAAME,CAAeP,EAAmBQ,GAEtC,aADuBP,EAAAA,WAAWC,IAAI,2BAADC,OAA4BH,EAAS,KAAAG,OAAIK,GAEhF,CAEA,qBAAMC,CAAgBT,EAAmBU,GAEvC,aADuBT,EAAAA,WAAWK,KAAK,2BAADH,OAA4BH,GAAaU,EAEjF,CAEA,uBAAMC,CAAkBX,GAEtB,aADuBC,EAAAA,WAAWC,IAAI,2BAADC,OAA4BH,GAEnE,CAIA,uBAAMY,CACJZ,EACAa,GAQA,MAAMC,EAAS,IAAIC,gBACfF,GACFG,OAAOC,QAAQJ,GAASK,QAAQC,IAAmB,IAAjBC,EAAKC,GAAMF,OAC7BG,IAAVD,GACFP,EAAOS,OAAOH,EAAKC,EAAMG,cAM/B,aADuBvB,EAAAA,WAAWC,IAAI,+BAADC,OAAgCH,EAAS,KAAAG,OAAIW,GAEpF,CAEA,yBAAMW,CAAoBzB,EAAmB0B,GAE3C,aADuBzB,EAAAA,WAAWK,KAAK,+BAADH,OAAgCH,GAAa0B,EAErF,CAEA,0BAAMC,CAAqBC,GAEzB,aADuB3B,EAAAA,WAAWC,IAAI,sCAADC,OAAuCyB,GAE9E,CAMA,yBAAMC,CACJ7B,EACAa,GAQA,MAAMC,EAAS,IAAIC,gBACfF,GACFG,OAAOC,QAAQJ,GAASK,QAAQY,IAAmB,IAAjBV,EAAKC,GAAMS,OAC7BR,IAAVD,GACFP,EAAOS,OAAOH,EAAKC,EAAMG,cAM/B,aADuBvB,EAAAA,WAAWC,IAAI,iCAADC,OAAkCH,EAAS,KAAAG,OAAIW,GAEtF,CAEA,4BAAMiB,CAAuBH,GAE3B,aADuB3B,EAAAA,WAAWC,IAAI,wCAADC,OAAyCyB,GAEhF,CAUA,mBAAMI,CAAchC,GAElB,aADuBC,EAAAA,WAAWC,IAAI,2BAADC,OAA4BH,GAEnE,CAGA,0BAAMiC,CAAqBjC,EAAmBkC,EAAmBC,GAC/D,IAAIC,EAAG,kCAAAjC,OAAqCH,GAC5C,MAAMc,EAAS,IAAIC,gBAEfmB,GAAUpB,EAAOS,OAAO,WAAYW,GACpCC,GAAQrB,EAAOS,OAAO,SAAUY,GAEhCrB,EAAOU,aACTY,GAAG,IAAAjC,OAAQW,EAAOU,aAIpB,aADuBvB,EAAAA,WAAWC,IAAIkC,EAExC,CAIA,cAAMC,CACJrC,EACAa,GAKA,MAAMC,EAAS,IAAIC,gBACfF,GACFG,OAAOC,QAAQJ,GAASK,QAAQoB,IAAmB,IAAjBlB,EAAKC,GAAMiB,OAC7BhB,IAAVD,GACFP,EAAOS,OAAOH,EAAKC,EAAMG,cAM/B,aADuBvB,EAAAA,WAAWC,IAAI,qBAADC,OAAsBH,EAAS,KAAAG,OAAIW,GAE1E,CAIAyB,cAAAA,CAAeC,GAAmD,IAAnCC,EAAgBC,UAAAC,OAAA,QAAArB,IAAAoB,UAAA,GAAAA,UAAA,GAAG,MAChD,OAAO,IAAIE,KAAKC,aAAa,QAAS,CACpCC,MAAO,WACPL,SAAUA,IACTM,OAAOP,EACZ,CAEAQ,UAAAA,CAAWC,GACT,OAAO,IAAIC,KAAKD,GAAME,mBAAmB,QAC3C,CAEAC,cAAAA,CAAeC,GAeb,MAdmE,CAEjEC,MAAO,CAAEC,KAAM,UAAWC,MAAO,6BACjCC,KAAM,CAAEF,KAAM,cAAYC,MAAO,6BACjCE,KAAM,CAAEH,KAAM,eAAaC,MAAO,+BAClCG,QAAS,CAAEJ,KAAM,gBAAiBC,MAAO,2BACzCI,UAAW,CAAEL,KAAM,kBAAWC,MAAO,iCAGrCK,SAAU,CAAEN,KAAM,aAAWC,MAAO,6BACpCM,SAAU,CAAEP,KAAM,kBAAaC,MAAO,6BACtCO,SAAU,CAAER,KAAM,YAAUC,MAAO,kCAGpBH,IAAW,CAAEE,KAAMF,EAAQG,MAAO,4BACrD,CAEAQ,YAAAA,CAAaC,GAMX,MALiE,CAC/DC,OAAQ,CAAEX,KAAM,YAAUC,MAAO,+BACjCW,QAAS,CAAEZ,KAAM,aAAWC,MAAO,4BAGtBS,IAAS,CAAEV,KAAMU,EAAMT,MAAO,4BAC/C,CAKA,0BAAMY,CAAqBpE,EAAmBK,GAC5C,aAAaJ,EAAAA,WAAWK,KAAK,sCAAoC+D,EAAAA,EAAAA,GAAA,CAC/DrE,aACGK,GAEP,CAGA,wBAAMiE,CAAmBtE,EAAmBK,GAC1C,aAAaJ,EAAAA,WAAWK,KAAK,oCAAkC+D,EAAAA,EAAAA,GAAA,CAC7DrE,aACGK,GAEP,CAGA,wBAAMkE,CAAmBvE,EAAmBkC,EAAmBC,GAC7D,aAAalC,EAAAA,WAAWK,KAAK,oCAADH,OAAqCH,GAAa,CAC5EkC,WACAC,UAEJ,CAKA,qBAAMqC,CAAgBxE,EAAmByE,GACvC,MAAMC,EAAW,IAAIC,SACrBD,EAASnD,OAAO,UAAWkD,GAG3B,MAAMG,QAAiBC,MAAM,0DAAD1E,OAA2DH,GAAa,CAClG8E,OAAQ,OACRC,QAAS,CACP,cAAgB,UAAD5E,OAAY6E,aAAaC,QAAQ,WAElDC,KAAMR,IAGR,IAAKE,EAASO,GACZ,MAAM,IAAIC,MAAM,2CAGlB,aAAaR,EAASS,MACxB,CAGA,qBAAMC,CAAgBtF,EAAmBkC,EAAmBC,GAC1D,MAAMyC,QAAiBC,MAAM,0DAAD1E,OAA2DH,EAAS,cAAAG,OAAa+B,GAAY,GAAE,YAAA/B,OAAWgC,GAAU,IAAM,CACpJ2C,OAAQ,MACRC,QAAS,CACP,cAAgB,UAAD5E,OAAY6E,aAAaC,QAAQ,aAIpD,IAAKL,EAASO,GACZ,MAAM,IAAIC,MAAM,mCAGlB,aAAaR,EAASW,MACxB,CAOA,4BAAMC,CAAuBxF,GAM3B,MAAM4E,QAAiBC,MAAM,yDAAD1E,OAA0DH,GAAa,CACjG8E,OAAQ,OACRC,QAAS,CACP,cAAgB,UAAD5E,OAAY6E,aAAaC,QAAQ,UAChD,eAAgB,sBAIpB,IAAKL,EAASO,GACZ,MAAM,IAAIC,MAAM,yCAGlB,aAAaR,EAASS,MACxB,CAGA,oCAAMI,CAA+BzF,GAMnC,MAAM4E,QAAiBC,MAAM,kEAAD1E,OAAmEH,GAAa,CAC1G8E,OAAQ,OACRC,QAAS,CACP,cAAgB,UAAD5E,OAAY6E,aAAaC,QAAQ,UAChD,eAAgB,sBAIpB,IAAKL,EAASO,GACZ,MAAM,IAAIC,MAAM,sDAGlB,aAAaR,EAASS,MACxB,CAKA,2BAAMK,CAAsB1F,GAO1B,MAAM4E,QAAiBC,MAAM,wDAAD1E,OAAyDH,GAAa,CAChG8E,OAAQ,OACRC,QAAS,CACP,cAAgB,UAAD5E,OAAY6E,aAAaC,QAAQ,UAChD,eAAgB,sBAIpB,IAAKL,EAASO,GACZ,MAAM,IAAIC,MAAM,qCAGlB,aAAaR,EAASS,MACxB,CAKA,yBAAMM,CAAoB/D,GAExB,aADuB3B,EAAAA,WAAW2F,OAAO,+BAADzF,OAAgCyB,GAE1E,CAGA,2BAAMiE,CAAsBjE,GAE1B,aADuB3B,EAAAA,WAAW2F,OAAO,iCAADzF,OAAkCyB,GAE5E,CAGA,2BAAMkE,CAAsBC,GAE1B,aADuB9F,EAAAA,WAAW2F,OAAO,iCAADzF,OAAkC4F,GAE5E,CAGA,2BAAMC,CAAsBD,GAE1B,aADuB9F,EAAAA,WAAW2F,OAAO,iCAADzF,OAAkC4F,GAE5E,CAKA,kBAAME,CAAajG,GAmBjB,MAAM4E,QAAiBC,MAAM,kDAAD1E,OAAmDH,GAAa,CAC1F8E,OAAQ,MACRC,QAAS,CACP,cAAgB,UAAD5E,OAAY6E,aAAaC,QAAQ,UAChD,eAAgB,sBAIpB,IAAKL,EAASO,GACZ,MAAM,IAAIC,MAAM,6CAGlB,aAAaR,EAASS,MACxB,CAKA,mBAAMa,CAAclG,EAAmBmG,GAuBrC,MAAMC,EAAYD,IAAQ,IAAIjD,MAAOmD,cAC/BzB,QAAiBC,MAAM,oDAAD1E,OAAqDH,EAAS,UAAAG,OAASiG,GAAa,CAC9GtB,OAAQ,MACRC,QAAS,CACP,cAAgB,UAAD5E,OAAY6E,aAAaC,QAAQ,UAChD,eAAgB,sBAIpB,IAAKL,EAASO,GACZ,MAAM,IAAIC,MAAM,+CAGlB,aAAaR,EAASS,MACxB,CAKA,qBAAMiB,CAAgBtG,GAuBpBuG,QAAQC,IAAI,2DAA4CxG,GAExD,MAAM4E,QAAiBC,MAAM,sDAAD1E,OAAuDH,GAAa,CAC9F8E,OAAQ,MACRC,QAAS,CACP,cAAgB,UAAD5E,OAAY6E,aAAaC,QAAQ,UAChD,eAAgB,sBAMpB,GAFAsB,QAAQC,IAAI,oDAAwC5B,EAASvB,SAExDuB,EAASO,GACZ,MAAM,IAAIC,MAAM,4DAGlB,MAAMqB,QAAa7B,EAASS,OAG5B,OAFAkB,QAAQC,IAAI,kDAAsCC,GAE3CA,CACT,CAKA,qBAAMC,CAAgB1G,GAsBpB,MAAM4E,QAAiBC,MAAM,sDAAD1E,OAAuDH,GAAa,CAC9F8E,OAAQ,MACRC,QAAS,CACP,cAAgB,UAAD5E,OAAY6E,aAAaC,QAAQ,UAChD,eAAgB,sBAIpB,IAAKL,EAASO,GACZ,MAAM,IAAIC,MAAM,oEAGlB,aAAaR,EAASS,MACxB,CAGA,yBAAMsB,CAAoB3G,EAAmB4G,GAU3CL,QAAQC,IAAI,8EAAuDxG,EAAW,iBAAkB4G,GAEhG,MAAMhC,QAAiBC,MAAM,0DAAD1E,OAA2DH,EAAS,KAAAG,OAAIyG,GAAiB,CACnH9B,OAAQ,MACRC,QAAS,CACP,cAAgB,UAAD5E,OAAY6E,aAAaC,QAAQ,UAChD,eAAgB,sBAMpB,GAFAsB,QAAQC,IAAI,uEAAmD5B,EAASvB,SAEnEuB,EAASO,GACZ,MAAM,IAAIC,MAAM,4DAGlB,MAAMqB,QAAa7B,EAASS,OAG5B,OAFAkB,QAAQC,IAAI,qEAAiDC,GAEtDA,CACT,CAGA,yBAAMI,CAAoB7G,EAAmB4G,GAU3CL,QAAQC,IAAI,sFAA0DxG,EAAW,iBAAkB4G,GAEnG,MAAMhC,QAAiBC,MAAM,0DAAD1E,OAA2DH,EAAS,KAAAG,OAAIyG,GAAiB,CACnH9B,OAAQ,MACRC,QAAS,CACP,cAAgB,UAAD5E,OAAY6E,aAAaC,QAAQ,UAChD,eAAgB,sBAMpB,GAFAsB,QAAQC,IAAI,+EAAsD5B,EAASvB,SAEtEuB,EAASO,GACZ,MAAM,IAAIC,MAAM,oEAGlB,MAAMqB,QAAa7B,EAASS,OAG5B,OAFAkB,QAAQC,IAAI,6EAAoDC,GAEzDA,CACT,E,yFCn0BF,SAASK,EAAmB3F,EAIzB4F,GAAQ,IAJkB,MAC3BC,EAAK,QACLC,GAED9F,EADI+F,GAAKC,EAAAA,EAAAA,GAAAhG,EAAAiG,GAER,OAAoBC,EAAAA,cAAoB,MAAOrG,OAAOsG,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKb,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DQ,GAAIZ,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDS,cAAe,QACfC,eAAgB,QAChBC,EAAG,iRAEP,CACA,MACA,EADiCX,EAAAA,WAAiBP,E,yFCvBlD,SAASmB,EAAe9G,EAIrB4F,GAAQ,IAJc,MACvBC,EAAK,QACLC,GAED9F,EADI+F,GAAKC,EAAAA,EAAAA,GAAAhG,EAAAiG,GAER,OAAoBC,EAAAA,cAAoB,MAAOrG,OAAOsG,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKb,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DQ,GAAIZ,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDS,cAAe,QACfC,eAAgB,QAChBC,EAAG,mEAEP,CACA,MACA,EADiCX,EAAAA,WAAiBY,E,mMCjBlD,MA0NA,EA1NoE9G,IAAoB,IAAD+G,EAAA,IAAlB,UAAElI,GAAWmB,EAChF,MAAOgH,EAAcC,IAAmBC,EAAAA,EAAAA,UAAsB,OACvDC,EAAaC,IAAkBF,EAAAA,EAAAA,WAAS,IACxCG,EAAaC,IAAkBJ,EAAAA,EAAAA,WAAS,IACxCK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAsE,OACvGnG,EAAU0G,IAAeP,EAAAA,EAAAA,UAAS,KAClClG,EAAQ0G,IAAaR,EAAAA,EAAAA,UAAS,IAsErC,OACES,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAwCC,SAAC,8BAIvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EAExBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAwCC,SAAC,mCAEvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,iBAAiBH,UAAU,+CAA8CC,SAAC,mCAGzFC,EAAAA,EAAAA,KAAA,SACEpB,GAAG,iBACH5D,KAAK,OACLkF,OAAO,OACPC,SAxFYC,IAAgD,IAADC,EACvE,MAAM7E,EAAyB,QAArB6E,EAAGD,EAAME,OAAOC,aAAK,IAAAF,OAAA,EAAlBA,EAAqB,IAC9B7E,GAAuB,oBAAdA,EAAKR,MAA4C,aAAdQ,EAAKR,KAInDwF,MAAM,mCAHNrB,EAAgB3D,GAChBkE,EAAgB,QAqFNI,UAAU,4LAEZE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAC,sEAK3Cb,IACCc,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA2BC,UACxCF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,wBAAuBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,yBAAuB,IAAEb,EAAauB,KAAK,MAAIvB,EAAawB,KAAO,MAAMC,QAAQ,GAAG,aAKlGX,EAAAA,EAAAA,KAAA,UACEY,QA/FSC,UACnB,GAAK3B,EAAL,CAKAI,GAAe,GACfI,EAAgB,MAEhB,IACE,MAAMoB,QAAejK,EAAAA,EAAkB0E,gBAAgBxE,EAAWmI,GAElEQ,EAAgB,CACdqB,QAASD,EAAOC,QAChBC,QAASF,EAAOE,SAAW,2BAC3BC,QAASH,EAAOtD,OAGlB2B,EAAgB,MAEhB,MAAM+B,EAAYC,SAASC,eAAe,kBACtCF,IAAWA,EAAU9I,MAAQ,GAEnC,CAAE,MAAOiJ,GACP/D,QAAQ+D,MAAM,oBAAqBA,GACnC3B,EAAgB,CACdqB,SAAS,EACTC,QAAS,2CAEb,CAAC,QACC1B,GAAe,EACjB,CA3BA,MAFEkB,MAAM,mCA8FEc,UAAWpC,GAAgBG,EAC3BS,UAAU,+PAA8PC,SAEvQV,GACCQ,EAAAA,EAAAA,MAAA0B,EAAAA,SAAA,CAAAxB,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mEAAuE,oBAIxF,gCAKLL,IACCI,EAAAA,EAAAA,MAAA,OAAKC,UAAS,uBAAA5I,OACZuI,EAAasB,QAAU,6BAA+B,0BACrDhB,SAAA,EACDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,sBAAqBC,SAAEN,EAAauB,UAChDvB,EAAawB,UACZpB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,mBAAcN,EAAawB,QAAQO,aACtC3B,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,WAAmC,QAA3Bd,EAAAQ,EAAawB,QAAQQ,cAAM,IAAAxC,OAAA,EAA3BA,EAA6BvF,SAAU,KACjD+F,EAAawB,QAAQQ,QAAUhC,EAAawB,QAAQQ,OAAO/H,OAAS,IACnEsG,EAAAA,EAAAA,KAAA,MAAIF,UAAU,6BAA4BC,SACvCN,EAAawB,QAAQQ,OAAOC,IAAI,CAACL,EAAeM,KAC/C3B,EAAAA,EAAAA,KAAA,MAAAD,SAAiBsB,GAARM,gBAWzB9B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAwCC,SAAC,oCAEvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,YAAYH,UAAU,+CAA8CC,SAAC,iBAGpFC,EAAAA,EAAAA,KAAA,SACEpB,GAAG,YACH5D,KAAK,OACL5C,MAAOa,EACPkH,SAAWyB,GAAMjC,EAAYiC,EAAEtB,OAAOlI,OACtC0H,UAAU,oGAIdD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,UAAUH,UAAU,+CAA8CC,SAAC,iBAGlFC,EAAAA,EAAAA,KAAA,SACEpB,GAAG,UACH5D,KAAK,OACL5C,MAAOc,EACPiH,SAAWyB,GAAMhC,EAAUgC,EAAEtB,OAAOlI,OACpC0H,UAAU,uGAKhBE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wBAAuBC,SAAC,sEAIrCC,EAAAA,EAAAA,KAAA,UACEY,QAxISC,UACnBrB,GAAe,GAEf,IACE,MAAMlD,QAAazF,EAAAA,EAAkBwF,gBAAgBtF,EAAWkC,EAAUC,GAGpEC,EAAM0I,OAAOC,IAAIC,gBAAgBzF,GACjC0F,EAAIb,SAASc,cAAc,KACjCD,EAAEE,KAAO/I,EACT6I,EAAEG,SAAQ,mBAAAjL,OAAsBH,EAAS,KAAAG,QAAI,IAAI+C,MAAOmI,cAAcC,MAAM,KAAK,GAAE,QACnFlB,SAASlF,KAAKqG,YAAYN,GAC1BA,EAAEO,QACFV,OAAOC,IAAIU,gBAAgBrJ,GAC3BgI,SAASlF,KAAKwG,YAAYT,EAE5B,CAAE,MAAOX,GACP/D,QAAQ+D,MAAM,qBAAsBA,GACpCb,MAAM,kCACR,CAAC,QACChB,GAAe,EACjB,GAoHU8B,SAAU/B,EACVO,UAAU,kQAAiQC,SAE1QR,GACCM,EAAAA,EAAAA,MAAA0B,EAAAA,SAAA,CAAAxB,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mEAAuE,mBAIxF,kCAORD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uDAAsDC,SAAA,EACnEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,oBACzDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAAgB,yEAC3BF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAAgB,yEAC3BF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,mBAAuB,0DCuP9C,EAncgE7H,IAMzD,IAN0D,OAC/DwK,EAAM,QACNC,EAAO,UACP5L,EAAS,SACTK,EAAQ,OACRwL,GACD1K,EACO,MAAOuD,EAAUoH,IAAezD,EAAAA,EAAAA,UAAS,CACzC0D,gBAAgB,EAChBC,WAAY,GACZC,gBAAiB,GACjBC,gBAAiB,GACjBC,WAAY,GACZC,YAAa,GACbC,WAAW,EACXC,eAAgB,WAGfC,EAAWC,IAAgBnE,EAAAA,EAAAA,WAAS,IACpCoE,EAAYC,IAAiBrE,EAAAA,EAAAA,UAG1B,OAEVsE,EAAAA,EAAAA,WAAU,KACJtM,GACFyL,EAAY,CACVC,eAAgB1L,EAAS0L,iBAAkB,EAC3CC,WAAY3L,EAAS2L,YAAc,GACnCC,gBAAiB5L,EAAS4L,iBAAmB,GAC7CC,gBAAiB7L,EAAS6L,iBAAmB,GAC7CC,WAAY9L,EAAS8L,YAAc,GACnCC,YAAa/L,EAAS+L,aAAe,GACrCC,UAAWhM,EAASgM,YAAa,EACjCC,eAAgBjM,EAASiM,gBAAkB,WAG9C,CAACjM,IAEJ,MAAMuM,EAAqB/B,IACzB,MAAM,KAAEnB,EAAI,MAAErI,EAAK,KAAE4C,GAAS4G,EAAEtB,OAC1BsD,EAAWhC,EAAEtB,OAA4BsD,QAE/Cf,EAAYgB,IAAIzI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXyI,GAAI,IACP,CAACpD,GAAgB,aAATzF,EAAsB4I,EAAUxL,MAItC0L,EAAoBA,IACjBrI,EAASsH,YAActH,EAASuH,iBAAmBvH,EAASwH,iBAAmBxH,EAASyH,YAAczH,EAAS0H,YAyHxH,OAAKT,GAGH1C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6EAA4EC,UACzFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mFAAkFC,SAAA,EAC/FF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iDAAgDC,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sCAAqCC,SAAC,qCAGpDC,EAAAA,EAAAA,KAAA,UACEY,QAAS+B,EACT7C,UAAU,oCAAmCC,UAE7CC,EAAAA,EAAAA,KAAC+D,EAAAA,EAAS,CAACjE,UAAU,kBAIzBD,EAAAA,EAAAA,MAAA,QAAMmE,SA3FSnD,UACnBe,EAAEqC,iBACFV,GAAa,GAEb,UACQX,EAAO,CACXE,eAAgBrH,EAASqH,eACzBC,WAAYtH,EAASsH,WACrBC,gBAAiBvH,EAASuH,gBAC1BC,gBAAiBxH,EAASwH,gBAC1BC,WAAYzH,EAASyH,WACrBC,YAAa1H,EAAS0H,YACtBC,UAAW3H,EAAS2H,UACpBC,eAAgB5H,EAAS4H,iBAG3BV,GACF,CAAE,MAAOtB,GACP/D,QAAQ+D,MAAM,sCAAiCA,EACjD,CAAC,QACCkC,GAAa,EACf,GAsEkCzD,UAAU,gBAAeC,SAAA,EAErDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oCAAmCC,SAAC,+BAElDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SACEhF,KAAK,WACL4D,GAAG,iBACH6B,KAAK,iBACLmD,QAASnI,EAASqH,eAClB3C,SAAUwD,EACV7D,UAAU,uEAEZE,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,iBAAiBH,UAAU,mCAAkCC,SAAC,0CAK/EF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,aAAaH,UAAU,0CAAyCC,SAAC,0BAGhFC,EAAAA,EAAAA,KAAA,SACEhF,KAAK,MACL4D,GAAG,aACH6B,KAAK,aACLrI,MAAOqD,EAASsH,WAChB5C,SAAUwD,EACVO,YAAY,wBACZpE,UAAU,mGACVqE,SAAU1I,EAASqH,qBAIvBjD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,kBAAkBH,UAAU,0CAAyCC,SAAC,0CAGrFC,EAAAA,EAAAA,KAAA,SACEhF,KAAK,OACL4D,GAAG,kBACH6B,KAAK,kBACLrI,MAAOqD,EAASuH,gBAChB7C,SAAUwD,EACVO,YAAY,QACZpE,UAAU,mGACVqE,SAAU1I,EAASqH,qBAIvBjD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,kBAAkBH,UAAU,0CAAyCC,SAAC,aAGrFC,EAAAA,EAAAA,KAAA,SACEhF,KAAK,WACL4D,GAAG,kBACH6B,KAAK,kBACLrI,MAAOqD,EAASwH,gBAChB9C,SAAUwD,EACVO,YAAY,mDACZpE,UAAU,mGACVqE,SAAU1I,EAASqH,wBAKzBjD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,aAAaH,UAAU,0CAAyCC,SAAC,+BAGhFC,EAAAA,EAAAA,KAAA,SACEhF,KAAK,OACL4D,GAAG,aACH6B,KAAK,aACLrI,MAAOqD,EAASyH,WAChB/C,SAAUwD,EACVO,YAAY,WACZpE,UAAU,mGACVqE,SAAU1I,EAASqH,qBAIvBjD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,cAAcH,UAAU,0CAAyCC,SAAC,yCAGjFC,EAAAA,EAAAA,KAAA,SACEhF,KAAK,OACL4D,GAAG,cACH6B,KAAK,cACLrI,MAAOqD,EAAS0H,YAChBhD,SAAUwD,EACVO,YAAY,OACZpE,UAAU,mGACVqE,SAAU1I,EAASqH,kBAErB9C,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAC,wGAShDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAwCC,SAAC,iCAIrDtE,EAASqH,iBACT9C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wDAAuDC,UACpEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wBAAuBC,SAAC,qGAMzBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACpCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mDAAkDC,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAwCC,SAAC,iCACvDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAC,0FAI1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,UAAQhF,KAAK,SAAS4F,QAxQXC,UAC3B0C,GAAa,GACbE,EAAc,MAEd,IACE,MAAM9H,QAAiBC,MAAM,yCAA0C,CACrEC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAD5E,OAAY6E,aAAaC,QAAQ,WAElDC,KAAMmI,KAAKC,UAAU,CACnBtN,YACAgM,WAAYtH,EAASsH,WACrBC,gBAAiBvH,EAASuH,gBAC1BC,gBAAiBxH,EAASwH,gBAC1BC,WAAYzH,EAASyH,WACrBC,YAAa1H,EAAS0H,gBAIpBrC,QAAenF,EAASS,OAE1B0E,EAAOC,QACT0C,EAAc,CACZ1C,SAAS,EACTC,QAAS,qDAGXyC,EAAc,CACZ1C,SAAS,EACTC,QAASF,EAAOO,OAAS,gDAG/B,CAAE,MAAOA,GACPoC,EAAc,CACZ1C,SAAS,EACTC,QAAS,mCAEb,CAAC,QACCuC,GAAa,EACf,GA+NqEjC,UAAW7F,EAASqH,iBAAmBgB,IAAqBhE,UAAU,+PAA8PC,SACtXuD,GACCzD,EAAAA,EAAAA,MAAA0B,EAAAA,SAAA,CAAAxB,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mEAAuE,iBAIxF,4BAGJE,EAAAA,EAAAA,KAAA,UAAQhF,KAAK,SAAS4F,QA9MbC,UACzB0C,GAAa,GACbE,EAAc,MAEd,IACE,MAAM3C,QAAejK,EAAAA,EAAkBwE,mBAAmBtE,EAAW,CACnEgM,WAAYtH,EAASsH,WACrBC,gBAAiBvH,EAASuH,gBAC1BC,gBAAiBxH,EAASwH,gBAC1BC,WAAYzH,EAASyH,WACrBC,YAAa1H,EAAS0H,cAGxBM,EAAc,CACZ1C,QAASD,EAAOC,QAChBC,QAASF,EAAOE,UAAYF,EAAOC,QAAU,iDAA6B,4CAE9E,CAAE,MAAOM,GACP/D,QAAQ+D,MAAM,oCAA+BA,GAC7CoC,EAAc,CACZ1C,SAAS,EACTC,QAAS,oCAEb,CAAC,QACCuC,GAAa,EACf,GAqLmEjC,UAAW7F,EAASqH,iBAAmBgB,IAAqBhE,UAAU,kQAAiQC,SACvXuD,GACCzD,EAAAA,EAAAA,MAAA0B,EAAAA,SAAA,CAAAxB,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mEAAuE,4BAIxF,8BAGJE,EAAAA,EAAAA,KAAA,UAAQhF,KAAK,SAAS4F,QA5LbC,UACzB0C,GAAa,GACbE,EAAc,MAEd,IACE,MAAM3C,QAAejK,EAAAA,EAAkByE,mBAAmBvE,GAE1D0M,EAAc,CACZ1C,QAASD,EAAOC,QAChBC,QAASF,EAAOE,UAAYF,EAAOC,QAAU,uCAA2B,gCAE5E,CAAE,MAAOM,GACP/D,QAAQ+D,MAAM,+BAA6BA,GAC3CoC,EAAc,CACZ1C,SAAS,EACTC,QAAS,yCAEb,CAAC,QACCuC,GAAa,EACf,GAyKmEjC,UAAW7F,EAASqH,iBAAmBgB,IAAqBhE,UAAU,qQAAoQC,SAC1XuD,GACCzD,EAAAA,EAAAA,MAAA0B,EAAAA,SAAA,CAAAxB,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mEAAuE,uBAIxF,sCAKL0D,IACC3D,EAAAA,EAAAA,MAAA,OAAKC,UAAS,yCAAA5I,OACZsM,EAAWzC,QACP,sCACA,mCACHhB,SAAA,CACAyD,EAAWzC,SACVf,EAAAA,EAAAA,KAACsE,EAAAA,EAAS,CAACxE,UAAU,iCAErBE,EAAAA,EAAAA,KAACuE,EAAAA,EAAuB,CAACzE,UAAU,+BAErCE,EAAAA,EAAAA,KAAA,QAAMF,UAAS,WAAA5I,OACbsM,EAAWzC,QAAU,iBAAmB,gBACvChB,SACAyD,EAAWxC,gBAOnBvF,EAASqH,iBACRjD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oCAAmCC,SAAC,sCAElDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SACEhF,KAAK,WACL4D,GAAG,YACH6B,KAAK,YACLmD,QAASnI,EAAS2H,UAClBjD,SAAUwD,EACV7D,UAAU,uEAEZE,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,YAAYH,UAAU,mCAAkCC,SAAC,wCAKzEtE,EAAS2H,YACRvD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,iBAAiBH,UAAU,0CAAyCC,SAAC,kCAGpFF,EAAAA,EAAAA,MAAA,UACEjB,GAAG,iBACH6B,KAAK,iBACLrI,MAAOqD,EAAS4H,eAChBlD,SAAUwD,EACV7D,UAAU,mGAAkGC,SAAA,EAE5GC,EAAAA,EAAAA,KAAA,UAAQ5H,MAAM,SAAQ2H,SAAC,0BACvBC,EAAAA,EAAAA,KAAA,UAAQ5H,MAAM,QAAO2H,SAAC,WACtBC,EAAAA,EAAAA,KAAA,UAAQ5H,MAAM,SAAQ2H,SAAC,sBACvBC,EAAAA,EAAAA,KAAA,UAAQ5H,MAAM,SAAQ2H,SAAC,gCAUzCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAwCC,SAAC,6BAIvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4DAA2DC,SAAA,EACxEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,uBACzDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0BAAyBC,SAAC,uGAKzCC,EAAAA,EAAAA,KAACwE,EAAqB,CAACzN,UAAWA,QAIlC8I,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2CAA0CC,SAAA,EACvDC,EAAAA,EAAAA,KAAA,UACEhF,KAAK,SACL4F,QAAS+B,EACT7C,UAAU,4LAA2LC,SACtM,sBAGDC,EAAAA,EAAAA,KAAA,UACEhF,KAAK,SACLsG,SAAUgC,EACVxD,UAAU,oNAAmNC,SAE5NuD,EAAY,gBAAe,2CA/QpB,MCqHtB,EAzR4DpL,IAAiB,IAAhB,OAAEuM,GAAQvM,EACrE,MAAOwM,EAAWC,IAAgBvF,EAAAA,EAAAA,UAAgB,KAC3CwF,EAAiBC,IAAsBzF,EAAAA,EAAAA,UAAwB,OAC/DhI,EAAU0N,IAAe1F,EAAAA,EAAAA,UAAoC,OAC7D3H,EAAasN,IAAkB3F,EAAAA,EAAAA,UAAkC,KACjE4F,EAAiBC,IAAsB7F,EAAAA,EAAAA,WAAS,IAChD8F,EAAsBC,IAA2B/F,EAAAA,EAAAA,WAAS,IAEjEsE,EAAAA,EAAAA,WAAU,KACR0B,KACC,IAEH,MAAMA,EAAgBvE,UACpB,IACE,MAAMwE,QAAsBrO,EAAW,WAAAsO,kBACvCX,EAAaU,GACTA,EAAc3L,OAAS,GACzBmL,EAAmBQ,EAAc,GAAGzG,GAExC,CAAE,MAAOyC,GACP/D,QAAQ+D,MAAM,wCAA8BA,EAC9C,GAGIkE,EAAkB1E,UACtB,IACE,MAAO2E,EAAcC,SAAyBC,QAAQC,IAAI,CACxD9O,EAAAA,EAAkBC,YAAYC,GAC9BF,EAAAA,EAAkBa,kBAAkBX,KAEtC+N,EAAYU,GACZT,EAAeU,EACjB,CAAE,MAAOpE,GACP/D,QAAQ+D,MAAM,8CAAiCA,EACjD,IAGFqC,EAAAA,EAAAA,WAAU,KACJkB,GACFW,EAAgBX,IAEjB,CAACA,IAEJ,MAAM7K,EAAcC,GACXnD,EAAAA,EAAkBkD,WAAWC,GAGtC,OACE6F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EAEtCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yCAAwCC,UACrDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA2BC,UACxCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,UACEY,QAAS6D,EACT3E,UAAU,0EAAyEC,UAEnFC,EAAAA,EAAAA,KAAC4F,EAAAA,EAAa,CAAC9F,UAAU,eAE3BE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sCAAqCC,SAAC,wCAM5DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EAErDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,mBAGhEC,EAAAA,EAAAA,KAAA,UACE5H,MAAOwM,GAAmB,GAC1BzE,SAAWyB,GAAMiD,EAAmBgB,OAAOjE,EAAEtB,OAAOlI,QACpD0H,UAAU,sHAAqHC,SAE9H2E,EAAUhD,IAAKoE,IACd9F,EAAAA,EAAAA,KAAA,UAAyB5H,MAAO0N,EAAQlH,GAAGmB,SACxC+F,EAAQrF,MADEqF,EAAQlH,UAO1BgG,IACC/E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EAErCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BC,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qCAAoCC,UACjDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,wDAAuDC,SAAA,EACnEC,EAAAA,EAAAA,KAACnC,EAAAA,EAAmB,CAACiC,UAAU,iCAAiC,gCAGlEE,EAAAA,EAAAA,KAAA,UACEY,QAASA,IAAMqE,GAAmB,GAClCnF,UAAU,+NAA8NC,SACzO,uBAKLC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,MAAKC,SACjB3I,GACCyI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oCAAmCC,SAAC,wBACpDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAC/B3I,EAAS0L,gBACR9C,EAAAA,EAAAA,KAAChB,EAAAA,EAAe,CAACc,UAAU,iCAE3BE,EAAAA,EAAAA,KAAC+F,EAAAA,EAAW,CAACjG,UAAU,+BAEzBE,EAAAA,EAAAA,KAAA,QAAMF,UAAS,WAAA5I,OAAaE,EAAS0L,eAAiB,iBAAmB,gBAAiB/C,SACvF3I,EAAS0L,eAAiB,aAAY,uBAK5C1L,EAAS0L,iBACRjD,EAAAA,EAAAA,MAAA0B,EAAAA,SAAA,CAAAxB,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oCAAmCC,SAAC,6BACpDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wBAAuBC,SACpC3I,EAAS8L,YAAc,UAI5BrD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oCAAmCC,SAAC,wBACpDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wBAAuBC,SACpC3I,EAAS+L,aAAe,UAI7BtD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oCAAmCC,SAAC,sCACpDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wBAAuBC,SACpC3I,EAASgM,UAAY,aAAY,mBAItCvD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oCAAmCC,SAAC,kCACpDF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,wBAAuBC,SAAA,CACR,WAA5B3I,EAASiM,gBAA+B,uBACZ,UAA5BjM,EAASiM,gBAA8B,QACX,WAA5BjM,EAASiM,gBAA+B,mBACZ,WAA5BjM,EAASiM,gBAA+B,oBAI5CjM,EAAS4O,YACRnG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oCAAmCC,SAAC,mCACpDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wBAAuBC,SACpChG,EAAW3C,EAAS4O,uBAQjChG,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iCAAgCC,SAAC,wCAQpDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BC,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qCAAoCC,UACjDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,wDAAuDC,SAAA,EACnEC,EAAAA,EAAAA,KAACiG,EAAAA,EAAa,CAACnG,UAAU,+BAA+B,0CAG1DE,EAAAA,EAAAA,KAAA,UACEY,QAASA,IAAMuE,GAAwB,GACvCrF,UAAU,yNAAwNC,SACnO,+BAKLC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,MAAKC,SACjBtI,EAAYiC,OAAS,GACpBsG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACvBtI,EAAYiK,IAAKwE,IAChBrG,EAAAA,EAAAA,MAAA,OAAmBC,UAAU,wBAAuBC,SAAA,EAClDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oCAAmCC,SAChDmG,EAAKC,cAERnG,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wBAAuBC,SACpCmG,EAAKE,WAAarM,EAAWmM,EAAKE,YAAc,UAGrDvG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,CAClCmG,EAAKG,oBACJrG,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gGAA+FC,SAAC,6BAIjHmG,EAAKI,sBACJtG,EAAAA,EAAAA,KAAA,QAAMF,UAAU,kGAAiGC,SAAC,6BAInHmG,EAAKK,oBACJvG,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oGAAmGC,SAAC,4BAIrHmG,EAAKM,gBACJxG,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oGAAmGC,SAAC,wBAIrHmG,EAAKO,gBACJzG,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oGAAmGC,SAAC,uBAIrHmG,EAAKQ,gBACJ1G,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gGAA+FC,SAAC,gCAIjHmG,EAAKS,gBACJ3G,EAAAA,EAAAA,KAAA,QAAMF,UAAU,8FAA6FC,SAAC,+BAI/GmG,EAAKU,sBACJ5G,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gGAA+FC,SAAC,mCA9C5GmG,EAAKtH,QAuDnBoB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iCAAgCC,SAAC,4DAUvDiF,GAAmB5N,IAClB4I,EAAAA,EAAAA,KAAC6G,EAAmB,CAClBnE,OAAQsC,EACRrC,QAASA,IAAMsC,GAAmB,GAClClO,UAAW6N,EACXxN,SAAUA,EACVwL,OAAQ/B,UACN,UACQhK,EAAAA,EAAkBM,aAAayN,EAAkBkC,SACjDvB,EAAgBX,GACtBK,GAAmB,EACrB,CAAE,MAAO5D,GACP/D,QAAQ+D,MAAM,6CAAwCA,EACxD,W,yFCjSd,SAASiD,EAASpM,EAIf4F,GAAQ,IAJQ,MACjBC,EAAK,QACLC,GAED9F,EADI+F,GAAKC,EAAAA,EAAAA,GAAAhG,EAAAiG,GAER,OAAoBC,EAAAA,cAAoB,MAAOrG,OAAOsG,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKb,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DQ,GAAIZ,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDS,cAAe,QACfC,eAAgB,QAChBC,EAAG,0BAEP,CACA,MACA,EADiCX,EAAAA,WAAiBkG,E,yFCvBlD,SAAS2B,EAAa/N,EAInB4F,GAAQ,IAJY,MACrBC,EAAK,QACLC,GAED9F,EADI+F,GAAKC,EAAAA,EAAAA,GAAAhG,EAAAiG,GAER,OAAoBC,EAAAA,cAAoB,MAAOrG,OAAOsG,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKb,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DQ,GAAIZ,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDS,cAAe,QACfC,eAAgB,QAChBC,EAAG,mgBAEP,CACA,MACA,EADiCX,EAAAA,WAAiB6H,E,yFCvBlD,SAASF,EAAW7N,EAIjB4F,GAAQ,IAJU,MACnBC,EAAK,QACLC,GAED9F,EADI+F,GAAKC,EAAAA,EAAAA,GAAAhG,EAAAiG,GAER,OAAoBC,EAAAA,cAAoB,MAAOrG,OAAOsG,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKb,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DQ,GAAIZ,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDS,cAAe,QACfC,eAAgB,QAChBC,EAAG,0EAEP,CACA,MACA,EADiCX,EAAAA,WAAiB2H,E,yFCvBlD,SAASH,EAAa1N,EAInB4F,GAAQ,IAJY,MACrBC,EAAK,QACLC,GAED9F,EADI+F,GAAKC,EAAAA,EAAAA,GAAAhG,EAAAiG,GAER,OAAoBC,EAAAA,cAAoB,MAAOrG,OAAOsG,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKb,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DQ,GAAIZ,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDS,cAAe,QACfC,eAAgB,QAChBC,EAAG,wCAEP,CACA,MACA,EADiCX,EAAAA,WAAiBwH,E","sources":["services/accountingService.ts","../node_modules/@heroicons/react/24/outline/esm/ComputerDesktopIcon.js","../node_modules/@heroicons/react/24/outline/esm/CheckCircleIcon.js","components/PohodaXmlImportExport.tsx","components/PohodaSettingsModal.tsx","pages/AdminSettingsPage.tsx","../node_modules/@heroicons/react/24/outline/esm/CheckIcon.js","../node_modules/@heroicons/react/24/outline/esm/UserGroupIcon.js","../node_modules/@heroicons/react/24/outline/esm/XCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/ArrowLeftIcon.js"],"sourcesContent":["import { apiService, ApiResponse } from './apiService';\r\n\r\n// ===== ÚČTOVNÍCTVO SERVICE =====\r\n\r\nexport interface AccountingSettings {\r\n  id?: number;\r\n  company_id: number;\r\n  pohoda_enabled: boolean;\r\n  pohoda_url?: string;\r\n  pohoda_username?: string;\r\n  pohoda_password?: string;\r\n  pohoda_ico?: string;\r\n  pohoda_year?: string;\r\n  auto_sync: boolean;\r\n  sync_frequency: 'hourly' | 'daily' | 'weekly' | 'manual';\r\n  last_sync?: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport interface AccountingPermissions {\r\n  id?: number;\r\n  user_email: string;\r\n  company_id: number;\r\n  can_view_invoices: boolean;\r\n  can_create_invoices: boolean;\r\n  can_edit_invoices: boolean;\r\n  can_delete_invoices: boolean;\r\n  can_view_bank: boolean;\r\n  can_edit_bank: boolean;\r\n  can_view_cash: boolean;\r\n  can_edit_cash: boolean;\r\n  can_view_reports: boolean;\r\n  can_export_data: boolean;\r\n  can_manage_settings: boolean;\r\n  granted_by: string;\r\n  granted_at?: string;\r\n}\r\n\r\nexport interface FinancialAnalysis {\r\n  expenses: {\r\n    total: number;\r\n    count: number;\r\n    details: Array<{\r\n      account: string;\r\n      account_name: string;\r\n      amount: number;\r\n      count: number;\r\n    }>;\r\n  };\r\n  revenue: {\r\n    total: number;\r\n    count: number;\r\n    details: Array<{\r\n      account: string;\r\n      account_name: string;\r\n      amount: number;\r\n      count: number;\r\n    }>;\r\n  };\r\n  profit: number;\r\n  isProfit: boolean;\r\n  filters?: {\r\n    dateFrom: string | null;\r\n    dateTo: string | null;\r\n  };\r\n}\r\n\r\nexport interface InvoiceItem {\r\n  id?: number;\r\n  description: string;\r\n  quantity: number;\r\n  unit_price: number;\r\n  vat_rate: number;\r\n  total_price: number;\r\n  vat_amount: number;\r\n  unit?: string;\r\n}\r\n\r\nexport interface IssuedInvoice {\r\n  id?: number;\r\n  company_id: number;\r\n  invoice_number: string;\r\n  customer_name: string;\r\n  customer_ico?: string;\r\n  customer_dic?: string;\r\n  customer_address?: string;\r\n  issue_date: string;\r\n  due_date: string;\r\n  total_amount: number;\r\n  vat_amount: number;\r\n  \r\n  // MDB polia - základy DPH\r\n  kc0?: number;\r\n  kc1?: number;\r\n  kc2?: number;\r\n  kc3?: number;\r\n  \r\n  // MDB polia - DPH\r\n  kc_dph1?: number;\r\n  kc_dph2?: number;\r\n  kc_dph3?: number;\r\n  \r\n  // MDB polia - celkové sumy\r\n  kc_celkem?: number;\r\n  \r\n  // MDB polia - ďalšie informácie\r\n  var_sym?: string;\r\n  s_text?: string;\r\n  mdb_id?: number;\r\n  rel_tp_fak?: number;\r\n  datum?: string;\r\n  dat_splat?: string;\r\n  firma?: string;\r\n  ico?: string;\r\n  dic?: string;\r\n  ulice?: string;\r\n  psc?: string;\r\n  obec?: string;\r\n  mdb_cislo?: string;\r\n  \r\n  // MDB polia - likvidácia a platby\r\n  kc_likv?: number;\r\n  kc_u?: number;\r\n  dat_likv?: string;\r\n  \r\n  currency: string;\r\n  status: 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled';\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  items?: InvoiceItem[];\r\n}\r\n\r\nexport interface ReceivedInvoice {\r\n  id?: number;\r\n  company_id: number;\r\n  invoice_number: string;\r\n  supplier_name: string;\r\n  supplier_ico?: string;\r\n  supplier_dic?: string;\r\n  supplier_address?: string;\r\n  issue_date: string;\r\n  due_date: string;\r\n  total_amount: number;\r\n  vat_amount: number;\r\n  \r\n  // MDB polia - základy DPH\r\n  kc0?: number;\r\n  kc1?: number;\r\n  kc2?: number;\r\n  kc3?: number;\r\n  \r\n  // MDB polia - DPH\r\n  kc_dph1?: number;\r\n  kc_dph2?: number;\r\n  kc_dph3?: number;\r\n  \r\n  // MDB polia - celkové sumy\r\n  kc_celkem?: number;\r\n  \r\n  // MDB polia - ďalšie informácie\r\n  var_sym?: string;\r\n  s_text?: string;\r\n  mdb_id?: number;\r\n  rel_tp_fak?: number;\r\n  datum?: string;\r\n  dat_splat?: string;\r\n  firma?: string;\r\n  ico?: string;\r\n  dic?: string;\r\n  ulice?: string;\r\n  psc?: string;\r\n  obec?: string;\r\n  mdb_cislo?: string;\r\n  \r\n  // MDB polia - likvidácia a platby\r\n  kc_likv?: number;\r\n  kc_u?: number;\r\n  dat_likv?: string;\r\n  \r\n  currency: string;\r\n  status: 'received' | 'approved' | 'paid' | 'overdue' | 'disputed';\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  items?: InvoiceItem[];\r\n}\r\n\r\nexport interface BankTransaction {\r\n  id?: number;\r\n  company_id: number;\r\n  transaction_date: string;\r\n  description: string;\r\n  amount: number;\r\n  currency: string;\r\n  type: 'income' | 'expense';\r\n  category?: string;\r\n  bank_account?: string;\r\n  reference?: string;\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport interface CashTransaction {\r\n  id?: number;\r\n  company_id: number;\r\n  transaction_date: string;\r\n  description: string;\r\n  amount: number;\r\n  currency: string;\r\n  type: 'income' | 'expense';\r\n  category?: string;\r\n  receipt_number?: string;\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\n\r\n\r\nexport interface AccountingStats {\r\n  issued_invoices: {\r\n    total_count: number;\r\n    total_amount: number;\r\n    paid_amount: number;\r\n    overdue_amount: number;\r\n  };\r\n  received_invoices: {\r\n    total_count: number;\r\n    total_amount: number;\r\n    paid_amount: number;\r\n    overdue_amount: number;\r\n  };\r\n  bank: {\r\n    total_income: number;\r\n    total_expense: number;\r\n  };\r\n  cash: {\r\n    total_income: number;\r\n    total_expense: number;\r\n  };\r\n}\r\n\r\nexport class AccountingService {\r\n  // 1. NASTAVENIA ÚČTOVNÍCTVA\r\n\r\n    async getSettings(companyId: number): Promise<AccountingSettings> {\r\n    const response = await apiService.get(`/accounting/settings/${companyId}`); \r\n    return response as AccountingSettings;\r\n  }\r\n\r\n  async saveSettings(companyId: number, settings: Partial<AccountingSettings>): Promise<any> {\r\n    const response = await apiService.post(`/accounting/settings/${companyId}`, settings);\r\n    return response;\r\n  }\r\n\r\n  // 2. PRÁVA PRE ÚČTOVNÍCTVO\r\n\r\n  async getPermissions(companyId: number, userEmail: string): Promise<AccountingPermissions> {\r\n    const response = await apiService.get(`/accounting/permissions/${companyId}/${userEmail}`);\r\n    return response as AccountingPermissions;\r\n  }\r\n\r\n  async savePermissions(companyId: number, permissions: Partial<AccountingPermissions>): Promise<any> {\r\n    const response = await apiService.post(`/accounting/permissions/${companyId}`, permissions);\r\n    return response;\r\n  }\r\n\r\n  async getAllPermissions(companyId: number): Promise<AccountingPermissions[]> {\r\n    const response = await apiService.get(`/accounting/permissions/${companyId}`);\r\n    return response as AccountingPermissions[];\r\n  }\r\n\r\n  // 3. VYDANÉ FAKTÚRY\r\n\r\n  async getIssuedInvoices(\r\n    companyId: number, \r\n    filters?: {\r\n      status?: string;\r\n      date_from?: string;\r\n      date_to?: string;\r\n      limit?: number;\r\n      offset?: number;\r\n    }\r\n  ): Promise<IssuedInvoice[]> {\r\n    const params = new URLSearchParams();\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          params.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n    \r\n    const response = await apiService.get(`/accounting/issued-invoices/${companyId}?${params}`);\r\n    return response as IssuedInvoice[];\r\n  }\r\n\r\n  async createIssuedInvoice(companyId: number, invoice: Partial<IssuedInvoice>): Promise<any> {\r\n    const response = await apiService.post(`/accounting/issued-invoices/${companyId}`, invoice);\r\n    return response;\r\n  }\r\n\r\n  async getIssuedInvoiceById(invoiceId: number): Promise<IssuedInvoice> {\r\n    const response = await apiService.get(`/accounting/issued-invoices/detail/${invoiceId}`);\r\n    return response as IssuedInvoice;\r\n  }\r\n\r\n\r\n\r\n  // 4. PRIJATÉ FAKTÚRY\r\n\r\n  async getReceivedInvoices(\r\n    companyId: number, \r\n    filters?: {\r\n      status?: string;\r\n      date_from?: string;\r\n      date_to?: string;\r\n      limit?: number;\r\n      offset?: number;\r\n    }\r\n  ): Promise<ReceivedInvoice[]> {\r\n    const params = new URLSearchParams();\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          params.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n    \r\n    const response = await apiService.get(`/accounting/received-invoices/${companyId}?${params}`);\r\n    return response as ReceivedInvoice[];\r\n  }\r\n\r\n  async getReceivedInvoiceById(invoiceId: number): Promise<ReceivedInvoice> {\r\n    const response = await apiService.get(`/accounting/received-invoices/detail/${invoiceId}`);\r\n    return response as ReceivedInvoice;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // 7. HOSPODÁRSKE VÝSLEDKY (pUD)\r\n\r\n  async getPudSummary(companyId: number): Promise<{ total_kc: number; total_count: number }> {\r\n    const response = await apiService.get(`/accounting/pud-summary/${companyId}`);\r\n    return response as { total_kc: number; total_count: number };\r\n  }\r\n\r\n  // Získanie podrobnej analýzy nákladov a výnosov\r\n  async getFinancialAnalysis(companyId: number, dateFrom?: string, dateTo?: string): Promise<FinancialAnalysis> {\r\n    let url = `/accounting/financial-analysis/${companyId}`;\r\n    const params = new URLSearchParams();\r\n    \r\n    if (dateFrom) params.append('dateFrom', dateFrom);\r\n    if (dateTo) params.append('dateTo', dateTo);\r\n    \r\n    if (params.toString()) {\r\n      url += `?${params.toString()}`;\r\n    }\r\n    \r\n    const response = await apiService.get(url);\r\n    return response as FinancialAnalysis;\r\n  }\r\n\r\n  // 8. ŠTATISTIKY\r\n\r\n  async getStats(\r\n    companyId: number, \r\n    filters?: {\r\n      year?: number;\r\n      month?: number;\r\n    }\r\n  ): Promise<AccountingStats> {\r\n    const params = new URLSearchParams();\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          params.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n    \r\n    const response = await apiService.get(`/accounting/stats/${companyId}?${params}`);\r\n    return response as AccountingStats;\r\n  }\r\n\r\n  // 8. POMOCNÉ METÓDY\r\n\r\n  formatCurrency(amount: number, currency: string = 'EUR'): string {\r\n    return new Intl.NumberFormat('sk-SK', {\r\n      style: 'currency',\r\n      currency: currency\r\n    }).format(amount);\r\n  }\r\n\r\n  formatDate(date: string): string {\r\n    return new Date(date).toLocaleDateString('sk-SK');\r\n  }\r\n\r\n  getStatusBadge(status: string): { text: string; color: string } {\r\n    const statusMap: Record<string, { text: string; color: string }> = {\r\n      // Vydané faktúry\r\n      draft: { text: 'Koncept', color: 'bg-gray-100 text-gray-800' },\r\n      sent: { text: 'Odoslaná', color: 'bg-blue-100 text-blue-800' },\r\n      paid: { text: 'Zaplatená', color: 'bg-green-100 text-green-800' },\r\n      overdue: { text: 'Po splatnosti', color: 'bg-red-100 text-red-800' },\r\n      cancelled: { text: 'Zrušená', color: 'bg-yellow-100 text-yellow-800' },\r\n      \r\n      // Prijaté faktúry\r\n      received: { text: 'Prijatá', color: 'bg-gray-100 text-gray-800' },\r\n      approved: { text: 'Schválená', color: 'bg-blue-100 text-blue-800' },\r\n      disputed: { text: 'Sporná', color: 'bg-orange-100 text-orange-800' }\r\n    };\r\n\r\n    return statusMap[status] || { text: status, color: 'bg-gray-100 text-gray-800' };\r\n  }\r\n\r\n  getTypeBadge(type: string): { text: string; color: string } {\r\n    const typeMap: Record<string, { text: string; color: string }> = {\r\n      income: { text: 'Príjem', color: 'bg-green-100 text-green-800' },\r\n      expense: { text: 'Výdavok', color: 'bg-red-100 text-red-800' }\r\n    };\r\n\r\n    return typeMap[type] || { text: type, color: 'bg-gray-100 text-gray-800' };\r\n  }\r\n\r\n  // 9. POHODA INTEGRÁCIA\r\n\r\n  // Test POHODA connection\r\n  async testPohodaConnection(companyId: number, settings: Partial<AccountingSettings>): Promise<ApiResponse> {\r\n    return await apiService.post('/accounting/test-pohoda-connection', {\r\n      companyId,\r\n      ...settings\r\n    });\r\n  }\r\n\r\n  // Test POHODA invoices\r\n  async testPohodaInvoices(companyId: number, settings: Partial<AccountingSettings>): Promise<ApiResponse> {\r\n    return await apiService.post('/accounting/test-pohoda-invoices', {\r\n      companyId,\r\n      ...settings\r\n    });\r\n  }\r\n\r\n  // Sync POHODA invoices\r\n  async syncPohodaInvoices(companyId: number, dateFrom?: string, dateTo?: string): Promise<ApiResponse> {\r\n    return await apiService.post(`/accounting/sync-pohoda-invoices/${companyId}`, {\r\n      dateFrom,\r\n      dateTo\r\n    });\r\n  }\r\n\r\n  // 10. XML IMPORT/EXPORT\r\n\r\n  // Upload POHODA XML file\r\n  async uploadPohodaXml(companyId: number, file: File): Promise<ApiResponse> {\r\n    const formData = new FormData();\r\n    formData.append('xmlFile', file);\r\n    \r\n    // Používame fetch priamo pre FormData\r\n    const response = await fetch(`http://localhost:5000/api/accounting/upload-pohoda-xml/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n      },\r\n      body: formData\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri nahrávaní XML súboru');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // Export invoices to POHODA XML format\r\n  async exportPohodaXml(companyId: number, dateFrom?: string, dateTo?: string): Promise<Blob> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/export-pohoda-xml/${companyId}?dateFrom=${dateFrom || ''}&dateTo=${dateTo || ''}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri exporte XML súboru');\r\n    }\r\n    \r\n    return await response.blob();\r\n  }\r\n\r\n\r\n\r\n  // 11. OBNOVENIE FAKTÚR Z MDB\r\n\r\n  // Obnovenie vydaných faktúr z MDB\r\n  async refreshInvoicesFromMdb(companyId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    importedCount: number;\r\n    totalCount: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/refresh-invoices/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri obnovení faktúr z MDB');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // Obnovenie prijatých faktúr z MDB\r\n  async refreshReceivedInvoicesFromMdb(companyId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    importedCount: number;\r\n    totalCount: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/refresh-received-invoices/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri obnovení prijatých faktúr z MDB');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 12. IMPORT FAKTÚR Z MDB\r\n\r\n  // Import vydaných faktúr z MDB\r\n  async importInvoicesFromMdb(companyId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    importedCount: number;\r\n    skippedCount: number;\r\n    totalCount: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/import-invoices/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri importe faktúr z MDB');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 12. MAZANIE POLOŽIEK\r\n\r\n  // Mazanie vydanej faktúry\r\n  async deleteIssuedInvoice(invoiceId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/issued-invoices/${invoiceId}`);\r\n    return response;\r\n  }\r\n\r\n  // Mazanie prijatej faktúry\r\n  async deleteReceivedInvoice(invoiceId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/received-invoices/${invoiceId}`);\r\n    return response;\r\n  }\r\n\r\n  // Mazanie bankovej transakcie\r\n  async deleteBankTransaction(transactionId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/bank-transactions/${transactionId}`);\r\n    return response;\r\n  }\r\n\r\n  // Mazanie pokladničnej transakcie\r\n  async deleteCashTransaction(transactionId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/cash-transactions/${transactionId}`);\r\n    return response;\r\n  }\r\n\r\n  // 13. ADRESÁR FIRIEM Z MDB\r\n\r\n  // Načítanie adresára firiem z MDB\r\n  async getDirectory(companyId: number): Promise<{\r\n    success: boolean;\r\n    company: { ico: string; name: string };\r\n    mdb_file: string;\r\n    companies: Array<{\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n      dic: string;\r\n      address: string;\r\n      postal_code: string;\r\n      city: string;\r\n      phone: string;\r\n      email: string;\r\n      bank_account: string;\r\n      bank_code: string;\r\n    }>;\r\n    total_count: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/directory/${companyId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní adresára');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 14. DPH PODANIA\r\n\r\n  // Načítanie DPH podaní z MDB\r\n  async getVatReturns(companyId: number, year?: number): Promise<{\r\n    company: {\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n    };\r\n    year: number;\r\n    returns: Array<{\r\n      id: number;\r\n      rok: number;\r\n      mesiac: number;\r\n      povinnost: number;\r\n      odpočet: number;\r\n      odoslané: boolean;\r\n    }>;\r\n    summary: {\r\n      totalPovinnost: number;\r\n      totalOdpočet: number;\r\n      totalRozdiel: number;\r\n      odoslanéCount: number;\r\n      neodoslanéCount: number;\r\n    };\r\n  }> {\r\n    const yearParam = year || new Date().getFullYear();\r\n    const response = await fetch(`http://localhost:5000/api/accounting/vat-returns/${companyId}?year=${yearParam}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní DPH podaní');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 15. BANKOVÉ ÚČTY\r\n\r\n  // Načítanie bankových účtov z MDB\r\n  async getBankAccounts(companyId: number): Promise<{\r\n    company: {\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n    };\r\n    accounts: Array<{\r\n      id: number;\r\n      accountNumber: string;\r\n      accountName: string;\r\n      bankName: string;\r\n      balance: number;\r\n      creditTotal: number;\r\n      debitTotal: number;\r\n      transactionCount: number;\r\n    }>;\r\n    summary: {\r\n      totalBalance: number;\r\n      totalCredit: number;\r\n      totalDebit: number;\r\n      accountCount: number;\r\n    };\r\n  }> {\r\n    console.log('🏦 Volám bankový endpoint pre companyId:', companyId);\r\n    \r\n    const response = await fetch(`http://localhost:5000/api/accounting/bank-accounts/${companyId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    console.log('🏦 Bankový endpoint response status:', response.status);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní bankových účtov');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('🏦 Bankový endpoint response data:', data);\r\n    \r\n    return data;\r\n  }\r\n\r\n  // 16. POKLADŇA\r\n\r\n  // Načítanie pokladňových účtov z MDB\r\n  async getCashAccounts(companyId: number): Promise<{\r\n    company: {\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n    };\r\n    accounts: Array<{\r\n      id: number;\r\n      accountNumber: string;\r\n      accountName: string;\r\n      balance: number;\r\n      creditTotal: number;\r\n      debitTotal: number;\r\n      transactionCount: number;\r\n    }>;\r\n    summary: {\r\n      totalBalance: number;\r\n      totalCredit: number;\r\n      totalDebit: number;\r\n      accountCount: number;\r\n    };\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/cash-accounts/${companyId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní pokladňových účtov');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 17. BANKOVÉ TRANSAKCIE\r\n  async getBankTransactions(companyId: number, accountNumber: string): Promise<{\r\n    company: { id: number; name: string; ico: string; };\r\n    account: { accountNumber: string; accountName: string; bankName: string; };\r\n    transactions: Array<{\r\n      id: number; datum: string; popis: string; kredit: number; debet: number; zostatok: number; typ: 'kredit' | 'debet';\r\n    }>;\r\n    summary: {\r\n      totalCredit: number; totalDebit: number; currentBalance: number; transactionCount: number;\r\n    };\r\n  }> {\r\n    console.log('🏦 Volám bankový transakčný endpoint pre companyId:', companyId, 'accountNumber:', accountNumber);\r\n\r\n    const response = await fetch(`http://localhost:5000/api/accounting/bank-transactions/${companyId}/${accountNumber}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    console.log('🏦 Bankový transakčný endpoint response status:', response.status);\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní bankových transakcií');\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('🏦 Bankový transakčný endpoint response data:', data);\r\n\r\n    return data;\r\n  }\r\n\r\n  // 18. POKLADŇOVÉ TRANSAKCIE\r\n  async getCashTransactions(companyId: number, accountNumber: string): Promise<{\r\n    company: { id: number; name: string; ico: string; };\r\n    account: { accountNumber: string; accountName: string; bankName: string; };\r\n    transactions: Array<{\r\n      id: number; datum: string; popis: string; kredit: number; debet: number; zostatok: number; typ: 'kredit' | 'debet';\r\n    }>;\r\n    summary: {\r\n      totalCredit: number; totalDebit: number; currentBalance: number; transactionCount: number;\r\n    };\r\n  }> {\r\n    console.log('💰 Volám pokladňový transakčný endpoint pre companyId:', companyId, 'accountNumber:', accountNumber);\r\n\r\n    const response = await fetch(`http://localhost:5000/api/accounting/cash-transactions/${companyId}/${accountNumber}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    console.log('💰 Pokladňový transakčný endpoint response status:', response.status);\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní pokladňových transakcií');\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('💰 Pokladňový transakčný endpoint response data:', data);\r\n\r\n    return data;\r\n  }\r\n}\r\n\r\nexport const accountingService = new AccountingService();\r\n","import * as React from \"react\";\nfunction ComputerDesktopIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 17.25v1.007a3 3 0 0 1-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0 1 15 18.257V17.25m6-12V15a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 15V5.25m18 0A2.25 2.25 0 0 0 18.75 3H5.25A2.25 2.25 0 0 0 3 5.25m18 0V12a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 12V5.25\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ComputerDesktopIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CheckCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckCircleIcon);\nexport default ForwardRef;","import React, { useState } from 'react';\r\nimport { accountingService } from '../services/accountingService';\r\n\r\ninterface PohodaXmlImportExportProps {\r\n  companyId: number;\r\n}\r\n\r\nconst PohodaXmlImportExport: React.FC<PohodaXmlImportExportProps> = ({ companyId }) => {\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [uploadResult, setUploadResult] = useState<{ success: boolean; message: string; details?: any } | null>(null);\r\n  const [dateFrom, setDateFrom] = useState('');\r\n  const [dateTo, setDateTo] = useState('');\r\n\r\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file && (file.type === 'application/xml' || file.type === 'text/xml')) {\r\n      setSelectedFile(file);\r\n      setUploadResult(null);\r\n    } else {\r\n      alert('Prosím vyberte XML súbor');\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert('Prosím vyberte XML súbor');\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setUploadResult(null);\r\n\r\n    try {\r\n      const result = await accountingService.uploadPohodaXml(companyId, selectedFile);\r\n      \r\n      setUploadResult({\r\n        success: result.success,\r\n        message: result.message || 'Upload dokončený',\r\n        details: result.data\r\n      });\r\n      \r\n      setSelectedFile(null);\r\n      // Reset file input\r\n      const fileInput = document.getElementById('xml-file-input') as HTMLInputElement;\r\n      if (fileInput) fileInput.value = '';\r\n      \r\n    } catch (error) {\r\n      console.error('Chyba pri upload:', error);\r\n      setUploadResult({\r\n        success: false,\r\n        message: 'Chyba pri nahrávaní XML súboru'\r\n      });\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    setIsExporting(true);\r\n\r\n    try {\r\n      const blob = await accountingService.exportPohodaXml(companyId, dateFrom, dateTo);\r\n      \r\n      // Vytvorenie download linku\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `pohoda_invoices_${companyId}_${new Date().toISOString().split('T')[0]}.xml`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n      \r\n    } catch (error) {\r\n      console.error('Chyba pri exporte:', error);\r\n      alert('Chyba pri exporte XML súboru');\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow p-6\">\r\n      <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n        POHODA XML Import/Export\r\n      </h3>\r\n      \r\n      <div className=\"space-y-6\">\r\n        {/* Import sekcia */}\r\n        <div className=\"border rounded-lg p-4\">\r\n          <h4 className=\"text-md font-medium text-gray-700 mb-3\">Import faktúr z POHODA XML</h4>\r\n          \r\n          <div className=\"space-y-3\">\r\n            <div>\r\n              <label htmlFor=\"xml-file-input\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Vyberte XML súbor z POHODA\r\n              </label>\r\n              <input\r\n                id=\"xml-file-input\"\r\n                type=\"file\"\r\n                accept=\".xml\"\r\n                onChange={handleFileSelect}\r\n                className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\r\n              />\r\n              <p className=\"mt-1 text-sm text-gray-500\">\r\n                Podporované sú len XML súbory exportované z POHODA\r\n              </p>\r\n            </div>\r\n            \r\n            {selectedFile && (\r\n              <div className=\"bg-blue-50 p-3 rounded-md\">\r\n                <p className=\"text-sm text-blue-700\">\r\n                  <strong>Vybraný súbor:</strong> {selectedFile.name} ({(selectedFile.size / 1024).toFixed(1)} KB)\r\n                </p>\r\n              </div>\r\n            )}\r\n            \r\n            <button\r\n              onClick={handleUpload}\r\n              disabled={!selectedFile || isUploading}\r\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isUploading ? (\r\n                <>\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                  Nahrávam...\r\n                </>\r\n              ) : (\r\n                'Nahrať XML súbor'\r\n              )}\r\n            </button>\r\n          </div>\r\n          \r\n          {uploadResult && (\r\n            <div className={`mt-4 p-3 rounded-md ${\r\n              uploadResult.success ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700'\r\n            }`}>\r\n              <p className=\"text-sm font-medium\">{uploadResult.message}</p>\r\n              {uploadResult.details && (\r\n                <div className=\"mt-2 text-xs\">\r\n                  <p>Importované: {uploadResult.details.imported}</p>\r\n                  <p>Chyby: {uploadResult.details.errors?.length || 0}</p>\r\n                  {uploadResult.details.errors && uploadResult.details.errors.length > 0 && (\r\n                    <ul className=\"mt-1 list-disc list-inside\">\r\n                      {uploadResult.details.errors.map((error: string, index: number) => (\r\n                        <li key={index}>{error}</li>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Export sekcia */}\r\n        <div className=\"border rounded-lg p-4\">\r\n          <h4 className=\"text-md font-medium text-gray-700 mb-3\">Export faktúr do POHODA XML</h4>\r\n          \r\n          <div className=\"space-y-3\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n              <div>\r\n                <label htmlFor=\"date-from\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Dátum od\r\n                </label>\r\n                <input\r\n                  id=\"date-from\"\r\n                  type=\"date\"\r\n                  value={dateFrom}\r\n                  onChange={(e) => setDateFrom(e.target.value)}\r\n                  className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label htmlFor=\"date-to\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Dátum do\r\n                </label>\r\n                <input\r\n                  id=\"date-to\"\r\n                  type=\"date\"\r\n                  value={dateTo}\r\n                  onChange={(e) => setDateTo(e.target.value)}\r\n                  className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <p className=\"text-sm text-gray-500\">\r\n              Ak nevyberiete dátumy, exportujú sa všetky faktúry\r\n            </p>\r\n            \r\n            <button\r\n              onClick={handleExport}\r\n              disabled={isExporting}\r\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isExporting ? (\r\n                <>\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                  Exportujem...\r\n                </>\r\n              ) : (\r\n                'Exportovať do XML'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Informácie */}\r\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\r\n          <h4 className=\"text-md font-medium text-yellow-800 mb-2\">Ako to funguje</h4>\r\n          <div className=\"text-sm text-yellow-700 space-y-1\">\r\n            <p><strong>Import:</strong> Exportujte faktúry z POHODA do XML súboru a nahrajte ich tu</p>\r\n            <p><strong>Export:</strong> Stiahnite faktúry v POHODA XML formáte pre import do POHODA</p>\r\n            <p><strong>Kompatibilita:</strong> Funguje s demo aj plnou verziou POHODA</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PohodaXmlImportExport;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { XMarkIcon, CheckIcon, ExclamationTriangleIcon } from '@heroicons/react/24/outline';\r\nimport { accountingService, AccountingSettings } from '../services/accountingService';\r\nimport PohodaXmlImportExport from './PohodaXmlImportExport';\r\n\r\ninterface PohodaSettingsModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  companyId: number;\r\n  settings: AccountingSettings;\r\n  onSave: (settings: Partial<AccountingSettings>) => void;\r\n}\r\n\r\nconst PohodaSettingsModal: React.FC<PohodaSettingsModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  companyId,\r\n  settings,\r\n  onSave\r\n}) => {\r\n        const [formData, setFormData] = useState({\r\n        pohoda_enabled: false,\r\n        pohoda_url: '',\r\n        pohoda_username: '',\r\n        pohoda_password: '',\r\n        pohoda_ico: '',\r\n        pohoda_year: '',\r\n        auto_sync: false,\r\n        sync_frequency: 'daily' as 'hourly' | 'daily' | 'weekly' | 'manual'\r\n      });\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [testResult, setTestResult] = useState<{\r\n    success: boolean;\r\n    message: string;\r\n  } | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (settings) {\r\n      setFormData({\r\n        pohoda_enabled: settings.pohoda_enabled || false,\r\n        pohoda_url: settings.pohoda_url || '',\r\n        pohoda_username: settings.pohoda_username || '',\r\n        pohoda_password: settings.pohoda_password || '',\r\n        pohoda_ico: settings.pohoda_ico || '',\r\n        pohoda_year: settings.pohoda_year || '',\r\n        auto_sync: settings.auto_sync || false,\r\n        sync_frequency: settings.sync_frequency || 'daily'\r\n      });\r\n    }\r\n  }, [settings]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { name, value, type } = e.target;\r\n    const checked = (e.target as HTMLInputElement).checked;\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const canTestConnection = () => {\r\n    return formData.pohoda_url && formData.pohoda_username && formData.pohoda_password && formData.pohoda_ico && formData.pohoda_year;\r\n  };\r\n\r\n  const handleTestConnection = async () => {\r\n    setIsLoading(true);\r\n    setTestResult(null);\r\n\r\n    try {\r\n      const response = await fetch('/api/accounting/test-pohoda-connection', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({\r\n          companyId,\r\n          pohoda_url: formData.pohoda_url,\r\n          pohoda_username: formData.pohoda_username,\r\n          pohoda_password: formData.pohoda_password,\r\n          pohoda_ico: formData.pohoda_ico,\r\n          pohoda_year: formData.pohoda_year\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        setTestResult({\r\n          success: true,\r\n          message: 'Spojenie s POHODA mServer je úspešné!'\r\n        });\r\n      } else {\r\n        setTestResult({\r\n          success: false,\r\n          message: result.error || 'Nepodarilo sa pripojiť k POHODA mServer'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setTestResult({\r\n        success: false,\r\n        message: 'Chyba pri testovaní spojenia'\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await onSave({\r\n        pohoda_enabled: formData.pohoda_enabled,\r\n        pohoda_url: formData.pohoda_url,\r\n        pohoda_username: formData.pohoda_username,\r\n        pohoda_password: formData.pohoda_password,\r\n        pohoda_ico: formData.pohoda_ico,\r\n        pohoda_year: formData.pohoda_year,\r\n        auto_sync: formData.auto_sync,\r\n        sync_frequency: formData.sync_frequency\r\n      });\r\n\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Chyba pri ukladaní nastavení:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTestInvoices = async () => {\r\n    setIsLoading(true);\r\n    setTestResult(null);\r\n    \r\n    try {\r\n      const result = await accountingService.testPohodaInvoices(companyId, {\r\n        pohoda_url: formData.pohoda_url,\r\n        pohoda_username: formData.pohoda_username,\r\n        pohoda_password: formData.pohoda_password,\r\n        pohoda_ico: formData.pohoda_ico,\r\n        pohoda_year: formData.pohoda_year\r\n      });\r\n      \r\n      setTestResult({\r\n        success: result.success,\r\n        message: result.message || (result.success ? 'Faktúry úspešne načítané' : 'Chyba pri načítaní faktúr')\r\n      });\r\n    } catch (error) {\r\n      console.error('Chyba pri testovaní faktúr:', error);\r\n      setTestResult({\r\n        success: false,\r\n        message: 'Chyba pri testovaní faktúr'\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSyncInvoices = async () => {\r\n    setIsLoading(true);\r\n    setTestResult(null);\r\n    \r\n    try {\r\n      const result = await accountingService.syncPohodaInvoices(companyId);\r\n      \r\n      setTestResult({\r\n        success: result.success,\r\n        message: result.message || (result.success ? 'Synchronizácia úspešná' : 'Chyba pri synchronizácii')\r\n      });\r\n    } catch (error) {\r\n      console.error('Chyba pri synchronizácii:', error);\r\n      setTestResult({\r\n        success: false,\r\n        message: 'Chyba pri synchronizácii faktúr'\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex items-center justify-between p-6 border-b\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900\">\r\n            Nastavenia POHODA integrácie\r\n          </h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600\"\r\n          >\r\n            <XMarkIcon className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\r\n          {/* Základné nastavenia */}\r\n          <div className=\"space-y-4\">\r\n            <h3 className=\"text-lg font-medium text-gray-900\">Základné nastavenia</h3>\r\n            \r\n            <div className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"pohoda_enabled\"\r\n                name=\"pohoda_enabled\"\r\n                checked={formData.pohoda_enabled}\r\n                onChange={handleInputChange}\r\n                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n              />\r\n              <label htmlFor=\"pohoda_enabled\" className=\"ml-2 block text-sm text-gray-900\">\r\n                Povoliť POHODA integráciu\r\n              </label>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"pohoda_url\" className=\"block text-sm font-medium text-gray-700\">\r\n                POHODA mServer URL *\r\n              </label>\r\n              <input\r\n                type=\"url\"\r\n                id=\"pohoda_url\"\r\n                name=\"pohoda_url\"\r\n                value={formData.pohoda_url}\r\n                onChange={handleInputChange}\r\n                placeholder=\"http://localhost:8080\"\r\n                className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\r\n                required={formData.pohoda_enabled}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label htmlFor=\"pohoda_username\" className=\"block text-sm font-medium text-gray-700\">\r\n                  Používateľské meno *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"pohoda_username\"\r\n                  name=\"pohoda_username\"\r\n                  value={formData.pohoda_username}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"admin\"\r\n                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\r\n                  required={formData.pohoda_enabled}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"pohoda_password\" className=\"block text-sm font-medium text-gray-700\">\r\n                  Heslo *\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"pohoda_password\"\r\n                  name=\"pohoda_password\"\r\n                  value={formData.pohoda_password}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"••••••••\"\r\n                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\r\n                  required={formData.pohoda_enabled}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"pohoda_ico\" className=\"block text-sm font-medium text-gray-700\">\r\n                IČO firmy v POHODA *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"pohoda_ico\"\r\n                name=\"pohoda_ico\"\r\n                value={formData.pohoda_ico}\r\n                onChange={handleInputChange}\r\n                placeholder=\"12345678\"\r\n                className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\r\n                required={formData.pohoda_enabled}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"pohoda_year\" className=\"block text-sm font-medium text-gray-700\">\r\n                Rok firmy v POHODA (IČO_ROK) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"pohoda_year\"\r\n                name=\"pohoda_year\"\r\n                value={formData.pohoda_year}\r\n                onChange={handleInputChange}\r\n                placeholder=\"2024\"\r\n                className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\r\n                required={formData.pohoda_enabled}\r\n              />\r\n              <p className=\"mt-1 text-sm text-gray-500\">\r\n                Ak máte viacero firiem s rovnakým IČO, zadajte rok (napr. 2024 pre IČO_2024)\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n                  {/* POHODA Nastavenia - mServer */}\r\n        <div className=\"mt-6 border-t pt-6\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n            POHODA Nastavenia - mServer\r\n          </h3>\r\n          \r\n          {!formData.pohoda_enabled && (\r\n            <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4 mb-4\">\r\n              <p className=\"text-sm text-gray-600\">\r\n                Pre použitie mServer integrácie najprv povolte POHODA integráciu vyššie.\r\n              </p>\r\n            </div>\r\n          )}\r\n            \r\n                          <div className=\"space-y-4\">\r\n                <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n                  <h4 className=\"text-md font-medium text-blue-800 mb-2\">Testovanie mServer spojenia</h4>\r\n                  <p className=\"text-sm text-blue-700 mb-3\">\r\n                    Testujte pripojenie k POHODA mServer pre automatickú synchronizáciu faktúr.\r\n                  </p>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <button type=\"button\" onClick={handleTestConnection} disabled={!formData.pohoda_enabled || !canTestConnection()} className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\">\r\n                      {isLoading ? (\r\n                        <>\r\n                          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                          Testujem...\r\n                        </>\r\n                      ) : (\r\n                        'Testovať spojenie'\r\n                      )}\r\n                    </button>\r\n                    <button type=\"button\" onClick={handleTestInvoices} disabled={!formData.pohoda_enabled || !canTestConnection()} className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed\">\r\n                      {isLoading ? (\r\n                        <>\r\n                          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                          Testujem faktúry...\r\n                        </>\r\n                      ) : (\r\n                        'Testovať faktúry'\r\n                      )}\r\n                    </button>\r\n                    <button type=\"button\" onClick={handleSyncInvoices} disabled={!formData.pohoda_enabled || !canTestConnection()} className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed\">\r\n                      {isLoading ? (\r\n                        <>\r\n                          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                          Synchronizujem...\r\n                        </>\r\n                      ) : (\r\n                        'Synchronizovať faktúry'\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n\r\n                  {testResult && (\r\n                    <div className={`flex items-center p-3 rounded-md mt-3 ${\r\n                      testResult.success \r\n                        ? 'bg-green-50 border border-green-200' \r\n                        : 'bg-red-50 border border-red-200'\r\n                    }`}>\r\n                      {testResult.success ? (\r\n                        <CheckIcon className=\"h-5 w-5 text-green-400 mr-2\" />\r\n                      ) : (\r\n                        <ExclamationTriangleIcon className=\"h-5 w-5 text-red-400 mr-2\" />\r\n                      )}\r\n                      <span className={`text-sm ${\r\n                        testResult.success ? 'text-green-800' : 'text-red-800'\r\n                      }`}>\r\n                        {testResult.message}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Synchronizácia */}\r\n                {formData.pohoda_enabled && (\r\n                  <div className=\"space-y-4\">\r\n                    <h4 className=\"text-md font-medium text-gray-700\">Automatická synchronizácia</h4>\r\n                    \r\n                    <div className=\"flex items-center\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"auto_sync\"\r\n                        name=\"auto_sync\"\r\n                        checked={formData.auto_sync}\r\n                        onChange={handleInputChange}\r\n                        className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                      />\r\n                      <label htmlFor=\"auto_sync\" className=\"ml-2 block text-sm text-gray-900\">\r\n                        Automatická synchronizácia\r\n                      </label>\r\n                    </div>\r\n\r\n                    {formData.auto_sync && (\r\n                      <div>\r\n                        <label htmlFor=\"sync_frequency\" className=\"block text-sm font-medium text-gray-700\">\r\n                          Frekvencia synchronizácie\r\n                        </label>\r\n                        <select\r\n                          id=\"sync_frequency\"\r\n                          name=\"sync_frequency\"\r\n                          value={formData.sync_frequency}\r\n                          onChange={handleInputChange}\r\n                          className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\r\n                        >\r\n                          <option value=\"hourly\">Každú hodinu</option>\r\n                          <option value=\"daily\">Denne</option>\r\n                          <option value=\"weekly\">Týždenne</option>\r\n                          <option value=\"manual\">Manuálne</option>\r\n                        </select>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n        {/* POHODA Nastavenia - XML */}\r\n        <div className=\"mt-6 border-t pt-6\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n            POHODA Nastavenia - XML\r\n          </h3>\r\n          \r\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4\">\r\n            <h4 className=\"text-md font-medium text-yellow-800 mb-2\">XML Import/Export</h4>\r\n            <p className=\"text-sm text-yellow-700\">\r\n              Manuálny import/export faktúr cez XML súbory. Funguje s demo aj plnou verziou POHODA.\r\n            </p>\r\n          </div>\r\n          \r\n          <PohodaXmlImportExport companyId={companyId} />\r\n        </div>\r\n\r\n          {/* Tlačidlá */}\r\n          <div className=\"flex justify-end space-x-3 pt-6 border-t\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n            >\r\n              Zrušiť\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\r\n            >\r\n              {isLoading ? 'Ukladám...' : 'Uložiť nastavenia'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PohodaSettingsModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { \r\n  ArrowLeftIcon,\r\n  CogIcon,\r\n  ComputerDesktopIcon,\r\n  UserGroupIcon,\r\n  KeyIcon,\r\n  CloudArrowUpIcon,\r\n  CheckCircleIcon,\r\n  XCircleIcon,\r\n  ExclamationTriangleIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { accountingService, AccountingSettings, AccountingPermissions } from '../services/accountingService';\r\nimport { apiService } from '../services/apiService';\r\nimport PohodaSettingsModal from '../components/PohodaSettingsModal';\r\n\r\ninterface AdminSettingsPageProps {\r\n  onBack: () => void;\r\n}\r\n\r\nconst AdminSettingsPage: React.FC<AdminSettingsPageProps> = ({ onBack }) => {\r\n  const [companies, setCompanies] = useState<any[]>([]);\r\n  const [selectedCompany, setSelectedCompany] = useState<number | null>(null);\r\n  const [settings, setSettings] = useState<AccountingSettings | null>(null);\r\n  const [permissions, setPermissions] = useState<AccountingPermissions[]>([]);\r\n  const [showPohodaModal, setShowPohodaModal] = useState(false);\r\n  const [showPermissionsModal, setShowPermissionsModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadCompanies();\r\n  }, []);\r\n\r\n  const loadCompanies = async () => {\r\n    try {\r\n      const companiesData = await apiService.getAllCompanies();\r\n      setCompanies(companiesData);\r\n      if (companiesData.length > 0) {\r\n        setSelectedCompany(companiesData[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Chyba pri načítaní firiem:', error);\r\n    }\r\n  };\r\n\r\n  const loadCompanyData = async (companyId: number) => {\r\n    try {\r\n      const [settingsData, permissionsData] = await Promise.all([\r\n        accountingService.getSettings(companyId),\r\n        accountingService.getAllPermissions(companyId)\r\n      ]);\r\n      setSettings(settingsData);\r\n      setPermissions(permissionsData);\r\n    } catch (error) {\r\n      console.error('Chyba pri načítaní dát firmy:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany) {\r\n      loadCompanyData(selectedCompany);\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  const formatDate = (date: string) => {\r\n    return accountingService.formatDate(date);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between h-16\">\r\n            <div className=\"flex items-center\">\r\n              <button\r\n                onClick={onBack}\r\n                className=\"mr-4 p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100\"\r\n              >\r\n                <ArrowLeftIcon className=\"h-6 w-6\" />\r\n              </button>\r\n              <h1 className=\"text-xl font-semibold text-gray-900\">POHODA mServer Nastavenia</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        {/* Výber firmy */}\r\n        <div className=\"mb-6\">\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Vyberte firmu\r\n          </label>\r\n          <select\r\n            value={selectedCompany || ''}\r\n            onChange={(e) => setSelectedCompany(Number(e.target.value))}\r\n            className=\"block w-full max-w-xs rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          >\r\n            {companies.map((company) => (\r\n              <option key={company.id} value={company.id}>\r\n                {company.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {selectedCompany && (\r\n          <div className=\"grid grid-cols-1 gap-6\">\r\n            {/* POHODA mServer Nastavenia */}\r\n            <div className=\"bg-white rounded-lg shadow-md\">\r\n              <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <h2 className=\"text-lg font-semibold text-gray-900 flex items-center\">\r\n                    <ComputerDesktopIcon className=\"h-5 w-5 mr-2 text-indigo-600\" />\r\n                    POHODA mServer Nastavenia\r\n                  </h2>\r\n                  <button\r\n                    onClick={() => setShowPohodaModal(true)}\r\n                    className=\"inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                  >\r\n                    Upraviť\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"p-6\">\r\n                {settings ? (\r\n                  <div className=\"space-y-4\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-sm font-medium text-gray-700\">Stav integrácie</span>\r\n                      <div className=\"flex items-center\">\r\n                        {settings.pohoda_enabled ? (\r\n                          <CheckCircleIcon className=\"h-5 w-5 text-green-500 mr-2\" />\r\n                        ) : (\r\n                          <XCircleIcon className=\"h-5 w-5 text-red-500 mr-2\" />\r\n                        )}\r\n                        <span className={`text-sm ${settings.pohoda_enabled ? 'text-green-600' : 'text-red-600'}`}>\r\n                          {settings.pohoda_enabled ? 'Aktívna' : 'Neaktívna'}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {settings.pohoda_enabled && (\r\n                      <>\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <span className=\"text-sm font-medium text-gray-700\">IČO firmy v POHODA</span>\r\n                          <span className=\"text-sm text-gray-900\">\r\n                            {settings.pohoda_ico || '-'}\r\n                          </span>\r\n                        </div>\r\n                        \r\n                        <div className=\"flex items-center justify-between\">\r\n                          <span className=\"text-sm font-medium text-gray-700\">Rok firmy v POHODA</span>\r\n                          <span className=\"text-sm text-gray-900\">\r\n                            {settings.pohoda_year || '-'}\r\n                          </span>\r\n                        </div>\r\n                        \r\n                        <div className=\"flex items-center justify-between\">\r\n                          <span className=\"text-sm font-medium text-gray-700\">Automatická synchronizácia</span>\r\n                          <span className=\"text-sm text-gray-900\">\r\n                            {settings.auto_sync ? 'Zapnutá' : 'Vypnutá'}\r\n                          </span>\r\n                        </div>\r\n                        \r\n                        <div className=\"flex items-center justify-between\">\r\n                          <span className=\"text-sm font-medium text-gray-700\">Frekvencia synchronizácie</span>\r\n                          <span className=\"text-sm text-gray-900\">\r\n                            {settings.sync_frequency === 'hourly' && 'Každú hodinu'}\r\n                            {settings.sync_frequency === 'daily' && 'Denne'}\r\n                            {settings.sync_frequency === 'weekly' && 'Týždenne'}\r\n                            {settings.sync_frequency === 'manual' && 'Manuálne'}\r\n                          </span>\r\n                        </div>\r\n                        \r\n                        {settings.last_sync && (\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <span className=\"text-sm font-medium text-gray-700\">Posledná synchronizácia</span>\r\n                            <span className=\"text-sm text-gray-900\">\r\n                              {formatDate(settings.last_sync)}\r\n                            </span>\r\n                          </div>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"text-gray-500 text-center py-4\">\r\n                    Žiadne nastavenia POHODA\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Práva pre účtovníctvo */}\r\n            <div className=\"bg-white rounded-lg shadow-md\">\r\n              <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <h2 className=\"text-lg font-semibold text-gray-900 flex items-center\">\r\n                    <UserGroupIcon className=\"h-5 w-5 mr-2 text-blue-600\" />\r\n                    Práva pre účtovníctvo\r\n                  </h2>\r\n                  <button\r\n                    onClick={() => setShowPermissionsModal(true)}\r\n                    className=\"inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                  >\r\n                    Pridať práva\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"p-6\">\r\n                {permissions.length > 0 ? (\r\n                  <div className=\"space-y-3\">\r\n                    {permissions.map((perm) => (\r\n                      <div key={perm.id} className=\"border rounded-md p-3\">\r\n                        <div className=\"flex items-center justify-between mb-2\">\r\n                          <span className=\"text-sm font-medium text-gray-900\">\r\n                            {perm.user_email}\r\n                          </span>\r\n                          <span className=\"text-xs text-gray-500\">\r\n                            {perm.granted_at ? formatDate(perm.granted_at) : '-'}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"flex flex-wrap gap-1\">\r\n                          {perm.can_view_invoices && (\r\n                            <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\r\n                              Zobraziť faktúry\r\n                            </span>\r\n                          )}\r\n                          {perm.can_create_invoices && (\r\n                            <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n                              Vytvoriť faktúry\r\n                            </span>\r\n                          )}\r\n                          {perm.can_edit_invoices && (\r\n                            <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\r\n                              Upraviť faktúry\r\n                            </span>\r\n                          )}\r\n                          {perm.can_view_bank && (\r\n                            <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\r\n                              Zobraziť banku\r\n                            </span>\r\n                          )}\r\n                          {perm.can_edit_bank && (\r\n                            <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800\">\r\n                              Upraviť banku\r\n                            </span>\r\n                          )}\r\n                          {perm.can_view_cash && (\r\n                            <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-pink-100 text-pink-800\">\r\n                              Zobraziť pokladňu\r\n                            </span>\r\n                          )}\r\n                          {perm.can_edit_cash && (\r\n                            <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800\">\r\n                              Upraviť pokladňu\r\n                            </span>\r\n                          )}\r\n                          {perm.can_manage_settings && (\r\n                            <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\r\n                              Spravovať nastavenia\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"text-gray-500 text-center py-4\">\r\n                    Žiadne práva pre účtovníctvo\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Modals */}\r\n        {showPohodaModal && settings && (\r\n          <PohodaSettingsModal\r\n            isOpen={showPohodaModal}\r\n            onClose={() => setShowPohodaModal(false)}\r\n            companyId={selectedCompany!}\r\n            settings={settings}\r\n            onSave={async (newSettings) => {\r\n              try {\r\n                await accountingService.saveSettings(selectedCompany!, newSettings);\r\n                await loadCompanyData(selectedCompany!);\r\n                setShowPohodaModal(false);\r\n              } catch (error) {\r\n                console.error('Chyba pri ukladaní POHODA nastavení:', error);\r\n              }\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {/* TODO: Modal pre práva */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSettingsPage;\r\n","import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 12.75 6 6 9-13.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction UserGroupIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M18 18.72a9.094 9.094 0 0 0 3.741-.479 3 3 0 0 0-4.682-2.72m.94 3.198.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0 1 12 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 0 1 6 18.719m12 0a5.971 5.971 0 0 0-.941-3.197m0 0A5.995 5.995 0 0 0 12 12.75a5.995 5.995 0 0 0-5.058 2.772m0 0a3 3 0 0 0-4.681 2.72 8.986 8.986 0 0 0 3.74.477m.94-3.197a5.971 5.971 0 0 0-.94 3.197M15 6.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm6 3a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Zm-13.5 0a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(UserGroupIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction XCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(XCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowLeftIcon);\nexport default ForwardRef;"],"names":["accountingService","getSettings","companyId","apiService","get","concat","saveSettings","settings","post","getPermissions","userEmail","savePermissions","permissions","getAllPermissions","getIssuedInvoices","filters","params","URLSearchParams","Object","entries","forEach","_ref","key","value","undefined","append","toString","createIssuedInvoice","invoice","getIssuedInvoiceById","invoiceId","getReceivedInvoices","_ref2","getReceivedInvoiceById","getPudSummary","getFinancialAnalysis","dateFrom","dateTo","url","getStats","_ref3","formatCurrency","amount","currency","arguments","length","Intl","NumberFormat","style","format","formatDate","date","Date","toLocaleDateString","getStatusBadge","status","draft","text","color","sent","paid","overdue","cancelled","received","approved","disputed","getTypeBadge","type","income","expense","testPohodaConnection","_objectSpread","testPohodaInvoices","syncPohodaInvoices","uploadPohodaXml","file","formData","FormData","response","fetch","method","headers","localStorage","getItem","body","ok","Error","json","exportPohodaXml","blob","refreshInvoicesFromMdb","refreshReceivedInvoicesFromMdb","importInvoicesFromMdb","deleteIssuedInvoice","delete","deleteReceivedInvoice","deleteBankTransaction","transactionId","deleteCashTransaction","getDirectory","getVatReturns","year","yearParam","getFullYear","getBankAccounts","console","log","data","getCashAccounts","getBankTransactions","accountNumber","getCashTransactions","ComputerDesktopIcon","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","CheckCircleIcon","_uploadResult$details","selectedFile","setSelectedFile","useState","isUploading","setIsUploading","isExporting","setIsExporting","uploadResult","setUploadResult","setDateFrom","setDateTo","_jsxs","className","children","_jsx","htmlFor","accept","onChange","event","_event$target$files","target","files","alert","name","size","toFixed","onClick","async","result","success","message","details","fileInput","document","getElementById","error","disabled","_Fragment","imported","errors","map","index","e","window","URL","createObjectURL","a","createElement","href","download","toISOString","split","appendChild","click","revokeObjectURL","removeChild","isOpen","onClose","onSave","setFormData","pohoda_enabled","pohoda_url","pohoda_username","pohoda_password","pohoda_ico","pohoda_year","auto_sync","sync_frequency","isLoading","setIsLoading","testResult","setTestResult","useEffect","handleInputChange","checked","prev","canTestConnection","XMarkIcon","onSubmit","preventDefault","placeholder","required","JSON","stringify","CheckIcon","ExclamationTriangleIcon","PohodaXmlImportExport","onBack","companies","setCompanies","selectedCompany","setSelectedCompany","setSettings","setPermissions","showPohodaModal","setShowPohodaModal","showPermissionsModal","setShowPermissionsModal","loadCompanies","companiesData","getAllCompanies","loadCompanyData","settingsData","permissionsData","Promise","all","ArrowLeftIcon","Number","company","XCircleIcon","last_sync","UserGroupIcon","perm","user_email","granted_at","can_view_invoices","can_create_invoices","can_edit_invoices","can_view_bank","can_edit_bank","can_view_cash","can_edit_cash","can_manage_settings","PohodaSettingsModal","newSettings"],"sourceRoot":""}