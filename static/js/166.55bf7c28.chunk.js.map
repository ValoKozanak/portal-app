{"version":3,"file":"static/js/166.55bf7c28.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/MagnifyingGlassIcon.js","../node_modules/@heroicons/react/24/outline/esm/PlusIcon.js","../node_modules/@heroicons/react/24/outline/esm/CheckIcon.js","../node_modules/@heroicons/react/24/outline/esm/FolderIcon.js","../node_modules/@heroicons/react/24/outline/esm/PencilIcon.js","../node_modules/@heroicons/react/24/outline/esm/TrashIcon.js","../node_modules/@heroicons/react/24/outline/esm/LinkIcon.js","../node_modules/@heroicons/react/24/outline/esm/ArrowLeftIcon.js","../node_modules/@heroicons/react/24/outline/esm/EyeIcon.js","services/dropboxService.ts","components/DropboxAdminPanel.tsx","pages/AdminDropboxPage.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction MagnifyingGlassIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(MagnifyingGlassIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PlusIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 4.5v15m7.5-7.5h-15\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PlusIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 12.75 6 6 9-13.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction FolderIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 12.75V12A2.25 2.25 0 0 1 4.5 9.75h15A2.25 2.25 0 0 1 21.75 12v.75m-8.69-6.44-2.12-2.12a1.5 1.5 0 0 0-1.061-.44H4.5A2.25 2.25 0 0 0 2.25 6v12a2.25 2.25 0 0 0 2.25 2.25h15A2.25 2.25 0 0 0 21.75 18V9a2.25 2.25 0 0 0-2.25-2.25h-5.379a1.5 1.5 0 0 1-1.06-.44Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(FolderIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PencilIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PencilIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(TrashIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction LinkIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M13.19 8.688a4.5 4.5 0 0 1 1.242 7.244l-4.5 4.5a4.5 4.5 0 0 1-6.364-6.364l1.757-1.757m13.35-.622 1.757-1.757a4.5 4.5 0 0 0-6.364-6.364l-4.5 4.5a4.5 4.5 0 0 0 1.242 7.244\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(LinkIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowLeftIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction EyeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(EyeIcon);\nexport default ForwardRef;","import { Dropbox } from 'dropbox';\r\n\r\n// Dropbox konfigurácia\r\nconst DROPBOX_APP_KEY = process.env.REACT_APP_DROPBOX_APP_KEY || '';\r\nconst DROPBOX_APP_SECRET = process.env.REACT_APP_DROPBOX_APP_SECRET || '';\r\nconst DROPBOX_REDIRECT_URI = process.env.REACT_APP_DROPBOX_REDIRECT_URI || 'http://localhost:3000/dropbox-callback';\r\n\r\nexport interface DropboxFile {\r\n  id: string;\r\n  name: string;\r\n  path_lower: string;\r\n  size: number;\r\n  server_modified: string;\r\n  content_hash: string;\r\n  tag: string;\r\n}\r\n\r\nexport interface DropboxUploadResult {\r\n  id: string;\r\n  name: string;\r\n  path_lower: string;\r\n  size: number;\r\n  server_modified: string;\r\n}\r\n\r\nexport interface DropboxAuthResult {\r\n  access_token: string;\r\n  token_type: string;\r\n  expires_in: number;\r\n  refresh_token?: string;\r\n  scope: string;\r\n  uid: string;\r\n  account_id: string;\r\n}\r\n\r\nclass DropboxService {\r\n  private dbx: Dropbox | null = null;\r\n  private accessToken: string | null = null;\r\n\r\n  constructor() {\r\n    console.log('DropboxService: Inicializujem...');\r\n    console.log('DropboxService: Environment premenné:', {\r\n      appKey: DROPBOX_APP_KEY,\r\n      appSecret: DROPBOX_APP_SECRET ? '***' : 'CHÝBA',\r\n      appSecretLength: DROPBOX_APP_SECRET ? DROPBOX_APP_SECRET.length : 0,\r\n      redirectUri: DROPBOX_REDIRECT_URI\r\n    });\r\n    \r\n    this.accessToken = localStorage.getItem('dropbox_access_token');\r\n    console.log('DropboxService: Token z localStorage:', this.accessToken ? 'existuje' : 'neexistuje');\r\n    \r\n    if (this.accessToken) {\r\n      this.initializeDropbox(this.accessToken);\r\n      console.log('DropboxService: Dropbox klient inicializovaný');\r\n    } else {\r\n      console.log('DropboxService: Žiadny token, Dropbox klient nie je inicializovaný');\r\n    }\r\n  }\r\n\r\n  // Inicializácia Dropbox klienta\r\n  private initializeDropbox(accessToken: string) {\r\n    this.dbx = new Dropbox({\r\n      accessToken: accessToken,\r\n      fetch: window.fetch.bind(window)\r\n    });\r\n  }\r\n\r\n  // Generovanie OAuth URL pre autentifikáciu\r\n  getAuthUrl(): string {\r\n    // Vyčistíme starý state pred vytvorením nového\r\n    localStorage.removeItem('dropbox_auth_state');\r\n    \r\n    const state = Math.random().toString(36).substring(7);\r\n    localStorage.setItem('dropbox_auth_state', state);\r\n    \r\n    console.log('DropboxService.getAuthUrl - konfigurácia:', {\r\n      appKey: DROPBOX_APP_KEY,\r\n      redirectUri: DROPBOX_REDIRECT_URI,\r\n      state: state,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n    \r\n    const authUrl = `https://www.dropbox.com/oauth2/authorize?client_id=${DROPBOX_APP_KEY}&response_type=code&redirect_uri=${encodeURIComponent(DROPBOX_REDIRECT_URI)}&state=${state}&token_access_type=offline`;\r\n    \r\n    console.log('DropboxService.getAuthUrl - vygenerovaný URL:', authUrl);\r\n    \r\n    return authUrl;\r\n  }\r\n\r\n  // Spracovanie OAuth callback\r\n  async handleAuthCallback(code: string, state: string): Promise<DropboxAuthResult> {\r\n    console.log('dropboxService.handleAuthCallback - začiatok');\r\n    console.log('Parametre:', { code: code.substring(0, 10) + '...', state });\r\n    \r\n    const savedState = localStorage.getItem('dropbox_auth_state');\r\n    console.log('Uložený state:', savedState);\r\n    console.log('State porovnanie:', { received: state, saved: savedState, match: state === savedState });\r\n    \r\n    if (state !== savedState) {\r\n      console.error('State nezhoduje:', { received: state, saved: savedState });\r\n      console.error('Všetky localStorage položky:', {\r\n        dropbox_auth_state: localStorage.getItem('dropbox_auth_state'),\r\n        dropbox_access_token: localStorage.getItem('dropbox_access_token'),\r\n        dropbox_refresh_token: localStorage.getItem('dropbox_refresh_token')\r\n      });\r\n      throw new Error('Invalid state parameter');\r\n    }\r\n    \r\n    // State kontrola úspešná, pokračujem v spracovaní...\r\n    console.log('State kontrola úspešná, pokračujem v spracovaní...');\r\n\r\n    try {\r\n      console.log('Posielam požiadavku na Dropbox API...');\r\n      console.log('DropboxService.handleAuthCallback - parametre pre API:', {\r\n        code: code.substring(0, 10) + '...',\r\n        client_id: DROPBOX_APP_KEY,\r\n        client_secret: DROPBOX_APP_SECRET ? '***' : 'CHÝBA',\r\n        redirect_uri: DROPBOX_REDIRECT_URI\r\n      });\r\n      \r\n      const requestBody = new URLSearchParams({\r\n        code: code,\r\n        grant_type: 'authorization_code',\r\n        client_id: DROPBOX_APP_KEY,\r\n        client_secret: DROPBOX_APP_SECRET,\r\n        redirect_uri: DROPBOX_REDIRECT_URI,\r\n      });\r\n      \r\n      console.log('DropboxService.handleAuthCallback - request body:', requestBody.toString());\r\n      \r\n      const response = await window.fetch('https://api.dropboxapi.com/oauth2/token', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: requestBody,\r\n      });\r\n\r\n      console.log('Dropbox API response status:', response.status);\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('Dropbox API error:', errorText);\r\n        console.error('Dropbox API response headers:', Object.fromEntries(response.headers.entries()));\r\n        throw new Error(`Failed to exchange code for token: ${errorText}`);\r\n      }\r\n\r\n      const authResult: DropboxAuthResult = await response.json();\r\n      console.log('Dropbox API úspešná odpoveď:', { \r\n        access_token: authResult.access_token.substring(0, 10) + '...',\r\n        token_type: authResult.token_type,\r\n        expires_in: authResult.expires_in\r\n      });\r\n      \r\n      // Uloženie tokenu\r\n      this.accessToken = authResult.access_token;\r\n      localStorage.setItem('dropbox_access_token', authResult.access_token);\r\n      if (authResult.refresh_token) {\r\n        localStorage.setItem('dropbox_refresh_token', authResult.refresh_token);\r\n      }\r\n      \r\n      // Vyčistíme state po úspešnom spracovaní\r\n      localStorage.removeItem('dropbox_auth_state');\r\n      console.log('State vyčistený po úspešnom spracovaní');\r\n\r\n      console.log('Tokeny uložené do localStorage');\r\n\r\n      // Inicializácia Dropbox klienta\r\n      this.initializeDropbox(authResult.access_token);\r\n      console.log('Dropbox klient inicializovaný');\r\n\r\n      return authResult;\r\n    } catch (error) {\r\n      console.error('Error during OAuth callback:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Kontrola, či je používateľ prihlásený\r\n  isAuthenticated(): boolean {\r\n    // Skontrolujeme token z localStorage\r\n    const tokenFromStorage = localStorage.getItem('dropbox_access_token');\r\n    \r\n    // Ak máme token v localStorage ale nie v pamäti, inicializujeme klienta\r\n    if (tokenFromStorage && !this.accessToken) {\r\n      this.accessToken = tokenFromStorage;\r\n      this.initializeDropbox(tokenFromStorage);\r\n      console.log('DropboxService.isAuthenticated: Reinicializoval klienta z localStorage');\r\n    }\r\n    \r\n    const authenticated = this.dbx !== null && this.accessToken !== null;\r\n    console.log('DropboxService.isAuthenticated:', { \r\n      dbx: this.dbx !== null, \r\n      accessToken: this.accessToken !== null,\r\n      tokenFromStorage: tokenFromStorage ? 'existuje' : 'neexistuje',\r\n      result: authenticated \r\n    });\r\n    return authenticated;\r\n  }\r\n\r\n  // Odhlásenie\r\n  logout(): void {\r\n    this.dbx = null;\r\n    this.accessToken = null;\r\n    localStorage.removeItem('dropbox_access_token');\r\n    localStorage.removeItem('dropbox_refresh_token');\r\n    localStorage.removeItem('dropbox_auth_state');\r\n  }\r\n\r\n  // Získanie informácií o účte\r\n  async getAccountInfo() {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      console.log('DropboxService.getAccountInfo - volám Dropbox API...');\r\n      // Pridáme kontrolu, či je dbx správne inicializovaný\r\n      if (!this.dbx.usersGetCurrentAccount) {\r\n        throw new Error('Dropbox client not properly initialized');\r\n      }\r\n      \r\n      // Pridáme kontrolu, či je fetch správne nastavený\r\n      if (!this.dbx.usersGetCurrentAccount) {\r\n        console.error('Dropbox client methods not available');\r\n        throw new Error('Dropbox client methods not available');\r\n      }\r\n      \r\n      const response = await this.dbx.usersGetCurrentAccount();\r\n      console.log('DropboxService.getAccountInfo - odpoveď:', response);\r\n      return response.result;\r\n    } catch (error) {\r\n      console.error('Error getting account info:', error);\r\n      // Ak je problém s fetch, skúsime reinicializovať klienta\r\n      if (error instanceof Error && (error.message.includes('fetch') || error.message.includes('Illegal invocation'))) {\r\n        console.log('DropboxService.getAccountInfo - problém s fetch, reinicializujem klienta...');\r\n        const token = localStorage.getItem('dropbox_access_token');\r\n        if (token) {\r\n          this.initializeDropbox(token);\r\n          const response = await this.dbx!.usersGetCurrentAccount();\r\n          console.log('DropboxService.getAccountInfo - reinicializácia úspešná:', response);\r\n          return response.result;\r\n        }\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Získanie zoznamu súborov z priečinka\r\n  async listFiles(path: string = '', ico?: string): Promise<DropboxFile[]> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      console.log('=== DROPBOX SERVICE DEBUG ===');\r\n      console.log('DropboxService.listFiles - začiatok');\r\n      console.log('DropboxService.listFiles - path:', path);\r\n      console.log('DropboxService.listFiles - ico:', ico);\r\n      console.log('DropboxService.listFiles - this.dbx exists:', !!this.dbx);\r\n      \r\n      // Ak je zadaný ico, použijeme špecifickú cestu pre firmu\r\n      let targetPath = path;\r\n      if (ico && !path.startsWith('/Portal/Companies/')) {\r\n        // Vytvoríme cestu pre firmu na základe ico\r\n        const companyFolder = this.getCompanyFolderPath(ico);\r\n        targetPath = companyFolder + (path ? '/' + path : '');\r\n        console.log('DropboxService.listFiles - companyFolder:', companyFolder);\r\n      }\r\n      \r\n      console.log('DropboxService.listFiles - targetPath:', targetPath);\r\n      console.log('DropboxService.listFiles - volám this.dbx.filesListFolder...');\r\n\r\n      const response = await this.dbx.filesListFolder({\r\n        path: targetPath,\r\n        limit: 100\r\n      });\r\n\r\n      console.log('DropboxService.listFiles - response received');\r\n      const mappedFiles = response.result.entries.map(entry => ({\r\n        id: entry['.tag'] === 'deleted' ? '' : (entry as any).id || '',\r\n        name: entry.name,\r\n        path_lower: entry.path_lower || '',\r\n        size: entry['.tag'] === 'file' ? (entry as any).size || 0 : 0,\r\n        server_modified: entry['.tag'] === 'file' ? (entry as any).server_modified || '' : '',\r\n        content_hash: entry['.tag'] === 'file' ? (entry as any).content_hash || '' : '',\r\n        tag: entry['.tag']\r\n      }));\r\n      \r\n      return mappedFiles;\r\n    } catch (error) {\r\n      console.error('DropboxService.listFiles - ERROR:', error);\r\n      if (error instanceof Error) {\r\n        console.error('DropboxService.listFiles - error.message:', error.message);\r\n        console.error('DropboxService.listFiles - error.stack:', error.stack);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Generovanie cesty pre firmu na základe IČO\r\n  getCompanyFolderPath(ico: string): string {\r\n    const icoHash = this.hashICO(ico);\r\n    return `/Portal/Companies/${icoHash}`;\r\n  }\r\n\r\n  // Jednoduchý hash IČO pre vytvorenie unikátnej cesty\r\n  hashICO(ico: string): string {\r\n    // IČO je už unikátne, takže ho môžeme použiť priamo\r\n    // Len odstránime medzery a špeciálne znaky pre bezpečnosť\r\n    return ico.replace(/\\s/g, '').replace(/[^a-zA-Z0-9]/g, '');\r\n  }\r\n\r\n  // Vytvorenie zdieľateľnej zložky pre firmu\r\n  async createCompanyFolder(ico: string): Promise<string> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      const companyPath = this.getCompanyFolderPath(ico);\r\n      \r\n      // Vytvorenie priečinka\r\n      const response = await this.dbx.filesCreateFolderV2({\r\n        path: companyPath,\r\n        autorename: false\r\n      });\r\n      \r\n      return companyPath;\r\n    } catch (error) {\r\n      console.error('Error creating company folder:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Získanie zdieľateľného linku pre firmu\r\n  async getCompanySharedLink(ico: string): Promise<string> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      const companyPath = this.getCompanyFolderPath(ico);\r\n      return await this.getSharedLink(companyPath);\r\n    } catch (error) {\r\n      console.error('Error getting company shared link:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Nahrávanie súboru do Dropbox\r\n  async uploadFile(file: File, path: string, ico?: string, onProgress?: (progress: number) => void): Promise<DropboxUploadResult> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      const fileBuffer = await file.arrayBuffer();\r\n      \r\n      // Ak je zadaný IČO, použijeme špecifickú cestu pre firmu\r\n      let fullPath = path + '/' + file.name;\r\n      if (ico && !path.startsWith('/Portal/Companies/')) {\r\n        const companyFolder = this.getCompanyFolderPath(ico);\r\n        fullPath = companyFolder + '/' + (path ? path + '/' : '') + file.name;\r\n        console.log('DropboxService.uploadFile - companyFolder:', companyFolder);\r\n      }\r\n      \r\n      console.log('DropboxService.uploadFile - fullPath:', fullPath);\r\n\r\n      const response = await this.dbx.filesUpload({\r\n        path: fullPath,\r\n        contents: fileBuffer,\r\n        mode: { '.tag': 'overwrite' },\r\n        autorename: true,\r\n        mute: false\r\n      });\r\n\r\n      console.log('DropboxService.uploadFile - upload response:', response);\r\n\r\n      return {\r\n        id: response.result.id,\r\n        name: response.result.name,\r\n        path_lower: response.result.path_lower || '',\r\n        size: response.result.size,\r\n        server_modified: response.result.server_modified\r\n      };\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Stiahnutie súboru z Dropbox\r\n  async downloadFile(path: string): Promise<Blob> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      const response = await this.dbx.filesDownload({\r\n        path: path\r\n      });\r\n\r\n      // Konverzia ArrayBuffer na Blob\r\n      const fileBlob = (response.result as any).fileBlob;\r\n      const blob = new Blob([fileBlob], {\r\n        type: fileBlob.type || 'application/octet-stream'\r\n      });\r\n\r\n      return blob;\r\n    } catch (error) {\r\n      console.error('Error downloading file:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Vymazanie súboru z Dropbox\r\n  async deleteFile(path: string): Promise<void> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      await this.dbx.filesDeleteV2({\r\n        path: path\r\n      });\r\n    } catch (error) {\r\n      console.error('Error deleting file:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Vytvorenie priečinka\r\n  async createFolder(path: string): Promise<void> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      await this.dbx.filesCreateFolderV2({\r\n        path: path,\r\n        autorename: true\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating folder:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Získanie zdieľateľného linku\r\n  async getSharedLink(path: string): Promise<string> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      const response = await this.dbx.sharingCreateSharedLinkWithSettings({\r\n        path: path,\r\n        settings: {\r\n          requested_visibility: { '.tag': 'public' },\r\n          audience: { '.tag': 'public' },\r\n          access: { '.tag': 'viewer' }\r\n        }\r\n      });\r\n\r\n      return response.result.url;\r\n    } catch (error) {\r\n      console.error('Error creating shared link:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Obnovenie access tokenu\r\n  async refreshAccessToken(): Promise<string> {\r\n    const refreshToken = localStorage.getItem('dropbox_refresh_token');\r\n    if (!refreshToken) {\r\n      throw new Error('No refresh token available');\r\n    }\r\n\r\n    try {\r\n      const response = await window.fetch('https://api.dropboxapi.com/oauth2/token', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          grant_type: 'refresh_token',\r\n          refresh_token: refreshToken,\r\n          client_id: DROPBOX_APP_KEY,\r\n          client_secret: DROPBOX_APP_SECRET,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to refresh token');\r\n      }\r\n\r\n      const result = await response.json();\r\n      this.accessToken = result.access_token;\r\n      localStorage.setItem('dropbox_access_token', result.access_token);\r\n\r\n      // Inicializácia Dropbox klienta s novým tokenom\r\n      this.initializeDropbox(result.access_token);\r\n\r\n      return result.access_token;\r\n    } catch (error) {\r\n      console.error('Error refreshing token:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ===== ADMIN FUNKCIE =====\r\n\r\n  // Vytvorenie zdieľateľného linku s oprávneniami (pre admin)\r\n  async createSharedLink(folderPath: string, permissions: {\r\n    canView: boolean;\r\n    canEdit: boolean;\r\n    canUpload: boolean;\r\n    canDelete: boolean;\r\n  }): Promise<string> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      console.log('DropboxService.createSharedLink - vytváram link pre:', folderPath);\r\n      console.log('DropboxService.createSharedLink - oprávnenia:', permissions);\r\n      \r\n      // Určenie prístupu na základe oprávnení\r\n      let access: { '.tag': 'viewer' } | { '.tag': 'editor' } = { '.tag': 'viewer' };\r\n      if (permissions.canEdit || permissions.canUpload || permissions.canDelete) {\r\n        access = { '.tag': 'editor' };\r\n      }\r\n      \r\n      console.log('DropboxService.createSharedLink - access level:', access);\r\n\r\n      const response = await this.dbx.sharingCreateSharedLinkWithSettings({\r\n        path: folderPath,\r\n        settings: {\r\n          requested_visibility: { '.tag': 'public' },\r\n          audience: { '.tag': 'public' },\r\n          access: access\r\n        }\r\n      });\r\n\r\n      console.log('DropboxService.createSharedLink - úspešne vytvorený link:', response.result.url);\r\n      return response.result.url;\r\n    } catch (error) {\r\n      console.error('Error creating shared link with permissions:', error);\r\n      \r\n             // Ak je chyba 409 (Conflict) alebo \"shared_link_already_exists\", skúsime získať existujúci link\r\n       if (error instanceof Error && (error.message.includes('shared_link_already_exists') || error.message.includes('409'))) {\r\n         console.log('Link už existuje (409), získavam existujúci link...');\r\n         try {\r\n           const existingLinks = await this.dbx.sharingListSharedLinks({\r\n             path: folderPath,\r\n             direct_only: false\r\n           });\r\n           \r\n           if (existingLinks.result.links.length > 0) {\r\n             console.log('Našiel som existujúci link:', existingLinks.result.links[0].url);\r\n             return existingLinks.result.links[0].url;\r\n           }\r\n         } catch (listError) {\r\n           console.error('Chyba pri získavaní existujúceho linku:', listError);\r\n         }\r\n       }\r\n      \r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Odvolanie zdieľateľného linku\r\n  async revokeSharedLink(shareLink: string): Promise<void> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      console.log('DropboxService.revokeSharedLink - odvolávam link:', shareLink);\r\n      \r\n      await this.dbx.sharingRevokeSharedLink({\r\n        url: shareLink\r\n      });\r\n      \r\n      console.log('DropboxService.revokeSharedLink - link úspešne odvolaný');\r\n    } catch (error) {\r\n      console.error('Error revoking shared link:', error);\r\n      \r\n      // Ak link už neexistuje, považujeme to za úspech\r\n      if (error instanceof Error && error.message.includes('not_found')) {\r\n        console.log('Link už neexistuje, považujem za úspešne odvolaný');\r\n        return;\r\n      }\r\n      \r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Získanie všetkých zdieľateľných linkov\r\n  async getAllSharedLinks(): Promise<any[]> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      console.log('DropboxService.getAllSharedLinks - získavam všetky zdieľateľné linky...');\r\n      \r\n      const response = await this.dbx.sharingListSharedLinks({\r\n        path: '/Portal/Companies',\r\n        direct_only: false\r\n      });\r\n\r\n      console.log('DropboxService.getAllSharedLinks - načítané linky:', response.result.links);\r\n      return response.result.links;\r\n    } catch (error) {\r\n      console.error('Error getting shared links:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Kontrola, či zložka existuje\r\n  async checkFolderExists(folderPath: string): Promise<boolean> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      console.log('DropboxService.checkFolderExists - kontrolujem zložku:', folderPath);\r\n      \r\n      const response = await this.dbx.filesGetMetadata({\r\n        path: folderPath\r\n      });\r\n      \r\n      console.log('DropboxService.checkFolderExists - zložka existuje:', response);\r\n      return response.result['.tag'] === 'folder';\r\n    } catch (error) {\r\n      console.log('DropboxService.checkFolderExists - zložka neexistuje:', error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const dropboxService = new DropboxService();\r\nexport default dropboxService;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  CloudIcon,\r\n  UserIcon,\r\n  EyeIcon,\r\n  EyeSlashIcon,\r\n  PencilIcon,\r\n  TrashIcon,\r\n  PlusIcon,\r\n  CheckIcon,\r\n  XMarkIcon,\r\n  LinkIcon,\r\n  FolderIcon,\r\n  DocumentIcon,\r\n  PhotoIcon,\r\n  BuildingOfficeIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { dropboxService } from '../services/dropboxService';\r\nimport { Company } from '../services/apiService';\r\n\r\ninterface DropboxAdminPanelProps {\r\n  companies: Company[];\r\n  userEmail: string;\r\n}\r\n\r\ninterface DropboxShareSettings {\r\n  companyId: number;\r\n  companyEmail: string;\r\n  companyName: string;\r\n  companyICO: string;\r\n  isShared: boolean;\r\n  shareLink?: string;\r\n  permissions: {\r\n    canView: boolean;\r\n    canEdit: boolean;\r\n    canUpload: boolean;\r\n    canDelete: boolean;\r\n  };\r\n  folderPath: string;\r\n}\r\n\r\nconst DropboxAdminPanel: React.FC<DropboxAdminPanelProps> = ({ companies, userEmail }) => {\r\n  const [shareSettings, setShareSettings] = useState<DropboxShareSettings[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editingCompany, setEditingCompany] = useState<number | null>(null);\r\n  const [showShareModal, setShowShareModal] = useState(false);\r\n  const [selectedCompany, setSelectedCompany] = useState<Company | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [accountInfo, setAccountInfo] = useState<any>(null);\r\n  const [initialPermissions, setInitialPermissions] = useState<{\r\n    canView: boolean;\r\n    canEdit: boolean;\r\n    canUpload: boolean;\r\n    canDelete: boolean;\r\n  } | null>(null);\r\n\r\n    // Kontrola Dropbox autentifikácie - len raz pri mount\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      console.log('DropboxAdminPanel: Inicializujem autentifikáciu...');\r\n      \r\n      const authenticated = dropboxService.isAuthenticated();\r\n      console.log('DropboxAdminPanel: isAuthenticated =', authenticated);\r\n      \r\n      setIsAuthenticated(authenticated);\r\n      \r\n      if (authenticated) {\r\n        try {\r\n          console.log('DropboxAdminPanel: Načítavam account info...');\r\n          const account = await dropboxService.getAccountInfo();\r\n          setAccountInfo(account);\r\n          console.log('DropboxAdminPanel: Account info načítané:', account);\r\n        } catch (error) {\r\n          console.error('Error loading account info:', error);\r\n          // Token môže byť expirovaný, skúsime ho obnoviť\r\n          try {\r\n            console.log('DropboxAdminPanel: Skúšam obnoviť token...');\r\n            await dropboxService.refreshAccessToken();\r\n            const account = await dropboxService.getAccountInfo();\r\n            setAccountInfo(account);\r\n          } catch (refreshError) {\r\n            console.error('Error refreshing token:', refreshError);\r\n            handleLogout();\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    initAuth();\r\n  }, []); // Spustí sa len raz pri mount\r\n\r\n  // Kontrola autentifikácie pri návrate z callback - pomocou URL parametra\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const fromCallback = urlParams.get('from_callback');\r\n    \r\n    if (fromCallback === 'true') {\r\n      console.log('DropboxAdminPanel: Detekoval som návrat z callback, kontrolujem autentifikáciu...');\r\n      \r\n      // Kontrolujeme autentifikáciu\r\n      const authenticated = dropboxService.isAuthenticated();\r\n      if (authenticated) {\r\n        console.log('DropboxAdminPanel: Zistil som, že som prihlásený po návrate z callback');\r\n        setIsAuthenticated(true);\r\n        // Načítame account info\r\n        dropboxService.getAccountInfo().then(account => {\r\n          setAccountInfo(account);\r\n        }).catch(error => {\r\n          console.error('Error loading account info after callback:', error);\r\n        });\r\n      }\r\n      \r\n      // Vyčistíme URL parameter\r\n      const newUrl = window.location.pathname;\r\n      window.history.replaceState({}, '', newUrl);\r\n    }\r\n  }, []); // Spustí sa len raz pri mount\r\n\r\n  // Načítanie nastavení zdieľania pre všetky firmy\r\n  useEffect(() => {\r\n    if (isAuthenticated && companies.length > 0) {\r\n      console.log('DropboxAdminPanel: Načítavam share settings pre', companies.length, 'firiem');\r\n      loadShareSettings();\r\n    }\r\n  }, [companies, isAuthenticated]);\r\n\r\n  // Debug log pre sledovanie stavu\r\n  useEffect(() => {\r\n    console.log('DropboxAdminPanel: Stav zmenený:', { \r\n      isAuthenticated, \r\n      companiesCount: companies.length,\r\n      shareSettingsCount: shareSettings.length \r\n    });\r\n  }, [isAuthenticated, companies.length, shareSettings.length]);\r\n\r\n\r\n\r\n  const handleLogin = () => {\r\n    // Vyčistíme staré tokeny a state\r\n    localStorage.removeItem('dropbox_access_token');\r\n    localStorage.removeItem('dropbox_refresh_token');\r\n    localStorage.removeItem('dropbox_auth_state');\r\n    console.log('Vyčistené staré tokeny a state');\r\n    \r\n    const authUrl = dropboxService.getAuthUrl();\r\n    console.log('Presmerovávam na Dropbox OAuth...');\r\n    \r\n    // Jednoduchý redirect namiesto popup\r\n    window.location.href = authUrl;\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dropboxService.logout();\r\n    setIsAuthenticated(false);\r\n    setAccountInfo(null);\r\n    setShareSettings([]);\r\n  };\r\n\r\n  const loadShareSettings = async () => {\r\n    if (!isAuthenticated) {\r\n      console.log('loadShareSettings: Nie som prihlásený, ignorujem');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      // Kontrola, či sú firmy načítané\r\n      if (!companies || companies.length === 0) {\r\n        console.log('loadShareSettings: Žiadne firmy na načítanie');\r\n        setShareSettings([]);\r\n        return;\r\n      }\r\n\r\n      console.log('loadShareSettings: Načítavam nastavenia pre', companies.length, 'firiem');\r\n      \r\n      // Najprv načítame nastavenia z databázy\r\n              try {\r\n          const response = await fetch('http://localhost:5000/api/dropbox/admin/all-settings');\r\n        const data = await response.json();\r\n        \r\n        if (data.success && data.settings) {\r\n          console.log('loadShareSettings: Načítané nastavenia z databázy:', data.settings);\r\n          \r\n          const settings: DropboxShareSettings[] = companies.map(company => {\r\n            const dbSetting = data.settings.find((s: any) => s.companyId === company.id);\r\n            const folderPath = `/Portal/Companies/${dropboxService.hashICO(company.ico)}`;\r\n            \r\n            if (dbSetting) {\r\n              // Použijeme nastavenia z databázy\r\n              return {\r\n                companyId: company.id,\r\n                companyEmail: company.owner_email,\r\n                companyName: company.name,\r\n                companyICO: company.ico,\r\n                isShared: dbSetting.isShared,\r\n                permissions: dbSetting.permissions,\r\n                folderPath: dbSetting.folderPath || folderPath,\r\n                shareLink: dbSetting.shareLink\r\n              };\r\n            } else {\r\n              // Predvolené nastavenia pre firmu bez záznamu v databáze\r\n              return {\r\n                companyId: company.id,\r\n                companyEmail: company.owner_email,\r\n                companyName: company.name,\r\n                companyICO: company.ico,\r\n                isShared: false,\r\n                permissions: {\r\n                  canView: true,\r\n                  canEdit: false,\r\n                  canUpload: true,\r\n                  canDelete: false\r\n                },\r\n                folderPath: folderPath\r\n              };\r\n            }\r\n          });\r\n          \r\n          setShareSettings(settings);\r\n          console.log('loadShareSettings: Nastavenia úspešne načítané z databázy');\r\n          return;\r\n        }\r\n      } catch (dbError) {\r\n        console.log('loadShareSettings: Chyba pri načítaní z databázy, používam fallback:', dbError);\r\n      }\r\n      \r\n      // Fallback: načítanie z Dropbox API (pôvodná logika)\r\n      const settings: DropboxShareSettings[] = [];\r\n      \r\n      for (const company of companies) {\r\n        const folderPath = `/Portal/Companies/${dropboxService.hashICO(company.ico)}`;\r\n        \r\n        try {\r\n          // Skontrolujeme, či zložka existuje\r\n          const folderExists = await dropboxService.checkFolderExists(folderPath);\r\n          \r\n          let shareLink: string | undefined;\r\n          let permissions = {\r\n            canView: true,\r\n            canEdit: false,\r\n            canUpload: true,\r\n            canDelete: false\r\n          };\r\n          \r\n          // Ak zložka existuje, skúsime získať existujúci zdieľateľný link\r\n          if (folderExists) {\r\n            try {\r\n              console.log(`Hľadám existujúci link pre ${company.name} v ceste:`, folderPath);\r\n              const existingLinks = await dropboxService.getAllSharedLinks();\r\n              console.log(`Našiel som ${existingLinks.length} existujúcich linkov:`, existingLinks);\r\n              \r\n              const companyLink = existingLinks.find((link: any) => {\r\n                console.log(`Porovnávam:`, {\r\n                  linkPath: link.path_lower,\r\n                  targetPath: folderPath.toLowerCase(),\r\n                  match: link.path_lower === folderPath.toLowerCase()\r\n                });\r\n                return link.path_lower === folderPath.toLowerCase();\r\n              });\r\n              \r\n              if (companyLink) {\r\n                shareLink = companyLink.url;\r\n                console.log(`Našiel som existujúci link pre ${company.name}:`, shareLink);\r\n              } else {\r\n                console.log(`Nenašiel som existujúci link pre ${company.name}`);\r\n              }\r\n            } catch (linkError) {\r\n              console.log(`Nepodarilo sa získať link pre ${company.name}:`, linkError);\r\n            }\r\n          }\r\n          \r\n          settings.push({\r\n            companyId: company.id,\r\n            companyEmail: company.owner_email,\r\n            companyName: company.name,\r\n            companyICO: company.ico,\r\n            isShared: folderExists, // Ak zložka existuje, považujeme ju za zdieľanú\r\n            permissions: permissions,\r\n            shareLink: shareLink,\r\n            folderPath: folderPath\r\n          });\r\n        } catch (error) {\r\n          console.log(`Zložka pre ${company.name} neexistuje:`, error);\r\n          settings.push({\r\n            companyId: company.id,\r\n            companyEmail: company.owner_email,\r\n            companyName: company.name,\r\n            companyICO: company.ico,\r\n            isShared: false,\r\n            permissions: {\r\n              canView: true,\r\n              canEdit: false,\r\n              canUpload: true,\r\n              canDelete: false\r\n            },\r\n            folderPath: folderPath\r\n          });\r\n        }\r\n      }\r\n\r\n      setShareSettings(settings);\r\n      console.log('loadShareSettings: Nastavenia úspešne načítané (fallback)');\r\n    } catch (error) {\r\n      console.error('Chyba pri načítaní Dropbox nastavení:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateFolder = async (company: Company) => {\r\n    if (!isAuthenticated) {\r\n      alert('Najprv sa musíte prihlásiť do Dropbox');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Vytvoríme zložku\r\n      const folderPath = await dropboxService.createCompanyFolder(company.ico);\r\n      \r\n      // Automaticky nastavíme zdieľanie s predvolenými oprávneniami\r\n      const defaultPermissions = {\r\n        canView: true,\r\n        canEdit: false,\r\n        canUpload: true,\r\n        canDelete: false\r\n      };\r\n      \r\n      const shareLink = await dropboxService.createSharedLink(folderPath, defaultPermissions);\r\n      \r\n      // Uložíme nastavenia do databázy\r\n      try {\r\n                  const saveResponse = await fetch('http://localhost:5000/api/dropbox/admin/save-settings', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              companyId: company.id,\r\n              companyEmail: company.owner_email,\r\n              companyICO: company.ico,\r\n              folderPath: folderPath,\r\n              shareLink: shareLink,\r\n              permissions: defaultPermissions\r\n            })\r\n          });\r\n        \r\n        const saveData = await saveResponse.json();\r\n        \r\n        if (saveData.success) {\r\n          console.log('Nastavenia úspešne uložené do databázy');\r\n        } else {\r\n          console.error('Chyba pri ukladaní do databázy:', saveData.error);\r\n        }\r\n      } catch (dbError) {\r\n        console.error('Chyba pri ukladaní do databázy:', dbError);\r\n      }\r\n      \r\n      // Aktualizujeme lokálne nastavenia\r\n      setShareSettings(prev => prev.map(setting => \r\n        setting.companyId === company.id \r\n          ? { \r\n              ...setting, \r\n              isShared: true, \r\n              folderPath,\r\n              shareLink,\r\n              permissions: defaultPermissions\r\n            }\r\n          : setting\r\n      ));\r\n      \r\n      alert(`Zložka pre firmu ${company.name} bola úspešne vytvorená a zdieľaná!`);\r\n    } catch (error) {\r\n      console.error('Chyba pri vytváraní zložky:', error);\r\n      alert('Chyba pri vytváraní zložky');\r\n    }\r\n  };\r\n\r\n  const handleShareFolder = async (company: Company) => {\r\n    setSelectedCompany(company);\r\n    setShowShareModal(true);\r\n    setInitialPermissions(null); // Reset pre nové zdieľanie\r\n  };\r\n\r\n  const handleEditPermissions = async (company: Company, currentPermissions: {\r\n    canView: boolean;\r\n    canEdit: boolean;\r\n    canUpload: boolean;\r\n    canDelete: boolean;\r\n  }) => {\r\n    setSelectedCompany(company);\r\n    setShowShareModal(true);\r\n    // Nastavíme aktuálne oprávnenia do modálneho okna\r\n    setInitialPermissions(currentPermissions);\r\n  };\r\n\r\n  const handleSaveShareSettings = async (settings: {\r\n    canView: boolean;\r\n    canEdit: boolean;\r\n    canUpload: boolean;\r\n    canDelete: boolean;\r\n  }) => {\r\n    if (!selectedCompany) return;\r\n\r\n    try {\r\n      const folderPath = `/Portal/Companies/${dropboxService.hashICO(selectedCompany.ico)}`;\r\n      \r\n      // Ak už existuje zdieľateľný link, najprv ho odvoláme\r\n      const currentSetting = shareSettings.find(s => s.companyId === selectedCompany.id);\r\n      if (currentSetting && currentSetting.shareLink) {\r\n        try {\r\n          console.log('Odvolávam existujúci zdieľateľný link:', currentSetting.shareLink);\r\n          await dropboxService.revokeSharedLink(currentSetting.shareLink);\r\n          console.log('Existujúci zdieľateľný link odvolaný');\r\n        } catch (revokeError) {\r\n          console.log('Link už neexistuje alebo sa nedá odvolať:', revokeError);\r\n        }\r\n      } else {\r\n        console.log('Žiadny existujúci link na odvolanie');\r\n      }\r\n      \r\n      // Vytvoríme nový zdieľateľný link s novými oprávneniami\r\n      const shareLink = await dropboxService.createSharedLink(folderPath, settings);\r\n      \r\n      // Uložíme nastavenia do databázy\r\n      try {\r\n        const saveResponse = await fetch('http://localhost:5000/api/dropbox/admin/save-settings', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            companyId: selectedCompany.id,\r\n            companyEmail: selectedCompany.owner_email,\r\n            folderPath: folderPath,\r\n            shareLink: shareLink,\r\n            permissions: settings\r\n          })\r\n        });\r\n        \r\n        const saveData = await saveResponse.json();\r\n        \r\n        if (saveData.success) {\r\n          console.log('Nastavenia úspešne uložené do databázy');\r\n        } else {\r\n          console.error('Chyba pri ukladaní do databázy:', saveData.error);\r\n        }\r\n      } catch (dbError) {\r\n        console.error('Chyba pri ukladaní do databázy:', dbError);\r\n      }\r\n      \r\n      // Aktualizujeme lokálne nastavenia\r\n      setShareSettings(prev => prev.map(setting => \r\n        setting.companyId === selectedCompany.id \r\n          ? { \r\n              ...setting, \r\n              isShared: true, \r\n              shareLink,\r\n              permissions: settings,\r\n              folderPath\r\n            }\r\n          : setting\r\n      ));\r\n      \r\n      setShowShareModal(false);\r\n      setSelectedCompany(null);\r\n      setInitialPermissions(null);\r\n      const message = initialPermissions \r\n        ? `Oprávnenia pre firmu ${selectedCompany.name} boli úspešne aktualizované!`\r\n        : `Zdieľanie pre firmu ${selectedCompany.name} bolo úspešne nastavené!`;\r\n      alert(message);\r\n    } catch (error) {\r\n      console.error('Chyba pri nastavovaní zdieľania:', error);\r\n      alert('Chyba pri nastavovaní zdieľania');\r\n    }\r\n  };\r\n\r\n  const handleRevokeAccess = async (companyId: number) => {\r\n    if (!window.confirm('Naozaj chcete odobrať prístup k Dropbox zložke?')) return;\r\n\r\n    try {\r\n      const setting = shareSettings.find(s => s.companyId === companyId);\r\n      if (setting && setting.shareLink) {\r\n        await dropboxService.revokeSharedLink(setting.shareLink);\r\n        \r\n        // Aktualizujeme databázu - nastavíme isShared na false a vymažeme shareLink\r\n        try {\r\n          const saveResponse = await fetch('http://localhost:5000/api/dropbox/admin/save-settings', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              companyId: setting.companyId,\r\n              companyEmail: setting.companyEmail,\r\n              folderPath: setting.folderPath,\r\n              shareLink: null, // Odvolaný link\r\n              permissions: setting.permissions\r\n            })\r\n          });\r\n          \r\n          const saveData = await saveResponse.json();\r\n          \r\n          if (saveData.success) {\r\n            console.log('Nastavenia úspešne aktualizované v databáze');\r\n          } else {\r\n            console.error('Chyba pri aktualizácii databázy:', saveData.error);\r\n          }\r\n        } catch (dbError) {\r\n          console.error('Chyba pri aktualizácii databázy:', dbError);\r\n        }\r\n        \r\n        setShareSettings(prev => prev.map(s => \r\n          s.companyId === companyId \r\n            ? { ...s, isShared: false, shareLink: undefined }\r\n            : s\r\n        ));\r\n        \r\n        alert('Prístup bol úspešne odobraný!');\r\n      }\r\n    } catch (error) {\r\n      console.error('Chyba pri odoberaní prístupu:', error);\r\n      alert('Chyba pri odoberaní prístupu');\r\n    }\r\n  };\r\n\r\n  const getPermissionIcon = (permission: boolean) => {\r\n    return permission ? (\r\n      <CheckIcon className=\"h-4 w-4 text-green-500\" />\r\n    ) : (\r\n      <XMarkIcon className=\"h-4 w-4 text-red-500\" />\r\n    );\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n        <div className=\"text-center\">\r\n          <CloudIcon className=\"mx-auto h-12 w-12 text-blue-500 mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n            Pripojte sa k Dropbox\r\n          </h3>\r\n          <p className=\"text-gray-600 mb-4\">\r\n            Pre správu Dropbox zdieľaní sa musíte najprv prihlásiť do vášho Dropbox účtu.\r\n          </p>\r\n          <button\r\n            onClick={handleLogin}\r\n            className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\r\n          >\r\n            <CloudIcon className=\"h-5 w-5 mr-2\" />\r\n            Pripojiť Dropbox\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading || !companies || companies.length === 0) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n        <p className=\"mt-4 text-gray-600\">\r\n          {loading ? 'Načítavam Dropbox nastavenia...' : 'Načítavam zoznam firiem...'}\r\n        </p>\r\n        {!companies || companies.length === 0 ? (\r\n          <p className=\"text-sm text-gray-500 mt-2\">\r\n            {companies ? 'Žiadne firmy neboli nájdené' : 'Čakám na načítanie firiem...'}\r\n          </p>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h3 className=\"text-lg font-medium text-gray-900\">Dropbox zdieľania pre firmy</h3>\r\n          <p className=\"text-sm text-gray-600\">Spravujte prístupy k Dropbox zložkám pre jednotlivé firmy</p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <CloudIcon className=\"h-6 w-6 text-blue-500\" />\r\n          <span className=\"text-sm text-gray-600\">Admin Dropbox správa</span>\r\n          {accountInfo && (\r\n            <div className=\"text-xs text-gray-500 ml-2\">\r\n              ({accountInfo.name.display_name})\r\n            </div>\r\n          )}\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"text-sm text-red-600 hover:text-red-700 ml-2\"\r\n          >\r\n            Odhlásiť\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Companies List */}\r\n      <div className=\"space-y-4\">\r\n        {shareSettings.map((setting) => (\r\n          <div key={setting.companyId} className=\"bg-gray-50 rounded-lg p-6 border border-gray-200\">\r\n            <div className=\"flex items-start justify-between mb-4\">\r\n              <div className=\"flex-1\">\r\n                <div className=\"flex items-center space-x-3 mb-2\">\r\n                  <BuildingOfficeIcon className=\"h-5 w-5 text-gray-400\" />\r\n                  <h4 className=\"text-lg font-semibold text-gray-900\">{setting.companyName}</h4>\r\n                  {setting.isShared && (\r\n                    <span className=\"bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs font-medium\">\r\n                      Zdieľané\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <p className=\"text-sm text-gray-600 mb-2\">\r\n                  <UserIcon className=\"h-4 w-4 inline mr-1\" />\r\n                  {setting.companyEmail}\r\n                </p>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  <FolderIcon className=\"h-4 w-4 inline mr-1\" />\r\n                  {setting.folderPath}\r\n                </p>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center space-x-2\">\r\n                {!setting.isShared ? (\r\n                                     <button\r\n                     onClick={() => handleCreateFolder(companies.find(c => c.id === setting.companyId)!)}\r\n                     className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded-md hover:bg-blue-700 flex items-center\"\r\n                   >\r\n                     <PlusIcon className=\"h-4 w-4 mr-1\" />\r\n                     Vytvoriť a zdieľať zložku\r\n                   </button>\r\n                ) : (\r\n                  <>\r\n                                         <button\r\n                       onClick={() => handleShareFolder(companies.find(c => c.id === setting.companyId)!)}\r\n                       className=\"px-3 py-1 bg-green-600 text-white text-sm rounded-md hover:bg-green-700 flex items-center\"\r\n                     >\r\n                       <LinkIcon className=\"h-4 w-4 mr-1\" />\r\n                       Upraviť zdieľanie\r\n                     </button>\r\n                    <button\r\n                      onClick={() => handleRevokeAccess(setting.companyId)}\r\n                      className=\"px-3 py-1 bg-red-600 text-white text-sm rounded-md hover:bg-red-700 flex items-center\"\r\n                    >\r\n                      <TrashIcon className=\"h-4 w-4 mr-1\" />\r\n                      Odobrať\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Permissions */}\r\n            {setting.isShared && (\r\n              <div className=\"border-t border-gray-200 pt-4\">\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <h5 className=\"text-sm font-medium text-gray-700\">Oprávnenia:</h5>\r\n                  <button\r\n                    onClick={() => handleEditPermissions(companies.find(c => c.id === setting.companyId)!, setting.permissions)}\r\n                    className=\"text-xs text-blue-600 hover:text-blue-700 flex items-center\"\r\n                  >\r\n                    <PencilIcon className=\"h-3 w-3 mr-1\" />\r\n                    Upraviť oprávnenia\r\n                  </button>\r\n                </div>\r\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {getPermissionIcon(setting.permissions.canView)}\r\n                    <span className=\"text-sm text-gray-600\">Zobraziť</span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {getPermissionIcon(setting.permissions.canEdit)}\r\n                    <span className=\"text-sm text-gray-600\">Upraviť</span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {getPermissionIcon(setting.permissions.canUpload)}\r\n                    <span className=\"text-sm text-gray-600\">Nahrať</span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {getPermissionIcon(setting.permissions.canDelete)}\r\n                    <span className=\"text-sm text-gray-600\">Vymazať</span>\r\n                  </div>\r\n                </div>\r\n                \r\n\r\n                \r\n                {setting.isShared && setting.shareLink && (\r\n                  <div className=\"mt-3 p-3 bg-blue-50 rounded-md\">\r\n                    <p className=\"text-xs text-gray-600 mb-1\">Zdieľateľný link:</p>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <input\r\n                        type=\"text\"\r\n                        value={setting.shareLink}\r\n                        readOnly\r\n                        className=\"flex-1 text-xs bg-white border border-gray-300 rounded px-2 py-1\"\r\n                      />\r\n                      <button\r\n                        onClick={() => navigator.clipboard.writeText(setting.shareLink!)}\r\n                        className=\"text-blue-600 hover:text-blue-700 text-xs\"\r\n                      >\r\n                        Kopírovať\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Share Modal */}\r\n      {showShareModal && selectedCompany && (\r\n        <ShareSettingsModal\r\n          company={selectedCompany}\r\n          initialPermissions={initialPermissions}\r\n          onClose={() => {\r\n            setShowShareModal(false);\r\n            setSelectedCompany(null);\r\n            setInitialPermissions(null);\r\n          }}\r\n          onSave={handleSaveShareSettings}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Share Settings Modal Component\r\ninterface ShareSettingsModalProps {\r\n  company: Company;\r\n  initialPermissions?: {\r\n    canView: boolean;\r\n    canEdit: boolean;\r\n    canUpload: boolean;\r\n    canDelete: boolean;\r\n  } | null;\r\n  onClose: () => void;\r\n  onSave: (settings: {\r\n    canView: boolean;\r\n    canEdit: boolean;\r\n    canUpload: boolean;\r\n    canDelete: boolean;\r\n  }) => void;\r\n}\r\n\r\nconst ShareSettingsModal: React.FC<ShareSettingsModalProps> = ({ company, initialPermissions, onClose, onSave }) => {\r\n  const [settings, setSettings] = useState({\r\n    canView: initialPermissions?.canView ?? true,\r\n    canEdit: initialPermissions?.canEdit ?? false,\r\n    canUpload: initialPermissions?.canUpload ?? true,\r\n    canDelete: initialPermissions?.canDelete ?? false\r\n  });\r\n\r\n  const handleSave = () => {\r\n    onSave(settings);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900\">\r\n            {initialPermissions ? 'Úprava oprávnení pre' : 'Nastavenie zdieľania pre'} {company.name}\r\n          </h3>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600\"\r\n          >\r\n            <XMarkIcon className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm text-gray-700\">Zobraziť súbory</span>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={settings.canView}\r\n              onChange={(e) => setSettings(prev => ({ ...prev, canView: e.target.checked }))}\r\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm text-gray-700\">Upraviť súbory</span>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={settings.canEdit}\r\n              onChange={(e) => setSettings(prev => ({ ...prev, canEdit: e.target.checked }))}\r\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm text-gray-700\">Nahrať súbory</span>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={settings.canUpload}\r\n              onChange={(e) => setSettings(prev => ({ ...prev, canUpload: e.target.checked }))}\r\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm text-gray-700\">Vymazať súbory</span>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={settings.canDelete}\r\n              onChange={(e) => setSettings(prev => ({ ...prev, canDelete: e.target.checked }))}\r\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-end space-x-3 mt-6\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\r\n          >\r\n            Zrušiť\r\n          </button>\r\n                     <button\r\n             onClick={handleSave}\r\n             className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700\"\r\n           >\r\n             {initialPermissions ? 'Aktualizovať oprávnenia' : 'Uložiť nastavenia'}\r\n           </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropboxAdminPanel;\r\n","import React, { useState, useEffect } from 'react';\nimport { \n  ArrowLeftIcon,\n  CloudIcon,\n  MagnifyingGlassIcon,\n  BuildingOfficeIcon,\n  CheckIcon,\n  XMarkIcon,\n  EyeIcon\n} from '@heroicons/react/24/outline';\nimport DropboxAdminPanel from '../components/DropboxAdminPanel';\nimport { apiService, Company } from '../services/apiService';\n\ninterface AdminDropboxPageProps {\n  onBack: () => void;\n}\n\nconst AdminDropboxPage: React.FC<AdminDropboxPageProps> = ({ onBack }) => {\n  const [companies, setCompanies] = useState<Company[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCompany, setSelectedCompany] = useState<Company | null>(null);\n  const [showDropboxPanel, setShowDropboxPanel] = useState(false);\n\n  // Načítanie firiem\n  useEffect(() => {\n    const loadCompanies = async () => {\n      try {\n        setLoading(true);\n        const companiesData = await apiService.getAllCompaniesForAdmin();\n        setCompanies(companiesData);\n      } catch (error) {\n        console.error('Chyba pri načítaní firiem:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadCompanies();\n  }, []);\n\n  // Filtrovanie firiem\n  const filteredCompanies = companies.filter(company =>\n    company.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    company.ico.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    company.email?.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // Otvorenie Dropbox panelu pre firmu\n  const handleOpenDropboxPanel = (company: Company) => {\n    setSelectedCompany(company);\n    setShowDropboxPanel(true);\n  };\n\n  // Zatvorenie Dropbox panelu\n  const handleCloseDropboxPanel = () => {\n    setShowDropboxPanel(false);\n    setSelectedCompany(null);\n  };\n\n  // Štatistiky\n  const stats = {\n    total: companies.length,\n    shared: companies.filter(c => c.hasDropbox).length,\n    notShared: companies.filter(c => !c.hasDropbox).length,\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={onBack}\n                className=\"flex items-center text-gray-600 hover:text-gray-900 transition-colors\"\n              >\n                <ArrowLeftIcon className=\"h-5 w-5 mr-2\" />\n                Späť do Dashboardu\n              </button>\n              <div className=\"h-6 w-px bg-gray-300\"></div>\n              <div className=\"flex items-center\">\n                <CloudIcon className=\"h-8 w-8 text-blue-500 mr-3\" />\n                <h1 className=\"text-2xl font-bold text-gray-900\">Dropbox správa</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Štatistiky */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n          <div className=\"bg-white rounded-lg shadow-md p-4\">\n            <div className=\"flex items-center\">\n              <BuildingOfficeIcon className=\"h-8 w-8 text-blue-500\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-600\">Celkovo firiem</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.total}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-white rounded-lg shadow-md p-4\">\n            <div className=\"flex items-center\">\n              <CheckIcon className=\"h-8 w-8 text-green-500\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-600\">Zdieľané</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.shared}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-white rounded-lg shadow-md p-4\">\n            <div className=\"flex items-center\">\n              <XMarkIcon className=\"h-8 w-8 text-red-500\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-600\">Nezdieľané</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.notShared}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-md\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <h2 className=\"text-lg font-semibold text-gray-900\">Zoznam firiem</h2>\n                <p className=\"text-sm text-gray-600 mt-1\">\n                  Vyberte firmu pre správu Dropbox nastavení\n                </p>\n              </div>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <MagnifyingGlassIcon className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Vyhľadať firmu...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"p-6\">\n            {loading ? (\n              <div className=\"text-center py-12\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n                <p className=\"mt-4 text-gray-600\">Načítavam firmy...</p>\n              </div>\n            ) : filteredCompanies.length > 0 ? (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {filteredCompanies.map((company) => (\n                  <div \n                    key={company.id} \n                    className=\"bg-gray-50 rounded-lg p-6 hover:shadow-md transition-shadow border border-gray-200 cursor-pointer\"\n                    onClick={() => handleOpenDropboxPanel(company)}\n                  >\n                    <div className=\"flex items-start justify-between mb-4\">\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{company.name}</h3>\n                        <div className=\"space-y-2 text-sm text-gray-600\">\n                          <div className=\"flex items-center\">\n                            <BuildingOfficeIcon className=\"h-4 w-4 mr-2\" />\n                            <span>IČO: {company.ico}</span>\n                          </div>\n                          <div className=\"flex items-center\">\n                            <span>Email: {company.email || company.owner_email}</span>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col items-end space-y-2\">\n                        {company.hasDropbox ? (\n                          <span className=\"bg-green-100 text-green-800 text-xs font-medium px-2 py-1 rounded-full flex items-center\">\n                            <CheckIcon className=\"h-3 w-3 mr-1\" />\n                            Zdieľané\n                          </span>\n                        ) : (\n                          <span className=\"bg-red-100 text-red-800 text-xs font-medium px-2 py-1 rounded-full flex items-center\">\n                            <XMarkIcon className=\"h-3 w-3 mr-1\" />\n                            Nezdieľané\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between pt-4 border-t border-gray-200\">\n                      <div className=\"flex items-center text-blue-600 hover:text-blue-700 text-sm font-medium\">\n                        <EyeIcon className=\"h-4 w-4 mr-1\" />\n                        Správa Dropbox\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-12\">\n                <CloudIcon className=\"mx-auto h-16 w-16 text-gray-400\" />\n                <h3 className=\"mt-4 text-lg font-medium text-gray-900\">\n                  {searchTerm ? 'Žiadne firmy nenájdené' : 'Žiadne firmy'}\n                </h3>\n                <p className=\"mt-2 text-sm text-gray-500\">\n                  {searchTerm \n                    ? 'Skúste zmeniť vyhľadávací výraz.'\n                    : 'Zatiaľ neboli vytvorené žiadne firmy.'\n                  }\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Dropbox Admin Panel Modal */}\n      {showDropboxPanel && selectedCompany && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg shadow-xl w-full max-w-4xl max-h-[90vh] overflow-hidden\">\n            <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n              <div className=\"flex items-center\">\n                <CloudIcon className=\"h-6 w-6 text-blue-500 mr-3\" />\n                <h2 className=\"text-xl font-semibold text-gray-900\">\n                  Dropbox správa - {selectedCompany.name}\n                </h2>\n              </div>\n              <button\n                onClick={handleCloseDropboxPanel}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <XMarkIcon className=\"h-6 w-6\" />\n              </button>\n            </div>\n            <div className=\"overflow-y-auto max-h-[calc(90vh-120px)]\">\n                             <DropboxAdminPanel \n                 companies={selectedCompany ? [selectedCompany] : []}\n                 userEmail=\"admin@portal.sk\"\n               />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminDropboxPage;\n"],"names":["MagnifyingGlassIcon","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","PlusIcon","CheckIcon","FolderIcon","PencilIcon","TrashIcon","LinkIcon","ArrowLeftIcon","EyeIcon","DROPBOX_APP_KEY","process","DROPBOX_APP_SECRET","DROPBOX_REDIRECT_URI","dropboxService","constructor","dbx","accessToken","console","log","appKey","appSecret","appSecretLength","redirectUri","this","localStorage","getItem","initializeDropbox","Dropbox","fetch","window","bind","getAuthUrl","removeItem","state","Math","random","toString","substring","setItem","timestamp","Date","toISOString","authUrl","concat","encodeURIComponent","handleAuthCallback","code","savedState","received","saved","match","error","dropbox_auth_state","dropbox_access_token","dropbox_refresh_token","Error","client_id","client_secret","redirect_uri","requestBody","URLSearchParams","grant_type","response","method","headers","body","status","ok","errorText","text","fromEntries","entries","authResult","json","access_token","token_type","expires_in","refresh_token","isAuthenticated","tokenFromStorage","authenticated","result","logout","getAccountInfo","usersGetCurrentAccount","message","includes","token","listFiles","path","arguments","length","undefined","ico","targetPath","startsWith","companyFolder","getCompanyFolderPath","filesListFolder","limit","map","entry","name","path_lower","size","server_modified","content_hash","tag","stack","icoHash","hashICO","replace","createCompanyFolder","companyPath","filesCreateFolderV2","autorename","getCompanySharedLink","getSharedLink","uploadFile","file","onProgress","fileBuffer","arrayBuffer","fullPath","filesUpload","contents","mode","mute","downloadFile","fileBlob","filesDownload","Blob","type","deleteFile","filesDeleteV2","createFolder","sharingCreateSharedLinkWithSettings","settings","requested_visibility","audience","access","url","refreshAccessToken","refreshToken","createSharedLink","folderPath","permissions","canEdit","canUpload","canDelete","existingLinks","sharingListSharedLinks","direct_only","links","listError","revokeSharedLink","shareLink","sharingRevokeSharedLink","getAllSharedLinks","checkFolderExists","filesGetMetadata","ShareSettingsModal","_ref2","_initialPermissions$c","_initialPermissions$c2","_initialPermissions$c3","_initialPermissions$c4","company","initialPermissions","onClose","onSave","setSettings","useState","canView","_jsx","className","children","_jsxs","onClick","XMarkIcon","checked","onChange","e","prev","_objectSpread","target","handleSave","companies","userEmail","shareSettings","setShareSettings","loading","setLoading","editingCompany","setEditingCompany","showShareModal","setShowShareModal","selectedCompany","setSelectedCompany","setIsAuthenticated","accountInfo","setAccountInfo","setInitialPermissions","useEffect","async","account","refreshError","handleLogout","initAuth","location","search","get","then","catch","newUrl","pathname","history","replaceState","loadShareSettings","companiesCount","shareSettingsCount","handleLogin","href","data","success","dbSetting","find","s","companyId","companyEmail","owner_email","companyName","companyICO","isShared","dbError","folderExists","companyLink","link","linkPath","toLowerCase","linkError","push","getPermissionIcon","permission","CloudIcon","display_name","setting","BuildingOfficeIcon","UserIcon","_Fragment","handleShareFolder","c","confirm","saveResponse","JSON","stringify","saveData","alert","handleRevokeAccess","defaultPermissions","handleCreateFolder","currentPermissions","handleEditPermissions","value","readOnly","navigator","clipboard","writeText","currentSetting","revokeError","onBack","setCompanies","searchTerm","setSearchTerm","showDropboxPanel","setShowDropboxPanel","companiesData","apiService","getAllCompaniesForAdmin","loadCompanies","filteredCompanies","filter","_company$email","email","stats","total","shared","hasDropbox","notShared","placeholder","handleOpenDropboxPanel","handleCloseDropboxPanel","DropboxAdminPanel"],"sourceRoot":""}