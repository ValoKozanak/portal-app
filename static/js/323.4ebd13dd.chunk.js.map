{"version":3,"file":"static/js/323.4ebd13dd.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/MagnifyingGlassIcon.js","services/accountingService.ts","../node_modules/@heroicons/react/24/outline/esm/PlusIcon.js","../node_modules/@heroicons/react/24/outline/esm/BuildingOfficeIcon.js","../node_modules/@heroicons/react/24/outline/esm/PencilIcon.js","pages/DirectoryPage.tsx","../node_modules/@heroicons/react/24/outline/esm/ArrowLeftIcon.js","../node_modules/@heroicons/react/24/outline/esm/EyeIcon.js"],"sourcesContent":["import * as React from \"react\";\nfunction MagnifyingGlassIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(MagnifyingGlassIcon);\nexport default ForwardRef;","import { apiService, ApiResponse } from './apiService';\r\n\r\n// ===== ÚČTOVNÍCTVO SERVICE =====\r\n\r\nexport interface AccountingSettings {\r\n  id?: number;\r\n  company_id: number;\r\n  pohoda_enabled: boolean;\r\n  pohoda_url?: string;\r\n  pohoda_username?: string;\r\n  pohoda_password?: string;\r\n  pohoda_ico?: string;\r\n  pohoda_year?: string;\r\n  auto_sync: boolean;\r\n  sync_frequency: 'hourly' | 'daily' | 'weekly' | 'manual';\r\n  last_sync?: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport interface AccountingPermissions {\r\n  id?: number;\r\n  user_email: string;\r\n  company_id: number;\r\n  can_view_invoices: boolean;\r\n  can_create_invoices: boolean;\r\n  can_edit_invoices: boolean;\r\n  can_delete_invoices: boolean;\r\n  can_view_bank: boolean;\r\n  can_edit_bank: boolean;\r\n  can_view_cash: boolean;\r\n  can_edit_cash: boolean;\r\n  can_view_reports: boolean;\r\n  can_export_data: boolean;\r\n  can_manage_settings: boolean;\r\n  granted_by: string;\r\n  granted_at?: string;\r\n}\r\n\r\nexport interface FinancialAnalysis {\r\n  expenses: {\r\n    total: number;\r\n    count: number;\r\n    details: Array<{\r\n      account: string;\r\n      account_name: string;\r\n      amount: number;\r\n      count: number;\r\n    }>;\r\n  };\r\n  revenue: {\r\n    total: number;\r\n    count: number;\r\n    details: Array<{\r\n      account: string;\r\n      account_name: string;\r\n      amount: number;\r\n      count: number;\r\n    }>;\r\n  };\r\n  profit: number;\r\n  isProfit: boolean;\r\n  filters?: {\r\n    dateFrom: string | null;\r\n    dateTo: string | null;\r\n  };\r\n}\r\n\r\nexport interface InvoiceItem {\r\n  id?: number;\r\n  description: string;\r\n  quantity: number;\r\n  unit_price: number;\r\n  vat_rate: number;\r\n  total_price: number;\r\n  vat_amount: number;\r\n  unit?: string;\r\n}\r\n\r\nexport interface IssuedInvoice {\r\n  id?: number;\r\n  company_id: number;\r\n  invoice_number: string;\r\n  customer_name: string;\r\n  customer_ico?: string;\r\n  customer_dic?: string;\r\n  customer_address?: string;\r\n  issue_date: string;\r\n  due_date: string;\r\n  total_amount: number;\r\n  vat_amount: number;\r\n  \r\n  // MDB polia - základy DPH\r\n  kc0?: number;\r\n  kc1?: number;\r\n  kc2?: number;\r\n  kc3?: number;\r\n  \r\n  // MDB polia - DPH\r\n  kc_dph1?: number;\r\n  kc_dph2?: number;\r\n  kc_dph3?: number;\r\n  \r\n  // MDB polia - celkové sumy\r\n  kc_celkem?: number;\r\n  \r\n  // MDB polia - ďalšie informácie\r\n  var_sym?: string;\r\n  s_text?: string;\r\n  mdb_id?: number;\r\n  rel_tp_fak?: number;\r\n  datum?: string;\r\n  dat_splat?: string;\r\n  firma?: string;\r\n  ico?: string;\r\n  dic?: string;\r\n  ulice?: string;\r\n  psc?: string;\r\n  obec?: string;\r\n  mdb_cislo?: string;\r\n  \r\n  // MDB polia - likvidácia a platby\r\n  kc_likv?: number;\r\n  kc_u?: number;\r\n  dat_likv?: string;\r\n  \r\n  currency: string;\r\n  status: 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled';\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  items?: InvoiceItem[];\r\n}\r\n\r\nexport interface ReceivedInvoice {\r\n  id?: number;\r\n  company_id: number;\r\n  invoice_number: string;\r\n  supplier_name: string;\r\n  supplier_ico?: string;\r\n  supplier_dic?: string;\r\n  supplier_address?: string;\r\n  issue_date: string;\r\n  due_date: string;\r\n  total_amount: number;\r\n  vat_amount: number;\r\n  \r\n  // MDB polia - základy DPH\r\n  kc0?: number;\r\n  kc1?: number;\r\n  kc2?: number;\r\n  kc3?: number;\r\n  \r\n  // MDB polia - DPH\r\n  kc_dph1?: number;\r\n  kc_dph2?: number;\r\n  kc_dph3?: number;\r\n  \r\n  // MDB polia - celkové sumy\r\n  kc_celkem?: number;\r\n  \r\n  // MDB polia - ďalšie informácie\r\n  var_sym?: string;\r\n  s_text?: string;\r\n  mdb_id?: number;\r\n  rel_tp_fak?: number;\r\n  datum?: string;\r\n  dat_splat?: string;\r\n  firma?: string;\r\n  ico?: string;\r\n  dic?: string;\r\n  ulice?: string;\r\n  psc?: string;\r\n  obec?: string;\r\n  mdb_cislo?: string;\r\n  \r\n  // MDB polia - likvidácia a platby\r\n  kc_likv?: number;\r\n  kc_u?: number;\r\n  dat_likv?: string;\r\n  \r\n  currency: string;\r\n  status: 'received' | 'approved' | 'paid' | 'overdue' | 'disputed';\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  items?: InvoiceItem[];\r\n}\r\n\r\nexport interface BankTransaction {\r\n  id?: number;\r\n  company_id: number;\r\n  transaction_date: string;\r\n  description: string;\r\n  amount: number;\r\n  currency: string;\r\n  type: 'income' | 'expense';\r\n  category?: string;\r\n  bank_account?: string;\r\n  reference?: string;\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport interface CashTransaction {\r\n  id?: number;\r\n  company_id: number;\r\n  transaction_date: string;\r\n  description: string;\r\n  amount: number;\r\n  currency: string;\r\n  type: 'income' | 'expense';\r\n  category?: string;\r\n  receipt_number?: string;\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\n\r\n\r\nexport interface AccountingStats {\r\n  issued_invoices: {\r\n    total_count: number;\r\n    total_amount: number;\r\n    paid_amount: number;\r\n    overdue_amount: number;\r\n  };\r\n  received_invoices: {\r\n    total_count: number;\r\n    total_amount: number;\r\n    paid_amount: number;\r\n    overdue_amount: number;\r\n  };\r\n  bank: {\r\n    total_income: number;\r\n    total_expense: number;\r\n  };\r\n  cash: {\r\n    total_income: number;\r\n    total_expense: number;\r\n  };\r\n}\r\n\r\nexport class AccountingService {\r\n  // 1. NASTAVENIA ÚČTOVNÍCTVA\r\n\r\n    async getSettings(companyId: number): Promise<AccountingSettings> {\r\n    const response = await apiService.get(`/accounting/settings/${companyId}`); \r\n    return response as AccountingSettings;\r\n  }\r\n\r\n  async saveSettings(companyId: number, settings: Partial<AccountingSettings>): Promise<any> {\r\n    const response = await apiService.post(`/accounting/settings/${companyId}`, settings);\r\n    return response;\r\n  }\r\n\r\n  // 2. PRÁVA PRE ÚČTOVNÍCTVO\r\n\r\n  async getPermissions(companyId: number, userEmail: string): Promise<AccountingPermissions> {\r\n    const response = await apiService.get(`/accounting/permissions/${companyId}/${userEmail}`);\r\n    return response as AccountingPermissions;\r\n  }\r\n\r\n  async savePermissions(companyId: number, permissions: Partial<AccountingPermissions>): Promise<any> {\r\n    const response = await apiService.post(`/accounting/permissions/${companyId}`, permissions);\r\n    return response;\r\n  }\r\n\r\n  async getAllPermissions(companyId: number): Promise<AccountingPermissions[]> {\r\n    const response = await apiService.get(`/accounting/permissions/${companyId}`);\r\n    return response as AccountingPermissions[];\r\n  }\r\n\r\n  // 3. VYDANÉ FAKTÚRY\r\n\r\n  async getIssuedInvoices(\r\n    companyId: number, \r\n    filters?: {\r\n      status?: string;\r\n      date_from?: string;\r\n      date_to?: string;\r\n      limit?: number;\r\n      offset?: number;\r\n    }\r\n  ): Promise<IssuedInvoice[]> {\r\n    const params = new URLSearchParams();\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          params.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n    \r\n    const response = await apiService.get(`/accounting/issued-invoices/${companyId}?${params}`);\r\n    return response as IssuedInvoice[];\r\n  }\r\n\r\n  async createIssuedInvoice(companyId: number, invoice: Partial<IssuedInvoice>): Promise<any> {\r\n    const response = await apiService.post(`/accounting/issued-invoices/${companyId}`, invoice);\r\n    return response;\r\n  }\r\n\r\n  async getIssuedInvoiceById(invoiceId: number): Promise<IssuedInvoice> {\r\n    const response = await apiService.get(`/accounting/issued-invoices/detail/${invoiceId}`);\r\n    return response as IssuedInvoice;\r\n  }\r\n\r\n\r\n\r\n  // 4. PRIJATÉ FAKTÚRY\r\n\r\n  async getReceivedInvoices(\r\n    companyId: number, \r\n    filters?: {\r\n      status?: string;\r\n      date_from?: string;\r\n      date_to?: string;\r\n      limit?: number;\r\n      offset?: number;\r\n    }\r\n  ): Promise<ReceivedInvoice[]> {\r\n    const params = new URLSearchParams();\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          params.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n    \r\n    const response = await apiService.get(`/accounting/received-invoices/${companyId}?${params}`);\r\n    return response as ReceivedInvoice[];\r\n  }\r\n\r\n  async getReceivedInvoiceById(invoiceId: number): Promise<ReceivedInvoice> {\r\n    const response = await apiService.get(`/accounting/received-invoices/detail/${invoiceId}`);\r\n    return response as ReceivedInvoice;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // 7. HOSPODÁRSKE VÝSLEDKY (pUD)\r\n\r\n  async getPudSummary(companyId: number): Promise<{ total_kc: number; total_count: number }> {\r\n    const response = await apiService.get(`/accounting/pud-summary/${companyId}`);\r\n    return response as { total_kc: number; total_count: number };\r\n  }\r\n\r\n  // Získanie podrobnej analýzy nákladov a výnosov\r\n  async getFinancialAnalysis(companyId: number, dateFrom?: string, dateTo?: string): Promise<FinancialAnalysis> {\r\n    let url = `/accounting/financial-analysis/${companyId}`;\r\n    const params = new URLSearchParams();\r\n    \r\n    if (dateFrom) params.append('dateFrom', dateFrom);\r\n    if (dateTo) params.append('dateTo', dateTo);\r\n    \r\n    if (params.toString()) {\r\n      url += `?${params.toString()}`;\r\n    }\r\n    \r\n    const response = await apiService.get(url);\r\n    return response as FinancialAnalysis;\r\n  }\r\n\r\n  // 8. ŠTATISTIKY\r\n\r\n  async getStats(\r\n    companyId: number, \r\n    filters?: {\r\n      year?: number;\r\n      month?: number;\r\n    }\r\n  ): Promise<AccountingStats> {\r\n    const params = new URLSearchParams();\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          params.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n    \r\n    const response = await apiService.get(`/accounting/stats/${companyId}?${params}`);\r\n    return response as AccountingStats;\r\n  }\r\n\r\n  // 8. POMOCNÉ METÓDY\r\n\r\n  formatCurrency(amount: number, currency: string = 'EUR'): string {\r\n    return new Intl.NumberFormat('sk-SK', {\r\n      style: 'currency',\r\n      currency: currency\r\n    }).format(amount);\r\n  }\r\n\r\n  formatDate(date: string): string {\r\n    return new Date(date).toLocaleDateString('sk-SK');\r\n  }\r\n\r\n  getStatusBadge(status: string): { text: string; color: string } {\r\n    const statusMap: Record<string, { text: string; color: string }> = {\r\n      // Vydané faktúry\r\n      draft: { text: 'Koncept', color: 'bg-gray-100 text-gray-800' },\r\n      sent: { text: 'Odoslaná', color: 'bg-blue-100 text-blue-800' },\r\n      paid: { text: 'Zaplatená', color: 'bg-green-100 text-green-800' },\r\n      overdue: { text: 'Po splatnosti', color: 'bg-red-100 text-red-800' },\r\n      cancelled: { text: 'Zrušená', color: 'bg-yellow-100 text-yellow-800' },\r\n      \r\n      // Prijaté faktúry\r\n      received: { text: 'Prijatá', color: 'bg-gray-100 text-gray-800' },\r\n      approved: { text: 'Schválená', color: 'bg-blue-100 text-blue-800' },\r\n      disputed: { text: 'Sporná', color: 'bg-orange-100 text-orange-800' }\r\n    };\r\n\r\n    return statusMap[status] || { text: status, color: 'bg-gray-100 text-gray-800' };\r\n  }\r\n\r\n  getTypeBadge(type: string): { text: string; color: string } {\r\n    const typeMap: Record<string, { text: string; color: string }> = {\r\n      income: { text: 'Príjem', color: 'bg-green-100 text-green-800' },\r\n      expense: { text: 'Výdavok', color: 'bg-red-100 text-red-800' }\r\n    };\r\n\r\n    return typeMap[type] || { text: type, color: 'bg-gray-100 text-gray-800' };\r\n  }\r\n\r\n  // 9. POHODA INTEGRÁCIA\r\n\r\n  // Test POHODA connection\r\n  async testPohodaConnection(companyId: number, settings: Partial<AccountingSettings>): Promise<ApiResponse> {\r\n    return await apiService.post('/accounting/test-pohoda-connection', {\r\n      companyId,\r\n      ...settings\r\n    });\r\n  }\r\n\r\n  // Test POHODA invoices\r\n  async testPohodaInvoices(companyId: number, settings: Partial<AccountingSettings>): Promise<ApiResponse> {\r\n    return await apiService.post('/accounting/test-pohoda-invoices', {\r\n      companyId,\r\n      ...settings\r\n    });\r\n  }\r\n\r\n  // Sync POHODA invoices\r\n  async syncPohodaInvoices(companyId: number, dateFrom?: string, dateTo?: string): Promise<ApiResponse> {\r\n    return await apiService.post(`/accounting/sync-pohoda-invoices/${companyId}`, {\r\n      dateFrom,\r\n      dateTo\r\n    });\r\n  }\r\n\r\n  // 10. XML IMPORT/EXPORT\r\n\r\n  // Upload POHODA XML file\r\n  async uploadPohodaXml(companyId: number, file: File): Promise<ApiResponse> {\r\n    const formData = new FormData();\r\n    formData.append('xmlFile', file);\r\n    \r\n    // Používame fetch priamo pre FormData\r\n    const response = await fetch(`http://localhost:5000/api/accounting/upload-pohoda-xml/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n      },\r\n      body: formData\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri nahrávaní XML súboru');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // Export invoices to POHODA XML format\r\n  async exportPohodaXml(companyId: number, dateFrom?: string, dateTo?: string): Promise<Blob> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/export-pohoda-xml/${companyId}?dateFrom=${dateFrom || ''}&dateTo=${dateTo || ''}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri exporte XML súboru');\r\n    }\r\n    \r\n    return await response.blob();\r\n  }\r\n\r\n\r\n\r\n  // 11. OBNOVENIE FAKTÚR Z MDB\r\n\r\n  // Obnovenie vydaných faktúr z MDB\r\n  async refreshInvoicesFromMdb(companyId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    importedCount: number;\r\n    totalCount: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/refresh-invoices/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri obnovení faktúr z MDB');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // Obnovenie prijatých faktúr z MDB\r\n  async refreshReceivedInvoicesFromMdb(companyId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    importedCount: number;\r\n    totalCount: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/refresh-received-invoices/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri obnovení prijatých faktúr z MDB');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 12. IMPORT FAKTÚR Z MDB\r\n\r\n  // Import vydaných faktúr z MDB\r\n  async importInvoicesFromMdb(companyId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    importedCount: number;\r\n    skippedCount: number;\r\n    totalCount: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/import-invoices/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri importe faktúr z MDB');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 12. MAZANIE POLOŽIEK\r\n\r\n  // Mazanie vydanej faktúry\r\n  async deleteIssuedInvoice(invoiceId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/issued-invoices/${invoiceId}`);\r\n    return response;\r\n  }\r\n\r\n  // Mazanie prijatej faktúry\r\n  async deleteReceivedInvoice(invoiceId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/received-invoices/${invoiceId}`);\r\n    return response;\r\n  }\r\n\r\n  // Mazanie bankovej transakcie\r\n  async deleteBankTransaction(transactionId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/bank-transactions/${transactionId}`);\r\n    return response;\r\n  }\r\n\r\n  // Mazanie pokladničnej transakcie\r\n  async deleteCashTransaction(transactionId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/cash-transactions/${transactionId}`);\r\n    return response;\r\n  }\r\n\r\n  // 13. ADRESÁR FIRIEM Z MDB\r\n\r\n  // Načítanie adresára firiem z MDB\r\n  async getDirectory(companyId: number): Promise<{\r\n    success: boolean;\r\n    company: { ico: string; name: string };\r\n    mdb_file: string;\r\n    companies: Array<{\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n      dic: string;\r\n      address: string;\r\n      postal_code: string;\r\n      city: string;\r\n      phone: string;\r\n      email: string;\r\n      bank_account: string;\r\n      bank_code: string;\r\n    }>;\r\n    total_count: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/directory/${companyId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní adresára');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 14. DPH PODANIA\r\n\r\n  // Načítanie DPH podaní z MDB\r\n  async getVatReturns(companyId: number, year?: number): Promise<{\r\n    company: {\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n    };\r\n    year: number;\r\n    returns: Array<{\r\n      id: number;\r\n      rok: number;\r\n      mesiac: number;\r\n      povinnost: number;\r\n      odpočet: number;\r\n      odoslané: boolean;\r\n    }>;\r\n    summary: {\r\n      totalPovinnost: number;\r\n      totalOdpočet: number;\r\n      totalRozdiel: number;\r\n      odoslanéCount: number;\r\n      neodoslanéCount: number;\r\n    };\r\n  }> {\r\n    const yearParam = year || new Date().getFullYear();\r\n    const response = await fetch(`http://localhost:5000/api/accounting/vat-returns/${companyId}?year=${yearParam}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní DPH podaní');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 15. BANKOVÉ ÚČTY\r\n\r\n  // Načítanie bankových účtov z MDB\r\n  async getBankAccounts(companyId: number): Promise<{\r\n    company: {\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n    };\r\n    accounts: Array<{\r\n      id: number;\r\n      accountNumber: string;\r\n      accountName: string;\r\n      bankName: string;\r\n      balance: number;\r\n      creditTotal: number;\r\n      debitTotal: number;\r\n      transactionCount: number;\r\n    }>;\r\n    summary: {\r\n      totalBalance: number;\r\n      totalCredit: number;\r\n      totalDebit: number;\r\n      accountCount: number;\r\n    };\r\n  }> {\r\n    console.log('🏦 Volám bankový endpoint pre companyId:', companyId);\r\n    \r\n    const response = await fetch(`http://localhost:5000/api/accounting/bank-accounts/${companyId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    console.log('🏦 Bankový endpoint response status:', response.status);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní bankových účtov');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('🏦 Bankový endpoint response data:', data);\r\n    \r\n    return data;\r\n  }\r\n\r\n  // 16. POKLADŇA\r\n\r\n  // Načítanie pokladňových účtov z MDB\r\n  async getCashAccounts(companyId: number): Promise<{\r\n    company: {\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n    };\r\n    accounts: Array<{\r\n      id: number;\r\n      accountNumber: string;\r\n      accountName: string;\r\n      balance: number;\r\n      creditTotal: number;\r\n      debitTotal: number;\r\n      transactionCount: number;\r\n    }>;\r\n    summary: {\r\n      totalBalance: number;\r\n      totalCredit: number;\r\n      totalDebit: number;\r\n      accountCount: number;\r\n    };\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/cash-accounts/${companyId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní pokladňových účtov');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 17. BANKOVÉ TRANSAKCIE\r\n  async getBankTransactions(companyId: number, accountNumber: string): Promise<{\r\n    company: { id: number; name: string; ico: string; };\r\n    account: { accountNumber: string; accountName: string; bankName: string; };\r\n    transactions: Array<{\r\n      id: number; datum: string; popis: string; kredit: number; debet: number; zostatok: number; typ: 'kredit' | 'debet';\r\n    }>;\r\n    summary: {\r\n      totalCredit: number; totalDebit: number; currentBalance: number; transactionCount: number;\r\n    };\r\n  }> {\r\n    console.log('🏦 Volám bankový transakčný endpoint pre companyId:', companyId, 'accountNumber:', accountNumber);\r\n\r\n    const response = await fetch(`http://localhost:5000/api/accounting/bank-transactions/${companyId}/${accountNumber}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    console.log('🏦 Bankový transakčný endpoint response status:', response.status);\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní bankových transakcií');\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('🏦 Bankový transakčný endpoint response data:', data);\r\n\r\n    return data;\r\n  }\r\n\r\n  // 18. POKLADŇOVÉ TRANSAKCIE\r\n  async getCashTransactions(companyId: number, accountNumber: string): Promise<{\r\n    company: { id: number; name: string; ico: string; };\r\n    account: { accountNumber: string; accountName: string; bankName: string; };\r\n    transactions: Array<{\r\n      id: number; datum: string; popis: string; kredit: number; debet: number; zostatok: number; typ: 'kredit' | 'debet';\r\n    }>;\r\n    summary: {\r\n      totalCredit: number; totalDebit: number; currentBalance: number; transactionCount: number;\r\n    };\r\n  }> {\r\n    console.log('💰 Volám pokladňový transakčný endpoint pre companyId:', companyId, 'accountNumber:', accountNumber);\r\n\r\n    const response = await fetch(`http://localhost:5000/api/accounting/cash-transactions/${companyId}/${accountNumber}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    console.log('💰 Pokladňový transakčný endpoint response status:', response.status);\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní pokladňových transakcií');\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('💰 Pokladňový transakčný endpoint response data:', data);\r\n\r\n    return data;\r\n  }\r\n}\r\n\r\nexport const accountingService = new AccountingService();\r\n","import * as React from \"react\";\nfunction PlusIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 4.5v15m7.5-7.5h-15\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PlusIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction BuildingOfficeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 21h16.5M4.5 3h15M5.25 3v18m13.5-18v18M9 6.75h1.5m-1.5 3h1.5m-1.5 3h1.5m3-6H15m-1.5 3H15m-1.5 3H15M9 21v-3.375c0-.621.504-1.125 1.125-1.125h3.75c.621 0 1.125.504 1.125 1.125V21\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(BuildingOfficeIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PencilIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PencilIcon);\nexport default ForwardRef;","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { \r\n  ArrowLeftIcon,\r\n  PlusIcon,\r\n  PencilIcon,\r\n  EyeIcon,\r\n  MagnifyingGlassIcon,\r\n  BuildingOfficeIcon\r\n} from '@heroicons/react/24/outline';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport { accountingService } from '../services/accountingService';\r\n\r\ninterface DirectoryCompany {\r\n  id: number;\r\n  name: string;\r\n  ico: string;\r\n  dic: string;\r\n  address: string;\r\n  city: string;\r\n  postal_code: string;\r\n  phone: string;\r\n  email: string;\r\n  bank_account: string;\r\n  bank_code: string;\r\n}\r\n\r\nconst DirectoryPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [companies, setCompanies] = useState<DirectoryCompany[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [companyId, setCompanyId] = useState(3);\r\n\r\n  useEffect(() => {\r\n    loadDirectory();\r\n  }, [companyId]);\r\n\r\n  const loadDirectory = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await accountingService.getDirectory(companyId);\r\n      setCompanies(data.companies || []);\r\n    } catch (error) {\r\n      console.error('Chyba pri načítaní adresára:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const filteredCompanies = companies.filter(company => \r\n    company.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    company.ico?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    company.dic?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    company.city?.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleEditCompany = (company: DirectoryCompany) => {\r\n    console.log('Editovať firmu:', company);\r\n\r\n    alert(`Editovať firmu: ${company.name}`);\r\n  };\r\n\r\n  const handleDeleteCompany = async (company: DirectoryCompany) => {\r\n    if (!window.confirm(`Naozaj chcete vymazať firmu ${company.name}?`)) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n  \r\n      await loadDirectory();\r\n    } catch (error) {\r\n      console.error('Chyba pri mazaní firmy:', error);\r\n      alert('Chyba pri mazaní firmy');\r\n    }\r\n  };\r\n\r\n  const handleCreateCompany = () => {\r\n    console.log('Vytvoriť novú firmu');\r\n\r\n    alert('Vytvoriť novú firmu');\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-dark-900\">\r\n      {/* Header s navigáciou späť */}\r\n      <div className=\"bg-white dark:bg-dark-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center justify-between h-16\">\r\n            <div className=\"flex items-center\">\r\n              <button\r\n                onClick={() => navigate('/accounting')}\r\n                className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n              >\r\n                <ArrowLeftIcon className=\"h-4 w-4 mr-2\" />\r\n                Späť na Účtovníctvo\r\n              </button>\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n              <h1 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Adresár</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Hlavný obsah */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n        {/* Hlavička s vyhľadávaním a tlačidlami */}\r\n        <div className=\"bg-white dark:bg-dark-800 shadow rounded-lg mb-6\">\r\n          <div className=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Firmy v adresári</h2>\r\n                <div className=\"relative\">\r\n                  <MagnifyingGlassIcon className=\"h-5 w-5 absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Hľadať firmy...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <button\r\n                  onClick={handleCreateCompany}\r\n                  className=\"inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                >\r\n                  <PlusIcon className=\"h-4 w-4 mr-1\" />\r\n                  Nová firma\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Tabuľka firiem */}\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n              <thead className=\"bg-gray-50 dark:bg-dark-700\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Názov firmy\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    IČO\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    DIČ\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Adresa\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Telefón\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Email\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Bankový účet\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Akcie\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white dark:bg-dark-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                {loading ? (\r\n                  <tr>\r\n                    <td colSpan={8} className=\"px-6 py-4 text-center text-gray-500\">\r\n                      Načítavam firmy...\r\n                    </td>\r\n                  </tr>\r\n                ) : filteredCompanies.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan={8} className=\"px-6 py-4 text-center text-gray-500\">\r\n                      Žiadne firmy neboli nájdené\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  filteredCompanies.map((company) => (\r\n                    <tr key={company.id} className=\"hover:bg-gray-50 dark:hover:bg-dark-700\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\r\n                        <div className=\"flex items-center\">\r\n                          <BuildingOfficeIcon className=\"h-5 w-5 text-gray-400 mr-2\" />\r\n                          {company.name}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                        {company.ico}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                        {company.dic || '-'}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                        {company.address && company.city ? \r\n                          `${company.address}, ${company.postal_code} ${company.city}` : \r\n                          company.address || company.city || '-'\r\n                        }\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                        {company.phone || '-'}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                        {company.email || '-'}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                        {company.bank_account && company.bank_code ? \r\n                          `${company.bank_account}/${company.bank_code}` : \r\n                          company.bank_account || '-'\r\n                        }\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <button\r\n                            onClick={() => handleEditCompany(company)}\r\n                            className=\"text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300\"\r\n                          >\r\n                            <EyeIcon className=\"h-4 w-4\" />\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleEditCompany(company)}\r\n                            className=\"text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-300\"\r\n                          >\r\n                            <PencilIcon className=\"h-4 w-4\" />\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectoryPage;\r\n","import * as React from \"react\";\nfunction ArrowLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowLeftIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction EyeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(EyeIcon);\nexport default ForwardRef;"],"names":["MagnifyingGlassIcon","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","accountingService","getSettings","companyId","apiService","get","concat","saveSettings","settings","post","getPermissions","userEmail","savePermissions","permissions","getAllPermissions","getIssuedInvoices","filters","params","URLSearchParams","entries","forEach","key","value","undefined","append","toString","createIssuedInvoice","invoice","getIssuedInvoiceById","invoiceId","getReceivedInvoices","_ref2","getReceivedInvoiceById","getPudSummary","getFinancialAnalysis","dateFrom","dateTo","url","getStats","_ref3","formatCurrency","amount","currency","arguments","length","Intl","NumberFormat","style","format","formatDate","date","Date","toLocaleDateString","getStatusBadge","status","draft","text","color","sent","paid","overdue","cancelled","received","approved","disputed","getTypeBadge","type","income","expense","testPohodaConnection","_objectSpread","testPohodaInvoices","syncPohodaInvoices","uploadPohodaXml","file","formData","FormData","response","fetch","method","headers","localStorage","getItem","body","ok","Error","json","exportPohodaXml","blob","refreshInvoicesFromMdb","refreshReceivedInvoicesFromMdb","importInvoicesFromMdb","deleteIssuedInvoice","delete","deleteReceivedInvoice","deleteBankTransaction","transactionId","deleteCashTransaction","getDirectory","getVatReturns","year","yearParam","getFullYear","getBankAccounts","console","log","data","getCashAccounts","getBankTransactions","accountNumber","getCashTransactions","PlusIcon","BuildingOfficeIcon","PencilIcon","DirectoryPage","navigate","useNavigate","companies","setCompanies","useState","loading","setLoading","searchTerm","setSearchTerm","setCompanyId","useEffect","loadDirectory","async","error","filteredCompanies","filter","company","_company$name","_company$ico","_company$dic","_company$city","name","toLowerCase","includes","ico","dic","city","handleEditCompany","alert","_jsx","LoadingSpinner","_jsxs","className","children","onClick","ArrowLeftIcon","placeholder","onChange","e","target","handleCreateCompany","colSpan","map","address","postal_code","phone","email","bank_account","bank_code","EyeIcon"],"sourceRoot":""}