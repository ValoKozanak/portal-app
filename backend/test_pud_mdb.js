const ADODB = require('node-adodb');
const path = require('path');

console.log('üîç Testujem napojenie na MDB tabuƒæku pUD...');

const mdbPath = path.join(__dirname, 'zalohy', '2025', '77777777_2025', '77777777_2025.mdb');
console.log('üìÅ MDB cesta:', mdbPath);

const connection = ADODB.open(`Provider=Microsoft.Jet.OLEDB.4.0;Data Source=${mdbPath};`);

async function testPudConnection() {
  try {
    console.log('üîç Prip√°jam sa k MDB...');
    
    // Test 1: Naƒç√≠tanie prv√Ωch 5 z√°znamov z pUD
    console.log('\n1Ô∏è‚É£ Test 1: Naƒç√≠tanie prv√Ωch 5 z√°znamov z pUD...');
    
    const results = await connection.query('SELECT TOP 5 * FROM pUD');
    
    console.log('‚úÖ Naƒç√≠tan√©', results.length, 'z√°znamov z pUD');
    
    if (results.length > 0) {
      console.log('\nüìã Prv√Ω z√°znam:');
      console.log('   ID:', results[0].ID);
      console.log('   Datum:', results[0].Datum);
      console.log('   Kc:', results[0].Kc);
      console.log('   UMD:', results[0].UMD);
      console.log('   UD:', results[0].UD);
      console.log('   Popis:', results[0].Popis);
    }
    
    // Test 2: Poƒçet z√°znamov v pUD
    console.log('\n2Ô∏è‚É£ Test 2: Poƒçet z√°znamov v pUD...');
    
    const countResult = await connection.query('SELECT COUNT(*) as total FROM pUD');
    console.log('‚úÖ Celkov√Ω poƒçet z√°znamov v pUD:', countResult[0].total);
    
    // Test 3: Suma Kc pre √∫ƒçty zaƒç√≠naj√∫ce na 5 (n√°klady)
    console.log('\n3Ô∏è‚É£ Test 3: Suma Kc pre √∫ƒçty zaƒç√≠naj√∫ce na 5 (n√°klady)...');
    
    const expensesResult = await connection.query("SELECT SUM(Kc) as total_expenses, COUNT(*) as count FROM pUD WHERE UMD LIKE '5%'");
    console.log('‚úÖ N√°klady (√∫ƒçty 5):', expensesResult[0].total_expenses || 0, 'Kƒç, poƒçet:', expensesResult[0].count || 0);
    
    // Test 4: Suma Kc pre √∫ƒçty zaƒç√≠naj√∫ce na 6 (v√Ωnosy)
    console.log('\n4Ô∏è‚É£ Test 4: Suma Kc pre √∫ƒçty zaƒç√≠naj√∫ce na 6 (v√Ωnosy)...');
    
    const revenueResult = await connection.query("SELECT SUM(Kc) as total_revenue, COUNT(*) as count FROM pUD WHERE UD LIKE '6%'");
    console.log('‚úÖ V√Ωnosy (√∫ƒçty 6):', revenueResult[0].total_revenue || 0, 'Kƒç, poƒçet:', revenueResult[0].count || 0);
    
    // Test 5: V√Ωpoƒçet zisku/straty
    const expenses = expensesResult[0].total_expenses || 0;
    const revenue = revenueResult[0].total_revenue || 0;
    const profit = revenue - expenses;
    
    console.log('\n5Ô∏è‚É£ Test 5: V√Ωpoƒçet zisku/straty...');
    console.log('‚úÖ Zisk/Strata:', profit, 'Kƒç');
    console.log('‚úÖ Pomer n√°klady/v√Ωnosy:', revenue > 0 ? ((expenses / revenue) * 100).toFixed(2) : 0, '%');
    
    console.log('\n‚úÖ V≈°etky testy √∫spe≈°ne dokonƒçen√©!');
    
  } catch (error) {
    console.error('‚ùå Chyba:', error.message);
  }
}

testPudConnection().then(() => {
  console.log('\n‚úÖ Test dokonƒçen√Ω');
  process.exit(0);
}).catch(error => {
  console.error('‚ùå Chyba:', error);
  process.exit(1);
});
