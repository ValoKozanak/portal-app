const ADODB = require('node-adodb');
const path = require('path');

console.log('üîç Zobrazujem dostupn√© tabuƒæky v MDB...');

const mdbPath = path.join(__dirname, 'zalohy', '2025', '77777777_2025', '77777777_2025.mdb');
console.log('üìÅ MDB cesta:', mdbPath);

const connection = ADODB.open(`Provider=Microsoft.Jet.OLEDB.4.0;Data Source=${mdbPath};`);

async function listTables() {
  try {
    console.log('üîç Prip√°jam sa k MDB...');
    
    // Sk√∫sime jednoduch√Ω query na testovanie pripojenia
    const testQuery = await connection.query('SELECT COUNT(*) as count FROM FA');
    console.log('‚úÖ Pripojenie √∫spe≈°n√©! Poƒçet z√°znamov v FA:', testQuery[0].count);
    
    // Teraz sk√∫sime z√≠ska≈• zoznam tabuliek
    console.log('\nüìã Hƒæad√°m tabuƒæky...');
    
    // Sk√∫sime r√¥zne sp√¥soby z√≠skania zoznamu tabuliek
    try {
      const tables1 = await connection.query("SELECT Name FROM MSysObjects WHERE Type=1 AND Flags=0");
      console.log('‚úÖ Tabuƒæky (sp√¥sob 1):', tables1.map(t => t.Name));
    } catch (e) {
      console.log('‚ùå Sp√¥sob 1 zlyhal:', e.message);
    }
    
    try {
      const tables2 = await connection.query("SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES");
      console.log('‚úÖ Tabuƒæky (sp√¥sob 2):', tables2.map(t => t.TABLE_NAME));
    } catch (e) {
      console.log('‚ùå Sp√¥sob 2 zlyhal:', e.message);
    }
    
    // Sk√∫sime priamo tabuƒæku pUD
    console.log('\nüîç Testujem tabuƒæku pUD...');
    try {
      const pudTest = await connection.query('SELECT TOP 1 * FROM pUD');
      console.log('‚úÖ Tabuƒæka pUD existuje! Poƒçet stƒ∫pcov:', Object.keys(pudTest[0]).length);
      console.log('üìã Stƒ∫pce:', Object.keys(pudTest[0]));
    } catch (e) {
      console.log('‚ùå Tabuƒæka pUD neexistuje alebo je pr√°zdna:', e.message);
    }
    
    // Sk√∫sime in√© mo≈æn√© n√°zvy tabuliek
    const possibleNames = ['pUD', 'PUD', 'Pud', 'pud', 'UD', 'ud', 'Ucty', 'ucty', 'UctyDoklad', 'UctyDoklady'];
    
    console.log('\nüîç Testujem mo≈æn√© n√°zvy tabuliek...');
    for (const name of possibleNames) {
      try {
        const test = await connection.query(`SELECT TOP 1 * FROM [${name}]`);
        console.log(`‚úÖ Tabuƒæka ${name} existuje! Stƒ∫pce:`, Object.keys(test[0]));
      } catch (e) {
        console.log(`‚ùå Tabuƒæka ${name} neexistuje`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Chyba pri pripojen√≠:', error.message);
  }
}

listTables().then(() => {
  console.log('\n‚úÖ Kontrola dokonƒçen√°');
  process.exit(0);
}).catch(error => {
  console.error('‚ùå Chyba:', error);
  process.exit(1);
});
