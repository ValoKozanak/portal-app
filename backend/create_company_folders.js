const sqlite3 = require('sqlite3').verbose();
const path = require('path');
const fs = require('fs');

const mainDbPath = path.join(__dirname, 'portal.db');
const zalohyDir = path.join(__dirname, 'zalohy', '2025');

console.log('üìÅ Vytv√°ram zlo≈æky pre firmy v:', zalohyDir);

// Vytvorenie hlavn√©ho adres√°ra ak neexistuje
if (!fs.existsSync(zalohyDir)) {
  fs.mkdirSync(zalohyDir, { recursive: true });
  console.log('‚úÖ Vytvoren√Ω adres√°r:', zalohyDir);
}

const mainDb = new sqlite3.Database(mainDbPath);

mainDb.all("SELECT id, name, ico FROM companies WHERE ico IS NOT NULL AND ico != ''", (err, companies) => {
  if (err) {
    console.error('‚ùå Chyba pri ƒç√≠tan√≠ firiem:', err);
    return;
  }
  
  console.log(`\nüìä Na≈°iel som ${companies.length} firiem s IƒåO`);
  
  let createdCount = 0;
  let existingCount = 0;
  
  companies.forEach(company => {
    if (company.ico) {
      // Vytvorenie n√°zvu zlo≈æky v form√°te ICO_rok
      const currentYear = new Date().getFullYear();
      const folderName = `${company.ico}_${currentYear}`;
      const folderPath = path.join(zalohyDir, folderName);
      
      if (!fs.existsSync(folderPath)) {
        fs.mkdirSync(folderPath, { recursive: true });
        console.log(`‚úÖ Vytvoren√° zlo≈æka: ${folderName} (${company.name})`);
        createdCount++;
      } else {
        console.log(`‚ÑπÔ∏è  Zlo≈æka u≈æ existuje: ${folderName} (${company.name})`);
        existingCount++;
      }
    }
  });
  
  console.log(`\nüìä S√∫hrn:`);
  console.log(`   - Vytvoren√Ωch zlo≈æiek: ${createdCount}`);
  console.log(`   - Existuj√∫cich zlo≈æiek: ${existingCount}`);
  console.log(`   - Celkovo: ${createdCount + existingCount}`);
  
  mainDb.close();
});

