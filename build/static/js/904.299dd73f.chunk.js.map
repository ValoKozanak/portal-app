{"version":3,"file":"static/js/904.299dd73f.chunk.js","mappings":"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","sources":["services/accountingService.ts","../node_modules/@heroicons/react/24/outline/esm/CheckCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/CalendarIcon.js","../node_modules/@heroicons/react/24/outline/esm/CurrencyEuroIcon.js","../node_modules/@heroicons/react/24/outline/esm/XCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/ArrowLeftIcon.js","pages/VatReturnsPage.tsx"],"sourcesContent":["import { apiService, ApiResponse } from './apiService';\r\n\r\n// ===== ÚČTOVNÍCTVO SERVICE =====\r\n\r\nexport interface AccountingSettings {\r\n  id?: number;\r\n  company_id: number;\r\n  pohoda_enabled: boolean;\r\n  pohoda_url?: string;\r\n  pohoda_username?: string;\r\n  pohoda_password?: string;\r\n  pohoda_ico?: string;\r\n  pohoda_year?: string;\r\n  auto_sync: boolean;\r\n  sync_frequency: 'hourly' | 'daily' | 'weekly' | 'manual';\r\n  last_sync?: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport interface AccountingPermissions {\r\n  id?: number;\r\n  user_email: string;\r\n  company_id: number;\r\n  can_view_invoices: boolean;\r\n  can_create_invoices: boolean;\r\n  can_edit_invoices: boolean;\r\n  can_delete_invoices: boolean;\r\n  can_view_bank: boolean;\r\n  can_edit_bank: boolean;\r\n  can_view_cash: boolean;\r\n  can_edit_cash: boolean;\r\n  can_view_reports: boolean;\r\n  can_export_data: boolean;\r\n  can_manage_settings: boolean;\r\n  granted_by: string;\r\n  granted_at?: string;\r\n}\r\n\r\nexport interface FinancialAnalysis {\r\n  expenses: {\r\n    total: number;\r\n    count: number;\r\n    details: Array<{\r\n      account: string;\r\n      account_name: string;\r\n      amount: number;\r\n      count: number;\r\n    }>;\r\n  };\r\n  revenue: {\r\n    total: number;\r\n    count: number;\r\n    details: Array<{\r\n      account: string;\r\n      account_name: string;\r\n      amount: number;\r\n      count: number;\r\n    }>;\r\n  };\r\n  profit: number;\r\n  isProfit: boolean;\r\n  filters?: {\r\n    dateFrom: string | null;\r\n    dateTo: string | null;\r\n  };\r\n}\r\n\r\nexport interface InvoiceItem {\r\n  id?: number;\r\n  description: string;\r\n  quantity: number;\r\n  unit_price: number;\r\n  vat_rate: number;\r\n  total_price: number;\r\n  vat_amount: number;\r\n  unit?: string;\r\n}\r\n\r\nexport interface IssuedInvoice {\r\n  id?: number;\r\n  company_id: number;\r\n  invoice_number: string;\r\n  customer_name: string;\r\n  customer_ico?: string;\r\n  customer_dic?: string;\r\n  customer_address?: string;\r\n  issue_date: string;\r\n  due_date: string;\r\n  total_amount: number;\r\n  vat_amount: number;\r\n  \r\n  // MDB polia - základy DPH\r\n  kc0?: number;\r\n  kc1?: number;\r\n  kc2?: number;\r\n  kc3?: number;\r\n  \r\n  // MDB polia - DPH\r\n  kc_dph1?: number;\r\n  kc_dph2?: number;\r\n  kc_dph3?: number;\r\n  \r\n  // MDB polia - celkové sumy\r\n  kc_celkem?: number;\r\n  \r\n  // MDB polia - ďalšie informácie\r\n  var_sym?: string;\r\n  s_text?: string;\r\n  mdb_id?: number;\r\n  rel_tp_fak?: number;\r\n  datum?: string;\r\n  dat_splat?: string;\r\n  firma?: string;\r\n  ico?: string;\r\n  dic?: string;\r\n  ulice?: string;\r\n  psc?: string;\r\n  obec?: string;\r\n  mdb_cislo?: string;\r\n  \r\n  // MDB polia - likvidácia a platby\r\n  kc_likv?: number;\r\n  kc_u?: number;\r\n  dat_likv?: string;\r\n  \r\n  currency: string;\r\n  status: 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled';\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  items?: InvoiceItem[];\r\n}\r\n\r\nexport interface ReceivedInvoice {\r\n  id?: number;\r\n  company_id: number;\r\n  invoice_number: string;\r\n  supplier_name: string;\r\n  supplier_ico?: string;\r\n  supplier_dic?: string;\r\n  supplier_address?: string;\r\n  issue_date: string;\r\n  due_date: string;\r\n  total_amount: number;\r\n  vat_amount: number;\r\n  \r\n  // MDB polia - základy DPH\r\n  kc0?: number;\r\n  kc1?: number;\r\n  kc2?: number;\r\n  kc3?: number;\r\n  \r\n  // MDB polia - DPH\r\n  kc_dph1?: number;\r\n  kc_dph2?: number;\r\n  kc_dph3?: number;\r\n  \r\n  // MDB polia - celkové sumy\r\n  kc_celkem?: number;\r\n  \r\n  // MDB polia - ďalšie informácie\r\n  var_sym?: string;\r\n  s_text?: string;\r\n  mdb_id?: number;\r\n  rel_tp_fak?: number;\r\n  datum?: string;\r\n  dat_splat?: string;\r\n  firma?: string;\r\n  ico?: string;\r\n  dic?: string;\r\n  ulice?: string;\r\n  psc?: string;\r\n  obec?: string;\r\n  mdb_cislo?: string;\r\n  \r\n  // MDB polia - likvidácia a platby\r\n  kc_likv?: number;\r\n  kc_u?: number;\r\n  dat_likv?: string;\r\n  \r\n  currency: string;\r\n  status: 'received' | 'approved' | 'paid' | 'overdue' | 'disputed';\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  items?: InvoiceItem[];\r\n}\r\n\r\nexport interface BankTransaction {\r\n  id?: number;\r\n  company_id: number;\r\n  transaction_date: string;\r\n  description: string;\r\n  amount: number;\r\n  currency: string;\r\n  type: 'income' | 'expense';\r\n  category?: string;\r\n  bank_account?: string;\r\n  reference?: string;\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport interface CashTransaction {\r\n  id?: number;\r\n  company_id: number;\r\n  transaction_date: string;\r\n  description: string;\r\n  amount: number;\r\n  currency: string;\r\n  type: 'income' | 'expense';\r\n  category?: string;\r\n  receipt_number?: string;\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\n\r\n\r\nexport interface AccountingStats {\r\n  issued_invoices: {\r\n    total_count: number;\r\n    total_amount: number;\r\n    paid_amount: number;\r\n    overdue_amount: number;\r\n  };\r\n  received_invoices: {\r\n    total_count: number;\r\n    total_amount: number;\r\n    paid_amount: number;\r\n    overdue_amount: number;\r\n  };\r\n  bank: {\r\n    total_income: number;\r\n    total_expense: number;\r\n  };\r\n  cash: {\r\n    total_income: number;\r\n    total_expense: number;\r\n  };\r\n}\r\n\r\nexport class AccountingService {\r\n  // 1. NASTAVENIA ÚČTOVNÍCTVA\r\n\r\n    async getSettings(companyId: number): Promise<AccountingSettings> {\r\n    const response = await apiService.get(`/accounting/settings/${companyId}`); \r\n    return response as AccountingSettings;\r\n  }\r\n\r\n  async saveSettings(companyId: number, settings: Partial<AccountingSettings>): Promise<any> {\r\n    const response = await apiService.post(`/accounting/settings/${companyId}`, settings);\r\n    return response;\r\n  }\r\n\r\n  // 2. PRÁVA PRE ÚČTOVNÍCTVO\r\n\r\n  async getPermissions(companyId: number, userEmail: string): Promise<AccountingPermissions> {\r\n    const response = await apiService.get(`/accounting/permissions/${companyId}/${userEmail}`);\r\n    return response as AccountingPermissions;\r\n  }\r\n\r\n  async savePermissions(companyId: number, permissions: Partial<AccountingPermissions>): Promise<any> {\r\n    const response = await apiService.post(`/accounting/permissions/${companyId}`, permissions);\r\n    return response;\r\n  }\r\n\r\n  async getAllPermissions(companyId: number): Promise<AccountingPermissions[]> {\r\n    const response = await apiService.get(`/accounting/permissions/${companyId}`);\r\n    return response as AccountingPermissions[];\r\n  }\r\n\r\n  // 3. VYDANÉ FAKTÚRY\r\n\r\n  async getIssuedInvoices(\r\n    companyId: number, \r\n    filters?: {\r\n      status?: string;\r\n      date_from?: string;\r\n      date_to?: string;\r\n      limit?: number;\r\n      offset?: number;\r\n    }\r\n  ): Promise<IssuedInvoice[]> {\r\n    const params = new URLSearchParams();\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          params.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n    \r\n    const response = await apiService.get(`/accounting/issued-invoices/${companyId}?${params}`);\r\n    return response as IssuedInvoice[];\r\n  }\r\n\r\n  async createIssuedInvoice(companyId: number, invoice: Partial<IssuedInvoice>): Promise<any> {\r\n    const response = await apiService.post(`/accounting/issued-invoices/${companyId}`, invoice);\r\n    return response;\r\n  }\r\n\r\n  async getIssuedInvoiceById(invoiceId: number): Promise<IssuedInvoice> {\r\n    const response = await apiService.get(`/accounting/issued-invoices/detail/${invoiceId}`);\r\n    return response as IssuedInvoice;\r\n  }\r\n\r\n\r\n\r\n  // 4. PRIJATÉ FAKTÚRY\r\n\r\n  async getReceivedInvoices(\r\n    companyId: number, \r\n    filters?: {\r\n      status?: string;\r\n      date_from?: string;\r\n      date_to?: string;\r\n      limit?: number;\r\n      offset?: number;\r\n    }\r\n  ): Promise<ReceivedInvoice[]> {\r\n    const params = new URLSearchParams();\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          params.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n    \r\n    const response = await apiService.get(`/accounting/received-invoices/${companyId}?${params}`);\r\n    return response as ReceivedInvoice[];\r\n  }\r\n\r\n  async getReceivedInvoiceById(invoiceId: number): Promise<ReceivedInvoice> {\r\n    const response = await apiService.get(`/accounting/received-invoices/detail/${invoiceId}`);\r\n    return response as ReceivedInvoice;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // 7. HOSPODÁRSKE VÝSLEDKY (pUD)\r\n\r\n  async getPudSummary(companyId: number): Promise<{ total_kc: number; total_count: number }> {\r\n    const response = await apiService.get(`/accounting/pud-summary/${companyId}`);\r\n    return response as { total_kc: number; total_count: number };\r\n  }\r\n\r\n  // Získanie podrobnej analýzy nákladov a výnosov\r\n  async getFinancialAnalysis(companyId: number, dateFrom?: string, dateTo?: string): Promise<FinancialAnalysis> {\r\n    let url = `/accounting/financial-analysis/${companyId}`;\r\n    const params = new URLSearchParams();\r\n    \r\n    if (dateFrom) params.append('dateFrom', dateFrom);\r\n    if (dateTo) params.append('dateTo', dateTo);\r\n    \r\n    if (params.toString()) {\r\n      url += `?${params.toString()}`;\r\n    }\r\n    \r\n    const response = await apiService.get(url);\r\n    return response as FinancialAnalysis;\r\n  }\r\n\r\n  // 8. ŠTATISTIKY\r\n\r\n  async getStats(\r\n    companyId: number, \r\n    filters?: {\r\n      year?: number;\r\n      month?: number;\r\n    }\r\n  ): Promise<AccountingStats> {\r\n    const params = new URLSearchParams();\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          params.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n    \r\n    const response = await apiService.get(`/accounting/stats/${companyId}?${params}`);\r\n    return response as AccountingStats;\r\n  }\r\n\r\n  // 8. POMOCNÉ METÓDY\r\n\r\n  formatCurrency(amount: number, currency: string = 'EUR'): string {\r\n    return new Intl.NumberFormat('sk-SK', {\r\n      style: 'currency',\r\n      currency: currency\r\n    }).format(amount);\r\n  }\r\n\r\n  formatDate(date: string): string {\r\n    return new Date(date).toLocaleDateString('sk-SK');\r\n  }\r\n\r\n  getStatusBadge(status: string): { text: string; color: string } {\r\n    const statusMap: Record<string, { text: string; color: string }> = {\r\n      // Vydané faktúry\r\n      draft: { text: 'Koncept', color: 'bg-gray-100 text-gray-800' },\r\n      sent: { text: 'Odoslaná', color: 'bg-blue-100 text-blue-800' },\r\n      paid: { text: 'Zaplatená', color: 'bg-green-100 text-green-800' },\r\n      overdue: { text: 'Po splatnosti', color: 'bg-red-100 text-red-800' },\r\n      cancelled: { text: 'Zrušená', color: 'bg-yellow-100 text-yellow-800' },\r\n      \r\n      // Prijaté faktúry\r\n      received: { text: 'Prijatá', color: 'bg-gray-100 text-gray-800' },\r\n      approved: { text: 'Schválená', color: 'bg-blue-100 text-blue-800' },\r\n      disputed: { text: 'Sporná', color: 'bg-orange-100 text-orange-800' }\r\n    };\r\n\r\n    return statusMap[status] || { text: status, color: 'bg-gray-100 text-gray-800' };\r\n  }\r\n\r\n  getTypeBadge(type: string): { text: string; color: string } {\r\n    const typeMap: Record<string, { text: string; color: string }> = {\r\n      income: { text: 'Príjem', color: 'bg-green-100 text-green-800' },\r\n      expense: { text: 'Výdavok', color: 'bg-red-100 text-red-800' }\r\n    };\r\n\r\n    return typeMap[type] || { text: type, color: 'bg-gray-100 text-gray-800' };\r\n  }\r\n\r\n  // 9. POHODA INTEGRÁCIA\r\n\r\n  // Test POHODA connection\r\n  async testPohodaConnection(companyId: number, settings: Partial<AccountingSettings>): Promise<ApiResponse> {\r\n    return await apiService.post('/accounting/test-pohoda-connection', {\r\n      companyId,\r\n      ...settings\r\n    });\r\n  }\r\n\r\n  // Test POHODA invoices\r\n  async testPohodaInvoices(companyId: number, settings: Partial<AccountingSettings>): Promise<ApiResponse> {\r\n    return await apiService.post('/accounting/test-pohoda-invoices', {\r\n      companyId,\r\n      ...settings\r\n    });\r\n  }\r\n\r\n  // Sync POHODA invoices\r\n  async syncPohodaInvoices(companyId: number, dateFrom?: string, dateTo?: string): Promise<ApiResponse> {\r\n    return await apiService.post(`/accounting/sync-pohoda-invoices/${companyId}`, {\r\n      dateFrom,\r\n      dateTo\r\n    });\r\n  }\r\n\r\n  // 10. XML IMPORT/EXPORT\r\n\r\n  // Upload POHODA XML file\r\n  async uploadPohodaXml(companyId: number, file: File): Promise<ApiResponse> {\r\n    const formData = new FormData();\r\n    formData.append('xmlFile', file);\r\n    \r\n    // Používame fetch priamo pre FormData\r\n    const response = await fetch(`http://localhost:5000/api/accounting/upload-pohoda-xml/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n      },\r\n      body: formData\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri nahrávaní XML súboru');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // Export invoices to POHODA XML format\r\n  async exportPohodaXml(companyId: number, dateFrom?: string, dateTo?: string): Promise<Blob> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/export-pohoda-xml/${companyId}?dateFrom=${dateFrom || ''}&dateTo=${dateTo || ''}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri exporte XML súboru');\r\n    }\r\n    \r\n    return await response.blob();\r\n  }\r\n\r\n\r\n\r\n  // 11. OBNOVENIE FAKTÚR Z MDB\r\n\r\n  // Obnovenie vydaných faktúr z MDB\r\n  async refreshInvoicesFromMdb(companyId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    importedCount: number;\r\n    totalCount: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/refresh-invoices/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri obnovení faktúr z MDB');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // Obnovenie prijatých faktúr z MDB\r\n  async refreshReceivedInvoicesFromMdb(companyId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    importedCount: number;\r\n    totalCount: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/refresh-received-invoices/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri obnovení prijatých faktúr z MDB');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 12. IMPORT FAKTÚR Z MDB\r\n\r\n  // Import vydaných faktúr z MDB\r\n  async importInvoicesFromMdb(companyId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    importedCount: number;\r\n    skippedCount: number;\r\n    totalCount: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/import-invoices/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri importe faktúr z MDB');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 12. MAZANIE POLOŽIEK\r\n\r\n  // Mazanie vydanej faktúry\r\n  async deleteIssuedInvoice(invoiceId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/issued-invoices/${invoiceId}`);\r\n    return response;\r\n  }\r\n\r\n  // Mazanie prijatej faktúry\r\n  async deleteReceivedInvoice(invoiceId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/received-invoices/${invoiceId}`);\r\n    return response;\r\n  }\r\n\r\n  // Mazanie bankovej transakcie\r\n  async deleteBankTransaction(transactionId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/bank-transactions/${transactionId}`);\r\n    return response;\r\n  }\r\n\r\n  // Mazanie pokladničnej transakcie\r\n  async deleteCashTransaction(transactionId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/cash-transactions/${transactionId}`);\r\n    return response;\r\n  }\r\n\r\n  // 13. ADRESÁR FIRIEM Z MDB\r\n\r\n  // Načítanie adresára firiem z MDB\r\n  async getDirectory(companyId: number): Promise<{\r\n    success: boolean;\r\n    company: { ico: string; name: string };\r\n    mdb_file: string;\r\n    companies: Array<{\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n      dic: string;\r\n      address: string;\r\n      postal_code: string;\r\n      city: string;\r\n      phone: string;\r\n      email: string;\r\n      bank_account: string;\r\n      bank_code: string;\r\n    }>;\r\n    total_count: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/directory/${companyId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní adresára');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 14. DPH PODANIA\r\n\r\n  // Načítanie DPH podaní z MDB\r\n  async getVatReturns(companyId: number, year?: number): Promise<{\r\n    company: {\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n    };\r\n    year: number;\r\n    returns: Array<{\r\n      id: number;\r\n      rok: number;\r\n      mesiac: number;\r\n      povinnost: number;\r\n      odpočet: number;\r\n      odoslané: boolean;\r\n    }>;\r\n    summary: {\r\n      totalPovinnost: number;\r\n      totalOdpočet: number;\r\n      totalRozdiel: number;\r\n      odoslanéCount: number;\r\n      neodoslanéCount: number;\r\n    };\r\n  }> {\r\n    const yearParam = year || new Date().getFullYear();\r\n    const response = await fetch(`http://localhost:5000/api/accounting/vat-returns/${companyId}?year=${yearParam}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní DPH podaní');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 15. BANKOVÉ ÚČTY\r\n\r\n  // Načítanie bankových účtov z MDB\r\n  async getBankAccounts(companyId: number): Promise<{\r\n    company: {\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n    };\r\n    accounts: Array<{\r\n      id: number;\r\n      accountNumber: string;\r\n      accountName: string;\r\n      bankName: string;\r\n      balance: number;\r\n      creditTotal: number;\r\n      debitTotal: number;\r\n      transactionCount: number;\r\n    }>;\r\n    summary: {\r\n      totalBalance: number;\r\n      totalCredit: number;\r\n      totalDebit: number;\r\n      accountCount: number;\r\n    };\r\n  }> {\r\n    console.log('🏦 Volám bankový endpoint pre companyId:', companyId);\r\n    \r\n    const response = await fetch(`http://localhost:5000/api/accounting/bank-accounts/${companyId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    console.log('🏦 Bankový endpoint response status:', response.status);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní bankových účtov');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('🏦 Bankový endpoint response data:', data);\r\n    \r\n    return data;\r\n  }\r\n\r\n  // 16. POKLADŇA\r\n\r\n  // Načítanie pokladňových účtov z MDB\r\n  async getCashAccounts(companyId: number): Promise<{\r\n    company: {\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n    };\r\n    accounts: Array<{\r\n      id: number;\r\n      accountNumber: string;\r\n      accountName: string;\r\n      balance: number;\r\n      creditTotal: number;\r\n      debitTotal: number;\r\n      transactionCount: number;\r\n    }>;\r\n    summary: {\r\n      totalBalance: number;\r\n      totalCredit: number;\r\n      totalDebit: number;\r\n      accountCount: number;\r\n    };\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/cash-accounts/${companyId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní pokladňových účtov');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 17. BANKOVÉ TRANSAKCIE\r\n  async getBankTransactions(companyId: number, accountNumber: string): Promise<{\r\n    company: { id: number; name: string; ico: string; };\r\n    account: { accountNumber: string; accountName: string; bankName: string; };\r\n    transactions: Array<{\r\n      id: number; datum: string; popis: string; kredit: number; debet: number; zostatok: number; typ: 'kredit' | 'debet';\r\n    }>;\r\n    summary: {\r\n      totalCredit: number; totalDebit: number; currentBalance: number; transactionCount: number;\r\n    };\r\n  }> {\r\n    console.log('🏦 Volám bankový transakčný endpoint pre companyId:', companyId, 'accountNumber:', accountNumber);\r\n\r\n    const response = await fetch(`http://localhost:5000/api/accounting/bank-transactions/${companyId}/${accountNumber}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    console.log('🏦 Bankový transakčný endpoint response status:', response.status);\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní bankových transakcií');\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('🏦 Bankový transakčný endpoint response data:', data);\r\n\r\n    return data;\r\n  }\r\n\r\n  // 18. POKLADŇOVÉ TRANSAKCIE\r\n  async getCashTransactions(companyId: number, accountNumber: string): Promise<{\r\n    company: { id: number; name: string; ico: string; };\r\n    account: { accountNumber: string; accountName: string; bankName: string; };\r\n    transactions: Array<{\r\n      id: number; datum: string; popis: string; kredit: number; debet: number; zostatok: number; typ: 'kredit' | 'debet';\r\n    }>;\r\n    summary: {\r\n      totalCredit: number; totalDebit: number; currentBalance: number; transactionCount: number;\r\n    };\r\n  }> {\r\n    console.log('💰 Volám pokladňový transakčný endpoint pre companyId:', companyId, 'accountNumber:', accountNumber);\r\n\r\n    const response = await fetch(`http://localhost:5000/api/accounting/cash-transactions/${companyId}/${accountNumber}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    console.log('💰 Pokladňový transakčný endpoint response status:', response.status);\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní pokladňových transakcií');\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('💰 Pokladňový transakčný endpoint response data:', data);\r\n\r\n    return data;\r\n  }\r\n}\r\n\r\nexport const accountingService = new AccountingService();\r\n","import * as React from \"react\";\nfunction CheckCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CalendarIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CalendarIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CurrencyEuroIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M14.25 7.756a4.5 4.5 0 1 0 0 8.488M7.5 10.5h5.25m-5.25 3h5.25M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CurrencyEuroIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction XCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(XCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowLeftIcon);\nexport default ForwardRef;","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { \r\n  ArrowLeftIcon, \r\n  CheckCircleIcon, \r\n  XCircleIcon,\r\n  CalendarIcon,\r\n  CurrencyEuroIcon\r\n} from '@heroicons/react/24/outline';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\nimport { accountingService } from '../services/accountingService';\r\n\r\ninterface VatReturn {\r\n  id: number;\r\n  rok: number;\r\n  mesiac: number;\r\n  povinnost: number;\r\n  odpočet: number;\r\n  odoslané: boolean;\r\n}\r\n\r\ninterface VatData {\r\n  company: {\r\n    id: number;\r\n    name: string;\r\n    ico: string;\r\n  };\r\n  year: number;\r\n  returns: VatReturn[];\r\n  summary: {\r\n    totalPovinnost: number;\r\n    totalOdpočet: number;\r\n    totalRozdiel: number;\r\n    odoslanéCount: number;\r\n    neodoslanéCount: number;\r\n  };\r\n}\r\n\r\nconst VatReturnsPage: React.FC = () => {\r\n  const { companyId } = useParams<{ companyId: string }>();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [vatData, setVatData] = useState<VatData | null>(null);\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  \r\n  const [userRole] = useLocalStorage<'admin' | 'accountant' | 'user' | 'employee' | null>('userRole', null);\r\n\r\n  useEffect(() => {\r\n    if (companyId) {\r\n      loadVatReturns();\r\n    }\r\n  }, [companyId, selectedYear]);\r\n\r\n  const loadVatReturns = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const data = await accountingService.getVatReturns(Number(companyId), selectedYear);\r\n      setVatData(data);\r\n    } catch (error) {\r\n      console.error('Chyba pri načítaní DPH podaní:', error);\r\n      setError('Chyba pri načítaní DPH podaní');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('sk-SK', {\r\n      style: 'currency',\r\n      currency: 'EUR'\r\n    }).format(amount);\r\n  };\r\n\r\n  const getMonthName = (month: number) => {\r\n    const months = [\r\n      'Január', 'Február', 'Marec', 'Apríl', 'Máj', 'Jún',\r\n      'Júl', 'August', 'September', 'Október', 'November', 'December'\r\n    ];\r\n    return months[month - 1] || `Mesiac ${month}`;\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    loadVatReturns();\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 dark:bg-dark-900\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n          <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md p-4\">\r\n            <div className=\"flex\">\r\n              <XCircleIcon className=\"h-5 w-5 text-red-400\" />\r\n              <div className=\"ml-3\">\r\n                <h3 className=\"text-sm font-medium text-red-800 dark:text-red-200\">\r\n                  Chyba\r\n                </h3>\r\n                <div className=\"mt-2 text-sm text-red-700 dark:text-red-300\">\r\n                  {error}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-dark-900\">\r\n      {/* Header */}\r\n      <div className=\"bg-white dark:bg-dark-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center justify-between h-16\">\r\n            <div className=\"flex items-center\">\r\n              <button\r\n                onClick={() => navigate('/accounting')}\r\n                className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n              >\r\n                <ArrowLeftIcon className=\"h-4 w-4 mr-2\" />\r\n                Späť na Účtovníctvo\r\n              </button>\r\n            </div>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <h1 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                DPH podania - {vatData?.company?.name}\r\n              </h1>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <CalendarIcon className=\"h-5 w-5 text-gray-400\" />\r\n                <select\r\n                  value={selectedYear}\r\n                  onChange={(e) => setSelectedYear(Number(e.target.value))}\r\n                  className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                >\r\n                  {Array.from({ length: 5 }, (_, i) => new Date().getFullYear() - i).map(year => (\r\n                    <option key={year} value={year}>{year}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <button\r\n                onClick={handleRefresh}\r\n                className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n              >\r\n                Obnoviť\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Hlavný obsah */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n        {vatData && (\r\n          <>\r\n            {/* Súhrn */}\r\n            <div className=\"bg-white dark:bg-dark-800 rounded-lg shadow p-6 mb-6\">\r\n              <h2 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\r\n                Súhrn za rok {selectedYear}\r\n              </h2>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n                <div className=\"bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg\">\r\n                  <div className=\"flex items-center\">\r\n                    <CurrencyEuroIcon className=\"h-8 w-8 text-blue-500\" />\r\n                    <div className=\"ml-3\">\r\n                      <p className=\"text-sm font-medium text-blue-600 dark:text-blue-400\">Celková povinnosť</p>\r\n                      <p className=\"text-2xl font-bold text-blue-900 dark:text-blue-100\">\r\n                        {formatCurrency(vatData.summary.totalPovinnost)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bg-green-50 dark:bg-green-900/20 p-4 rounded-lg\">\r\n                  <div className=\"flex items-center\">\r\n                    <CurrencyEuroIcon className=\"h-8 w-8 text-green-500\" />\r\n                    <div className=\"ml-3\">\r\n                      <p className=\"text-sm font-medium text-green-600 dark:text-green-400\">Celkový odpočet</p>\r\n                      <p className=\"text-2xl font-bold text-green-900 dark:text-green-100\">\r\n                        {formatCurrency(vatData.summary.totalOdpočet)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bg-purple-50 dark:bg-purple-900/20 p-4 rounded-lg\">\r\n                  <div className=\"flex items-center\">\r\n                    <CurrencyEuroIcon className=\"h-8 w-8 text-purple-500\" />\r\n                    <div className=\"ml-3\">\r\n                      <p className=\"text-sm font-medium text-purple-600 dark:text-purple-400\">Rozdiel</p>\r\n                      <p className={`text-2xl font-bold ${vatData.summary.totalRozdiel < 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'}`}>\r\n                        {vatData.summary.totalRozdiel < 0 ? '+' : '-'}{formatCurrency(Math.abs(vatData.summary.totalRozdiel))}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bg-yellow-50 dark:bg-yellow-900/20 p-4 rounded-lg\">\r\n                  <div className=\"flex items-center\">\r\n                    <CheckCircleIcon className=\"h-8 w-8 text-yellow-500\" />\r\n                    <div className=\"ml-3\">\r\n                      <p className=\"text-sm font-medium text-yellow-600 dark:text-yellow-400\">Odoslané</p>\r\n                      <p className=\"text-2xl font-bold text-yellow-900 dark:text-yellow-100\">\r\n                        {vatData.summary.odoslanéCount}/{vatData.summary.odoslanéCount + vatData.summary.neodoslanéCount}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Tabuľka DPH podaní */}\r\n            <div className=\"bg-white dark:bg-dark-800 rounded-lg shadow\">\r\n              <div className=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\">\r\n                <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n                  DPH podania za rok {selectedYear}\r\n                </h3>\r\n              </div>\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                  <thead className=\"bg-gray-50 dark:bg-gray-800\">\r\n                    <tr>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                        Mesiac\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                        Povinnosť DPH\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                        Odpočet DPH\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                        Rozdiel\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                        Status\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white dark:bg-dark-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                    {vatData.returns.map((vatReturn) => (\r\n                      <tr key={vatReturn.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\r\n                          {getMonthName(vatReturn.mesiac)}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                          {formatCurrency(vatReturn.povinnost)}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                          {formatCurrency(vatReturn.odpočet)}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                          <span className={`font-medium ${vatReturn.povinnost - vatReturn.odpočet < 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'}`}>\r\n                            {vatReturn.povinnost - vatReturn.odpočet < 0 ? '+' : '-'}{formatCurrency(Math.abs(vatReturn.povinnost - vatReturn.odpočet))}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                          {vatReturn.odoslané ? (\r\n                            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">\r\n                              <CheckCircleIcon className=\"h-4 w-4 mr-1\" />\r\n                              Odoslané\r\n                            </span>\r\n                          ) : (\r\n                            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\">\r\n                              <XCircleIcon className=\"h-4 w-4 mr-1\" />\r\n                              Neodoslané\r\n                            </span>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VatReturnsPage;\r\n"],"names":["accountingService","getSettings","companyId","apiService","get","concat","saveSettings","settings","post","getPermissions","userEmail","savePermissions","permissions","getAllPermissions","getIssuedInvoices","filters","params","URLSearchParams","Object","entries","forEach","_ref","key","value","undefined","append","toString","createIssuedInvoice","invoice","getIssuedInvoiceById","invoiceId","getReceivedInvoices","_ref2","getReceivedInvoiceById","getPudSummary","getFinancialAnalysis","dateFrom","dateTo","url","getStats","_ref3","formatCurrency","amount","currency","arguments","length","Intl","NumberFormat","style","format","formatDate","date","Date","toLocaleDateString","getStatusBadge","status","draft","text","color","sent","paid","overdue","cancelled","received","approved","disputed","getTypeBadge","type","income","expense","testPohodaConnection","_objectSpread","testPohodaInvoices","syncPohodaInvoices","uploadPohodaXml","file","formData","FormData","response","fetch","method","headers","localStorage","getItem","body","ok","Error","json","exportPohodaXml","blob","refreshInvoicesFromMdb","refreshReceivedInvoicesFromMdb","importInvoicesFromMdb","deleteIssuedInvoice","delete","deleteReceivedInvoice","deleteBankTransaction","transactionId","deleteCashTransaction","getDirectory","getVatReturns","year","yearParam","getFullYear","getBankAccounts","console","log","data","getCashAccounts","getBankTransactions","accountNumber","getCashTransactions","CheckCircleIcon","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","CalendarIcon","CurrencyEuroIcon","XCircleIcon","ArrowLeftIcon","VatReturnsPage","_vatData$company","useParams","navigate","useNavigate","loading","setLoading","useState","error","setError","vatData","setVatData","selectedYear","setSelectedYear","userRole","useLocalStorage","useEffect","loadVatReturns","async","Number","_jsx","LoadingSpinner","className","children","_jsxs","onClick","company","name","onChange","e","target","Array","from","_","i","map","handleRefresh","_Fragment","summary","totalPovinnost","totalOdpočet","totalRozdiel","Math","abs","odoslanéCount","neodoslanéCount","returns","vatReturn","month","mesiac","povinnost","odpočet","odoslané"],"sourceRoot":""}