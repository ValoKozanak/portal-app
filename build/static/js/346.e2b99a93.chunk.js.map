{"version":3,"file":"static/js/346.e2b99a93.chunk.js","mappings":"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","sources":["components/EditProfileModal.tsx","components/CompanyModal.tsx","pages/UserTasksPage.tsx","pages/UserMessagesPage.tsx","pages/UserEmployeesPage.tsx","pages/Dashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { XMarkIcon } from '@heroicons/react/24/outline';\r\n\r\ninterface UserProfile {\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  bio: string;\r\n}\r\n\r\ninterface EditProfileModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSave: (profile: UserProfile) => void;\r\n  currentProfile: UserProfile;\r\n}\r\n\r\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ \r\n  isOpen, \r\n  onClose, \r\n  onSave, \r\n  currentProfile \r\n}) => {\r\n  const [formData, setFormData] = useState<UserProfile>(currentProfile);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n\r\n    // Clear error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Meno je povinné';\r\n    } else if (formData.name.trim().length < 2) {\r\n      newErrors.name = 'Meno musí mať aspoň 2 znaky';\r\n    }\r\n\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = 'Email je povinný';\r\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\r\n      newErrors.email = 'Neplatný formát emailu';\r\n    }\r\n\r\n    if (formData.phone && !/^[+]?[0-9\\s\\-()]{9,}$/.test(formData.phone)) {\r\n      newErrors.phone = 'Neplatný formát telefónneho čísla';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    // Simulácia uloženia profilu\r\n    setTimeout(() => {\r\n      onSave(formData);\r\n      setIsLoading(false);\r\n      onClose();\r\n    }, 1000);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFormData(currentProfile);\r\n    setErrors({});\r\n    onClose();\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4\">\r\n        <div className=\"flex justify-between items-center p-6 border-b\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900\">Upraviť profil</h2>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"text-gray-400 hover:text-gray-600\"\r\n          >\r\n            <XMarkIcon className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"p-6\">\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Meno a priezvisko *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\r\n                  errors.name ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"Zadajte meno a priezvisko\"\r\n              />\r\n              {errors.name && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.name}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Email *\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\r\n                  errors.email ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"pouzivatel@email.sk\"\r\n              />\r\n              {errors.email && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Telefónne číslo\r\n              </label>\r\n              <input\r\n                type=\"tel\"\r\n                id=\"phone\"\r\n                name=\"phone\"\r\n                value={formData.phone}\r\n                onChange={handleInputChange}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\r\n                  errors.phone ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"+421 123 456 789\"\r\n              />\r\n              {errors.phone && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.phone}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"bio\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                O mne\r\n              </label>\r\n              <textarea\r\n                id=\"bio\"\r\n                name=\"bio\"\r\n                value={formData.bio}\r\n                onChange={handleInputChange}\r\n                rows={3}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n                placeholder=\"Napíšte niečo o sebe...\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-6 flex space-x-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleClose}\r\n              className=\"flex-1 px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n            >\r\n              Zrušiť\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"flex-1 bg-primary-600 text-white py-2 px-4 rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isLoading ? 'Ukladám...' : 'Uložiť zmeny'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfileModal;\r\n\r\n","import React, { useState } from 'react';\r\nimport { XMarkIcon } from '@heroicons/react/24/outline';\r\n\r\nimport { Company } from '../services/apiService';\r\n\r\ninterface CompanyFormData {\r\n  id?: number;\r\n  name: string;\r\n  ico: string;\r\n  address: string;\r\n  business_registry: string;\r\n  vat_id: string;\r\n  tax_id: string;\r\n  authorized_person: string;\r\n  contact_phone: string;\r\n  contact_email: string;\r\n  owner_email?: string;\r\n}\r\n\r\ninterface CompanyModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSave: (company: CompanyFormData) => void;\r\n  currentCompany?: Company;\r\n  isEditing?: boolean;\r\n}\r\n\r\nconst CompanyModal: React.FC<CompanyModalProps> = ({ \r\n  isOpen, \r\n  onClose, \r\n  onSave, \r\n  currentCompany,\r\n  isEditing = false\r\n}) => {\r\n  const [formData, setFormData] = useState<CompanyFormData>(\r\n    currentCompany ? {\r\n      id: currentCompany.id,\r\n      name: currentCompany.name,\r\n      ico: currentCompany.ico,\r\n      address: currentCompany.address,\r\n      business_registry: currentCompany.business_registry || '',\r\n      vat_id: currentCompany.vat_id || '',\r\n      tax_id: currentCompany.tax_id || '',\r\n      authorized_person: currentCompany.authorized_person,\r\n      contact_phone: currentCompany.contact_phone || '',\r\n      contact_email: currentCompany.contact_email || ''\r\n    } : {\r\n      name: '',\r\n      ico: '',\r\n      address: '',\r\n      business_registry: '',\r\n      vat_id: '',\r\n      tax_id: '',\r\n      authorized_person: '',\r\n      contact_phone: '',\r\n      contact_email: ''\r\n    }\r\n  );\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n\r\n    // Clear error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Názov firmy je povinný';\r\n    }\r\n\r\n    if (!formData.ico.trim()) {\r\n      newErrors.ico = 'IČO je povinné';\r\n    } else if (!/^\\d{8}$/.test(formData.ico.replace(/\\s/g, ''))) {\r\n      newErrors.ico = 'IČO musí mať 8 číslic';\r\n    }\r\n\r\n    if (!formData.address.trim()) {\r\n      newErrors.address = 'Adresa je povinná';\r\n    }\r\n\r\n    // business_registry nie je povinné v databáze\r\n\r\n    if (formData.vat_id && !/^SK\\d{10}$/.test(formData.vat_id.replace(/\\s/g, ''))) {\r\n      newErrors.vat_id = 'IČ DPH musí mať formát SK + 10 číslic';\r\n    }\r\n\r\n    if (formData.tax_id && !/^\\d{10}$/.test(formData.tax_id.replace(/\\s/g, ''))) {\r\n      newErrors.tax_id = 'DIČ musí mať 10 číslic';\r\n    }\r\n\r\n    if (!formData.authorized_person.trim()) {\r\n      newErrors.authorized_person = 'Osoba oprávnená konať je povinná';\r\n    }\r\n\r\n    if (formData.contact_email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.contact_email)) {\r\n      newErrors.contact_email = 'Neplatný formát emailu';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const companyToSave = {\r\n        ...formData,\r\n        id: currentCompany?.id || undefined\r\n      };\r\n      await onSave(companyToSave);\r\n      setIsLoading(false);\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Chyba pri ukladaní firmy:', error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFormData(currentCompany ? {\r\n      id: currentCompany.id,\r\n      name: currentCompany.name,\r\n      ico: currentCompany.ico,\r\n      address: currentCompany.address,\r\n      business_registry: currentCompany.business_registry || '',\r\n      vat_id: currentCompany.vat_id || '',\r\n      tax_id: currentCompany.tax_id || '',\r\n      authorized_person: currentCompany.authorized_person,\r\n      contact_phone: currentCompany.contact_phone || '',\r\n      contact_email: currentCompany.contact_email || ''\r\n    } : {\r\n      name: '',\r\n      ico: '',\r\n      address: '',\r\n      business_registry: '',\r\n      vat_id: '',\r\n      tax_id: '',\r\n      authorized_person: '',\r\n      contact_phone: '',\r\n      contact_email: ''\r\n    });\r\n    setErrors({});\r\n    onClose();\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex justify-between items-center p-6 border-b\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900\">\r\n            {isEditing ? 'Upraviť firmu' : 'Pridať novú firmu'}\r\n          </h2>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"text-gray-400 hover:text-gray-600\"\r\n          >\r\n            <XMarkIcon className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"p-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            {/* Základné údaje */}\r\n            <div className=\"md:col-span-2\">\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Základné údaje</h3>\r\n            </div>\r\n\r\n            <div className=\"md:col-span-2\">\r\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Názov firmy *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\r\n                  errors.name ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"Názov spoločnosti\"\r\n              />\r\n              {errors.name && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.name}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"ico\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                IČO *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"ico\"\r\n                name=\"ico\"\r\n                value={formData.ico}\r\n                onChange={handleInputChange}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\r\n                  errors.ico ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"12345678\"\r\n                maxLength={8}\r\n              />\r\n              {errors.ico && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.ico}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"business_registry\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Č. obchodného registra *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"business_registry\"\r\n                name=\"business_registry\"\r\n                value={formData.business_registry}\r\n                onChange={handleInputChange}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\r\n                  errors.business_registry ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"12345/A\"\r\n              />\r\n              {errors.business_registry && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.business_registry}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"vat_id\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                IČ DPH\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"vat_id\"\r\n                name=\"vat_id\"\r\n                value={formData.vat_id}\r\n                onChange={handleInputChange}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\r\n                  errors.vat_id ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"SK1234567890\"\r\n              />\r\n              {errors.vat_id && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.vat_id}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"tax_id\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                DIČ\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"tax_id\"\r\n                name=\"tax_id\"\r\n                value={formData.tax_id}\r\n                onChange={handleInputChange}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\r\n                  errors.tax_id ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"1234567890\"\r\n              />\r\n              {errors.tax_id && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.tax_id}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"md:col-span-2\">\r\n              <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Adresa *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"address\"\r\n                name=\"address\"\r\n                value={formData.address}\r\n                onChange={handleInputChange}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\r\n                  errors.address ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"Ulica, PSČ Mesto\"\r\n              />\r\n              {errors.address && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.address}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"md:col-span-2\">\r\n              <label htmlFor=\"authorized_person\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Osoba oprávnená konať v mene firmy *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"authorized_person\"\r\n                name=\"authorized_person\"\r\n                value={formData.authorized_person}\r\n                onChange={handleInputChange}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\r\n                  errors.authorized_person ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"Meno a priezvisko\"\r\n              />\r\n              {errors.authorized_person && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.authorized_person}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Kontaktné údaje */}\r\n            <div className=\"md:col-span-2\">\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4 mt-6\">Kontaktné údaje</h3>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"contact_phone\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Telefón\r\n              </label>\r\n              <input\r\n                type=\"tel\"\r\n                id=\"contact_phone\"\r\n                name=\"contact_phone\"\r\n                value={formData.contact_phone}\r\n                onChange={handleInputChange}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n                placeholder=\"+421 123 456 789\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"contact_email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Email\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"contact_email\"\r\n                name=\"contact_email\"\r\n                value={formData.contact_email}\r\n                onChange={handleInputChange}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\r\n                  errors.contact_email ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"firma@email.sk\"\r\n              />\r\n              {errors.contact_email && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.contact_email}</p>\r\n              )}\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n          <div className=\"mt-6 flex space-x-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleClose}\r\n              className=\"flex-1 px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n            >\r\n              Zrušiť\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"flex-1 bg-primary-600 text-white py-2 px-4 rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isLoading ? 'Ukladám...' : (isEditing ? 'Uložiť zmeny' : 'Pridať firmu')}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyModal;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { \r\n  ArrowLeftIcon,\r\n  PlusIcon,\r\n  CalendarIcon,\r\n  UserIcon,\r\n  ClipboardDocumentListIcon\r\n} from '@heroicons/react/24/outline';\r\nimport TaskModal, { Task } from '../components/TaskModal';\r\nimport { apiService } from '../services/apiService';\r\n\r\ninterface UserTasksPageProps {\r\n  userEmail?: string;\r\n  onBack: () => void;\r\n}\r\n\r\ninterface Company {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nconst UserTasksPage: React.FC<UserTasksPageProps> = ({ \r\n  userEmail = 'user@portal.sk', \r\n  onBack \r\n}) => {\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [loadingTasks, setLoadingTasks] = useState(true);\r\n  const [showTaskModal, setShowTaskModal] = useState(false);\r\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n\r\n  // Načítanie úloh používateľa\r\n  useEffect(() => {\r\n    const loadTasks = async () => {\r\n      try {\r\n        setLoadingTasks(true);\r\n        const apiTasks = await apiService.getUserTasks(userEmail);\r\n        \r\n        // Konvertujeme API Task na TaskModal Task\r\n        const convertedTasks: Task[] = apiTasks.map(apiTask => ({\r\n          id: apiTask.id.toString(),\r\n          title: apiTask.title,\r\n          description: apiTask.description || '',\r\n          status: apiTask.status,\r\n          priority: apiTask.priority,\r\n          assignedTo: apiTask.assigned_to,\r\n          dueDate: apiTask.due_date || '',\r\n          createdAt: apiTask.created_at,\r\n          createdBy: apiTask.created_by,\r\n          category: 'other', // Default kategória\r\n        }));\r\n        \r\n        setTasks(convertedTasks);\r\n      } catch (error) {\r\n        console.error('Chyba pri načítaní úloh:', error);\r\n      } finally {\r\n        setLoadingTasks(false);\r\n      }\r\n    };\r\n\r\n    loadTasks();\r\n  }, [userEmail]);\r\n\r\n  // Načítanie firiem používateľa\r\n  useEffect(() => {\r\n    const loadCompanies = async () => {\r\n      try {\r\n        const userCompanies = await apiService.getUserCompanies(userEmail);\r\n        setCompanies(userCompanies.map(c => ({ id: c.id, name: c.name })));\r\n      } catch (error) {\r\n        console.error('Chyba pri načítaní firiem:', error);\r\n      }\r\n    };\r\n\r\n    loadCompanies();\r\n  }, [userEmail]);\r\n\r\n  // Funkcie pre správu úloh\r\n  const handleAddTask = () => {\r\n    setEditingTask(null);\r\n    setShowTaskModal(true);\r\n  };\r\n\r\n  const handleEditTask = (task: Task) => {\r\n    setEditingTask(task);\r\n    setShowTaskModal(true);\r\n  };\r\n\r\n  const handleDeleteTask = async (taskId: string) => {\r\n    try {\r\n      await apiService.deleteTask(parseInt(taskId));\r\n      setTasks(prev => prev.filter(task => task.id !== taskId));\r\n    } catch (error) {\r\n      console.error('Chyba pri mazaní úlohy:', error);\r\n      alert('Chyba pri mazaní úlohy: ' + (error instanceof Error ? error.message : 'Neznáma chyba'));\r\n    }\r\n  };\r\n\r\n  const handleSaveTask = async (task: Omit<Task, 'id' | 'createdAt'>) => {\r\n    try {\r\n      if (editingTask) {\r\n        // Aktualizácia existujúcej úlohy\r\n        await apiService.updateTask(parseInt(editingTask.id), {\r\n          title: task.title,\r\n          description: task.description,\r\n          status: task.status,\r\n          priority: task.priority,\r\n          assigned_to: task.assignedTo,\r\n          due_date: task.dueDate,\r\n        });\r\n        \r\n        setTasks(prev => prev.map(t => \r\n          t.id === editingTask.id \r\n            ? { ...t, ...task, id: editingTask.id, createdAt: t.createdAt }\r\n            : t\r\n        ));\r\n      } else {\r\n        // Vytvorenie novej úlohy - potrebujeme vybrat firmu\r\n        if (companies.length === 0) {\r\n          alert('Pre vytvorenie úlohy potrebujete mať aspoň jednu firmu.');\r\n          return;\r\n        }\r\n        \r\n        const selectedCompany = companies[0]; // Použijeme prvú firmu\r\n        const response = await apiService.createTask({\r\n          title: task.title,\r\n          description: task.description,\r\n          status: task.status,\r\n          priority: task.priority,\r\n          assigned_to: task.assignedTo,\r\n          due_date: task.dueDate,\r\n          created_by: userEmail,\r\n          company_id: selectedCompany.id,\r\n          company_name: selectedCompany.name,\r\n        });\r\n        \r\n        // Načítame úlohu znova, aby sme mali kompletné údaje\r\n        const createdTask = await apiService.getTask(response.taskId);\r\n        const convertedTask: Task = {\r\n          id: createdTask.id.toString(),\r\n          title: createdTask.title,\r\n          description: createdTask.description || '',\r\n          status: createdTask.status,\r\n          priority: createdTask.priority,\r\n          assignedTo: createdTask.assigned_to,\r\n          dueDate: createdTask.due_date || '',\r\n          createdAt: createdTask.created_at,\r\n          createdBy: createdTask.created_by,\r\n          category: 'other',\r\n        };\r\n        \r\n        setTasks(prev => [...prev, convertedTask]);\r\n      }\r\n      \r\n      setShowTaskModal(false);\r\n      setEditingTask(null);\r\n    } catch (error) {\r\n      console.error('Chyba pri ukladaní úlohy:', error);\r\n      alert('Chyba pri ukladaní úlohy: ' + (error instanceof Error ? error.message : 'Neznáma chyba'));\r\n    }\r\n  };\r\n\r\n  // Helper funkcie pre úlohy\r\n  const getStatusBadge = (status: string) => {\r\n    const colors = {\r\n      pending: 'bg-yellow-100 text-yellow-800',\r\n      completed: 'bg-green-100 text-green-800',\r\n      in_progress: 'bg-blue-100 text-blue-800',\r\n      cancelled: 'bg-gray-100 text-gray-800',\r\n    };\r\n    const labels = {\r\n      pending: 'Čakajúce',\r\n      completed: 'Dokončené',\r\n      in_progress: 'V spracovaní',\r\n      cancelled: 'Zrušené',\r\n    };\r\n    return (\r\n      <span className={`px-2 py-1 text-xs font-medium rounded-full ${colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800'}`}>\r\n        {labels[status as keyof typeof labels] || status}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const getPriorityBadge = (priority: string) => {\r\n    const colors = {\r\n      low: 'bg-gray-100 text-gray-800',\r\n      medium: 'bg-blue-100 text-blue-800',\r\n      high: 'bg-orange-100 text-orange-800',\r\n      urgent: 'bg-red-100 text-red-800',\r\n    };\r\n    const labels = {\r\n      low: 'Nízka',\r\n      medium: 'Stredná',\r\n      high: 'Vysoká',\r\n      urgent: 'Urgentná',\r\n    };\r\n    return (\r\n      <span className={`px-2 py-1 text-xs font-medium rounded-full ${colors[priority as keyof typeof colors] || 'bg-gray-100 text-gray-800'}`}>\r\n        {labels[priority as keyof typeof labels] || priority}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center justify-between h-16\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <button\r\n                onClick={onBack}\r\n                className=\"flex items-center text-gray-600 hover:text-gray-900 transition-colors\"\r\n              >\r\n                <ArrowLeftIcon className=\"h-5 w-5 mr-2\" />\r\n                Späť do Dashboardu\r\n              </button>\r\n              <div className=\"h-6 w-px bg-gray-300\"></div>\r\n              <div className=\"flex items-center\">\r\n                <ClipboardDocumentListIcon className=\"h-8 w-8 text-orange-500 mr-3\" />\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">Vaše úlohy</h1>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={handleAddTask}\r\n              className=\"bg-primary-600 text-white px-4 py-2 rounded-md hover:bg-primary-700 flex items-center transition-colors\"\r\n            >\r\n              <PlusIcon className=\"h-5 w-5 mr-2\" />\r\n              Pridať úlohu\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"bg-white rounded-lg shadow-md\">\r\n          <div className=\"px-6 py-4 border-b border-gray-200\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <div>\r\n                <h2 className=\"text-lg font-semibold text-gray-900\">Zoznam úloh</h2>\r\n                <p className=\"text-sm text-gray-600 mt-1\">\r\n                  Celkovo {tasks.length} úloh • {tasks.filter(t => t.status === 'pending').length} čakajúcich\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"p-6\">\r\n            {loadingTasks ? (\r\n              <div className=\"text-center py-12\">\r\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"></div>\r\n                <p className=\"mt-4 text-gray-600\">Načítavam úlohy...</p>\r\n              </div>\r\n            ) : tasks.length > 0 ? (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {tasks.map((task) => (\r\n                  <div key={task.id} className=\"bg-gray-50 rounded-lg p-4 hover:shadow-md transition-shadow border border-gray-200\">\r\n                    <div className=\"flex items-start justify-between mb-3\">\r\n                      <div className=\"flex-1\">\r\n                        <h3 className=\"text-lg font-medium text-gray-900 mb-1\">{task.title}</h3>\r\n                        <p className=\"text-sm text-gray-600 mb-2 line-clamp-2\">{task.description}</p>\r\n                        <div className=\"flex items-center text-sm text-gray-500 mb-2\">\r\n                          <CalendarIcon className=\"h-4 w-4 mr-1\" />\r\n                          {task.dueDate}\r\n                        </div>\r\n                        <div className=\"flex items-center text-sm text-gray-500\">\r\n                          <UserIcon className=\"h-4 w-4 mr-1\" />\r\n                          {task.assignedTo}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex flex-col items-end space-y-2 ml-4\">\r\n                        {getStatusBadge(task.status)}\r\n                        {getPriorityBadge(task.priority)}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center justify-between pt-3 border-t border-gray-200\">\r\n                      <div className=\"flex space-x-2\">\r\n                        <button \r\n                          onClick={() => handleEditTask(task)}\r\n                          className=\"text-primary-600 hover:text-primary-700 text-sm font-medium\"\r\n                        >\r\n                          Upraviť\r\n                        </button>\r\n                        <button \r\n                          onClick={() => handleDeleteTask(task.id)}\r\n                          className=\"text-red-600 hover:text-red-700 text-sm font-medium\"\r\n                        >\r\n                          Vymazať\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-12\">\r\n                <ClipboardDocumentListIcon className=\"mx-auto h-16 w-16 text-gray-400\" />\r\n                <h3 className=\"mt-4 text-lg font-medium text-gray-900\">Žiadne úlohy</h3>\r\n                <p className=\"mt-2 text-sm text-gray-500 mb-6\">\r\n                  Zatiaľ nemáte žiadne úlohy. Vytvorte prvú úlohu pre vašu firmu.\r\n                </p>\r\n                <button\r\n                  onClick={handleAddTask}\r\n                  className=\"bg-primary-600 text-white px-6 py-3 rounded-md hover:bg-primary-700 flex items-center mx-auto\"\r\n                >\r\n                  <PlusIcon className=\"h-5 w-5 mr-2\" />\r\n                  Vytvoriť prvú úlohu\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n             {/* Task Modal */}\r\n       <TaskModal\r\n         isOpen={showTaskModal}\r\n         onClose={() => {\r\n           setShowTaskModal(false);\r\n           setEditingTask(null);\r\n         }}\r\n         onSave={handleSaveTask}\r\n         task={editingTask}\r\n         companyEmployees={[]}\r\n         company={companies.length > 0 ? companies[0] : undefined}\r\n         userEmail={userEmail}\r\n       />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTasksPage;\r\n","import React, { useState, useEffect } from 'react';\nimport { \n  ArrowLeftIcon,\n  EnvelopeIcon,\n  UserIcon,\n  CalendarIcon,\n  CheckIcon,\n  TrashIcon,\n  MagnifyingGlassIcon\n} from '@heroicons/react/24/outline';\nimport { apiService } from '../services/apiService';\n\ninterface UserMessagesPageProps {\n  userEmail?: string;\n  onBack: () => void;\n}\n\ninterface Message {\n  id: number;\n  subject: string;\n  content: string;\n  sender_email: string;\n  sender_name: string;\n  recipient_email: string;\n  company_id: number;\n  company_name: string;\n  is_read: boolean;\n  created_at: string;\n}\n\nconst UserMessagesPage: React.FC<UserMessagesPageProps> = ({ \n  userEmail = 'user@portal.sk', \n  onBack \n}) => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [loadingMessages, setLoadingMessages] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [companyFilter, setCompanyFilter] = useState('all');\n  const [senderFilter, setSenderFilter] = useState('all');\n\n  // Načítanie neprečítaných správ používateľa\n  useEffect(() => {\n    const loadUnreadMessages = async () => {\n      try {\n        setLoadingMessages(true);\n        console.log('Načítavam neprečítané správy pre:', userEmail);\n        const unreadMessages = await apiService.getUnreadMessages(userEmail);\n        console.log('Načítané správy:', unreadMessages);\n        setMessages(unreadMessages);\n      } catch (error) {\n        console.error('Chyba pri načítaní neprečítaných správ:', error);\n      } finally {\n        setLoadingMessages(false);\n      }\n    };\n\n    loadUnreadMessages();\n  }, [userEmail]);\n\n  // Označenie správy ako prečítaná\n  const handleMarkAsRead = async (messageId: number) => {\n    try {\n      await apiService.markMessageAsRead(messageId);\n      setMessages(prev => prev.filter(msg => msg.id !== messageId));\n    } catch (error) {\n      console.error('Chyba pri označení správy ako prečítaná:', error);\n      alert('Chyba pri označení správy ako prečítaná: ' + (error instanceof Error ? error.message : 'Neznáma chyba'));\n    }\n  };\n\n  // Vymazanie správy\n  const handleDeleteMessage = async (messageId: number) => {\n    try {\n      await apiService.deleteMessage(messageId);\n      setMessages(prev => prev.filter(msg => msg.id !== messageId));\n    } catch (error) {\n      console.error('Chyba pri mazaní správy:', error);\n      alert('Chyba pri mazaní správy: ' + (error instanceof Error ? error.message : 'Neznáma chyba'));\n    }\n  };\n\n  // Označenie všetkých filtrovaných správ ako prečítané\n  const handleMarkAllAsRead = async () => {\n    try {\n      await Promise.all(filteredMessages.map(msg => apiService.markMessageAsRead(msg.id)));\n      setMessages(prev => prev.filter(msg => !filteredMessages.find(fm => fm.id === msg.id)));\n    } catch (error) {\n      console.error('Chyba pri označení všetkých správ ako prečítané:', error);\n      alert('Chyba pri označení všetkých správ ako prečítané: ' + (error instanceof Error ? error.message : 'Neznáma chyba'));\n    }\n  };\n\n  // Filtrovanie správ\n  const filteredMessages = messages.filter(message => {\n    const matchesSearch = message.subject.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         message.content.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         message.sender_name.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesCompany = companyFilter === 'all' || \n                          (message.company_name && message.company_name === companyFilter);\n    \n    const matchesSender = senderFilter === 'all' || \n                         message.sender_email === senderFilter;\n    \n    return matchesSearch && matchesCompany && matchesSender;\n  });\n\n  // Získanie unikátnych firiem a odosielateľov pre filter\n  const companies = Array.from(new Set(messages.map(msg => msg.company_name).filter(Boolean)));\n  const senders = Array.from(new Set(messages.map(msg => msg.sender_email)));\n\n  // Formátovanie dátumu\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('sk-SK', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={onBack}\n                className=\"flex items-center text-gray-600 hover:text-gray-900 transition-colors\"\n              >\n                <ArrowLeftIcon className=\"h-5 w-5 mr-2\" />\n                Späť do Dashboardu\n              </button>\n              <div className=\"h-6 w-px bg-gray-300\"></div>\n              <div className=\"flex items-center\">\n                <EnvelopeIcon className=\"h-8 w-8 text-purple-500 mr-3\" />\n                <h1 className=\"text-2xl font-bold text-gray-900\">Neprečítané správy</h1>\n              </div>\n            </div>\n            {filteredMessages.length > 0 && (\n              <button\n                onClick={handleMarkAllAsRead}\n                className=\"bg-purple-600 text-white px-4 py-2 rounded-md hover:bg-purple-700 flex items-center transition-colors\"\n              >\n                <CheckIcon className=\"h-5 w-5 mr-2\" />\n                Označiť všetky ako prečítané\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"bg-white rounded-lg shadow-md\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <div>\n                <h2 className=\"text-lg font-semibold text-gray-900\">Zoznam neprečítaných správ</h2>\n                <p className=\"text-sm text-gray-600 mt-1\">\n                  Celkovo {messages.length} neprečítaných správ\n                  {filteredMessages.length !== messages.length && (\n                    <span className=\"ml-2 text-purple-600\">\n                      (Zobrazené: {filteredMessages.length})\n                    </span>\n                  )}\n                </p>\n              </div>\n            </div>\n            \n            {/* Filtre */}\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              {/* Vyhľadávanie */}\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <MagnifyingGlassIcon className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Vyhľadať správy...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\n                />\n              </div>\n              \n              {/* Filter podľa firmy */}\n              <div>\n                <select\n                  value={companyFilter}\n                  onChange={(e) => setCompanyFilter(e.target.value)}\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md leading-5 bg-white focus:outline-none focus:ring-1 focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\n                >\n                  <option value=\"all\">Všetky firmy</option>\n                  {companies.map(company => (\n                    <option key={company} value={company}>{company}</option>\n                  ))}\n                </select>\n              </div>\n              \n              {/* Filter podľa odosielateľa */}\n              <div>\n                <select\n                  value={senderFilter}\n                  onChange={(e) => setSenderFilter(e.target.value)}\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md leading-5 bg-white focus:outline-none focus:ring-1 focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\n                >\n                  <option value=\"all\">Všetci odosielatelia</option>\n                  {senders.map(sender => (\n                    <option key={sender} value={sender}>{sender}</option>\n                  ))}\n                </select>\n              </div>\n              \n              {/* Reset filtrov */}\n              <div>\n                <button\n                  onClick={() => {\n                    setSearchTerm('');\n                    setCompanyFilter('all');\n                    setSenderFilter('all');\n                  }}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-1 focus:ring-purple-500 focus:border-purple-500\"\n                >\n                  Resetovať filtre\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"p-6\">\n            {loadingMessages ? (\n              <div className=\"text-center py-12\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600 mx-auto\"></div>\n                <p className=\"mt-4 text-gray-600\">Načítavam správy...</p>\n              </div>\n            ) : filteredMessages.length > 0 ? (\n              <div className=\"space-y-4\">\n                {filteredMessages.map((message) => (\n                  <div key={message.id} className=\"bg-gray-50 rounded-lg p-4 hover:shadow-md transition-shadow border border-gray-200\">\n                    <div className=\"flex items-start justify-between mb-3\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center mb-2\">\n                          <h3 className=\"text-lg font-medium text-gray-900 mr-3\">{message.subject}</h3>\n                          <span className=\"bg-purple-100 text-purple-800 text-xs font-medium px-2 py-1 rounded-full\">\n                            Neprečítané\n                          </span>\n                        </div>\n                        <p className=\"text-sm text-gray-600 mb-3 line-clamp-3\">{message.content}</p>\n                        <div className=\"flex items-center text-sm text-gray-500 space-x-4\">\n                          <div className=\"flex items-center\">\n                            <UserIcon className=\"h-4 w-4 mr-1\" />\n                            <span>Od: {message.sender_name} ({message.sender_email})</span>\n                          </div>\n                          <div className=\"flex items-center\">\n                            <CalendarIcon className=\"h-4 w-4 mr-1\" />\n                            <span>{formatDate(message.created_at)}</span>\n                          </div>\n                          {message.company_name && (\n                            <div className=\"flex items-center\">\n                              <span className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded\">\n                                {message.company_name}\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between pt-3 border-t border-gray-200\">\n                      <div className=\"flex space-x-2\">\n                        <button \n                          onClick={() => handleMarkAsRead(message.id)}\n                          className=\"text-purple-600 hover:text-purple-700 text-sm font-medium flex items-center\"\n                        >\n                          <CheckIcon className=\"h-4 w-4 mr-1\" />\n                          Označiť ako prečítané\n                        </button>\n                        <button \n                          onClick={() => handleDeleteMessage(message.id)}\n                          className=\"text-red-600 hover:text-red-700 text-sm font-medium flex items-center\"\n                        >\n                          <TrashIcon className=\"h-4 w-4 mr-1\" />\n                          Vymazať\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-12\">\n                <EnvelopeIcon className=\"mx-auto h-16 w-16 text-gray-400\" />\n                <h3 className=\"mt-4 text-lg font-medium text-gray-900\">\n                  {messages.length > 0 ? 'Žiadne správy nevyhovujú filtrom' : 'Žiadne neprečítané správy'}\n                </h3>\n                <p className=\"mt-2 text-sm text-gray-500\">\n                  {messages.length > 0 \n                    ? 'Skúste zmeniť nastavenia filtrov alebo vyhľadávania.'\n                    : 'Všetky vaše správy sú prečítané. Nové správy sa zobrazia tu.'\n                  }\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserMessagesPage;\n","import React, { useState, useEffect } from 'react';\r\nimport { \r\n  ArrowLeftIcon,\r\n  UserIcon,\r\n  ClockIcon,\r\n  CalendarIcon,\r\n  ExclamationTriangleIcon,\r\n  CheckCircleIcon,\r\n  XCircleIcon,\r\n  BuildingOfficeIcon,\r\n  PencilIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { hrService, Employee, Attendance, LeaveRequest } from '../services/hrService';\r\nimport { apiService } from '../services/apiService';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport EditEmployeeModal from '../components/EditEmployeeModal';\r\n\r\n// Helper funkcia pre lokálne formátovanie dátumu\r\nconst formatDate = (date: Date): string => {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0');\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\ninterface UserEmployeesPageProps {\r\n  userEmail: string;\r\n  onBack: () => void;\r\n}\r\n\r\ninterface EmployeeWithDetails extends Employee {\r\n  attendance?: Attendance[];\r\n  leave_requests?: LeaveRequest[];\r\n}\r\n\r\nconst UserEmployeesPage: React.FC<UserEmployeesPageProps> = ({ userEmail, onBack }) => {\r\n  const [employees, setEmployees] = useState<EmployeeWithDetails[]>([]);\r\n  const [companies, setCompanies] = useState<any[]>([]);\r\n  const [selectedCompany, setSelectedCompany] = useState<any>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [selectedEmployee, setSelectedEmployee] = useState<Employee | null>(null);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Načítanie firiem používateľa\r\n      const userCompanies = await apiService.getUserCompanies(userEmail);\r\n      setCompanies(userCompanies);\r\n      \r\n      if (userCompanies.length > 0) {\r\n        setSelectedCompany(userCompanies[0]);\r\n        \r\n        // Načítanie zamestnancov pre prvú firmu\r\n        const employeesData = await hrService.getEmployees(userCompanies[0].id);\r\n        \r\n        // Načítanie dochádzky a dovoleniek pre každého zamestnanca\r\n        const employeesWithDetails = await Promise.all(\r\n          employeesData.map(async (employee) => {\r\n            try {\r\n              const [attendance, leaveRequests] = await Promise.all([\r\n                hrService.getAttendance(userCompanies[0].id, employee.id),\r\n                hrService.getLeaveRequests(userCompanies[0].id)\r\n              ]);\r\n              \r\n              return {\r\n                ...employee,\r\n                attendance: attendance.filter(att => att.employee_id === employee.id),\r\n                leave_requests: leaveRequests.filter(leave => leave.employee_id === employee.id)\r\n              };\r\n            } catch (error) {\r\n              console.error(`Chyba pri načítaní detailov pre zamestnanca ${employee.id}:`, error);\r\n              return {\r\n                ...employee,\r\n                attendance: [],\r\n                leave_requests: []\r\n              };\r\n            }\r\n          })\r\n        );\r\n        \r\n        setEmployees(employeesWithDetails);\r\n      }\r\n    } catch (error) {\r\n      console.error('Chyba pri načítaní dát:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCompanyChange = async (companyId: number) => {\r\n    try {\r\n      const company = companies.find(c => c.id === companyId);\r\n      setSelectedCompany(company);\r\n      \r\n      const employeesData = await hrService.getEmployees(companyId);\r\n      \r\n      // Načítanie dochádzky a dovoleniek pre každého zamestnanca\r\n      const employeesWithDetails = await Promise.all(\r\n        employeesData.map(async (employee) => {\r\n          try {\r\n            const [attendance, leaveRequests] = await Promise.all([\r\n              hrService.getAttendance(companyId, employee.id),\r\n              hrService.getLeaveRequests(companyId)\r\n            ]);\r\n            \r\n            return {\r\n              ...employee,\r\n              attendance: attendance.filter(att => att.employee_id === employee.id),\r\n              leave_requests: leaveRequests.filter(leave => leave.employee_id === employee.id)\r\n            };\r\n          } catch (error) {\r\n            console.error(`Chyba pri načítaní detailov pre zamestnanca ${employee.id}:`, error);\r\n            return {\r\n              ...employee,\r\n              attendance: [],\r\n              leave_requests: []\r\n            };\r\n          }\r\n        })\r\n      );\r\n      \r\n      setEmployees(employeesWithDetails);\r\n    } catch (error) {\r\n      console.error('Chyba pri načítaní zamestnancov:', error);\r\n    }\r\n  };\r\n\r\n     const getEmployeeStatus = (employee: EmployeeWithDetails) => {\r\n             const today = formatDate(new Date());\r\n     \r\n     // Najprv kontrolujeme status zamestnania z databázy\r\n     if (employee.status === 'terminated') {\r\n       return { status: 'terminated', label: 'Ukončený', color: 'red', icon: XCircleIcon };\r\n     }\r\n     \r\n     if (employee.status === 'inactive') {\r\n       return { status: 'inactive', label: 'Neaktívny', color: 'gray', icon: XCircleIcon };\r\n     }\r\n     \r\n     if (employee.status === 'on_leave') {\r\n       return { status: 'on_leave', label: 'Na dovolenke', color: 'blue', icon: CalendarIcon };\r\n     }\r\n     \r\n     // Kontrola dochádzky na dnešný deň\r\n     const todayAttendance = employee.attendance?.find(att => att.date === today);\r\n     \r\n     if (todayAttendance) {\r\n       if (todayAttendance.status === 'present') {\r\n         return { status: 'working', label: 'Pracuje', color: 'green', icon: CheckCircleIcon };\r\n       } else if (todayAttendance.status === 'late') {\r\n         return { status: 'late', label: 'Mešká', color: 'yellow', icon: ExclamationTriangleIcon };\r\n       } else if (todayAttendance.status === 'absent') {\r\n         return { status: 'absent', label: 'Neprítomný', color: 'red', icon: XCircleIcon };\r\n       }\r\n     }\r\n     \r\n     // Kontrola dovoleniek\r\n     const activeLeave = employee.leave_requests?.find(leave => \r\n       leave.status === 'approved' && \r\n       leave.start_date <= today && \r\n       leave.end_date >= today\r\n     );\r\n     \r\n     if (activeLeave) {\r\n       return { status: 'leave', label: 'Dovolenka', color: 'blue', icon: CalendarIcon };\r\n     }\r\n     \r\n     // Kontrola choroby\r\n     const sickLeave = employee.leave_requests?.find(leave => \r\n       leave.status === 'approved' && \r\n       leave.leave_type === 'sick_leave' &&\r\n       leave.start_date <= today && \r\n       leave.end_date >= today\r\n     );\r\n     \r\n     if (sickLeave) {\r\n       return { status: 'sick', label: 'Choroba', color: 'red', icon: XCircleIcon };\r\n     }\r\n     \r\n     // Ak je aktívny ale nemá zaznamenanú dochádzku, považujeme za neprítomného\r\n     if (employee.status === 'active') {\r\n       return { status: 'unknown', label: 'Neprítomný', color: 'gray', icon: XCircleIcon };\r\n     }\r\n     \r\n     // Fallback\r\n     return { status: 'unknown', label: 'Neznámy stav', color: 'gray', icon: XCircleIcon };\r\n   };\r\n\r\n  const getStatusColor = (color: string) => {\r\n    switch (color) {\r\n      case 'green':\r\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\r\n      case 'yellow':\r\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\r\n      case 'red':\r\n        return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\r\n      case 'blue':\r\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\r\n    }\r\n  };\r\n\r\n  const filteredEmployees = employees.filter(employee =>\r\n    employee.first_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    employee.last_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    employee.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    employee.position.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n     const workingCount = employees.filter(emp => {\r\n     const status = getEmployeeStatus(emp);\r\n     return status.status === 'working';\r\n   }).length;\r\n   \r\n   const notWorkingCount = employees.filter(emp => {\r\n     const status = getEmployeeStatus(emp);\r\n     return status.status !== 'working';\r\n   }).length;\r\n\r\n   const handleEditEmployee = async (employeeData: Partial<Employee>) => {\r\n     if (!selectedEmployee) return;\r\n     \r\n     try {\r\n       await hrService.updateEmployee(selectedEmployee.id, employeeData);\r\n       \r\n       // Aktualizuj zoznam zamestnancov\r\n       await loadData();\r\n       \r\n       setShowEditModal(false);\r\n       setSelectedEmployee(null);\r\n     } catch (error) {\r\n       console.error('Chyba pri aktualizácii zamestnanca:', error);\r\n       alert('Chyba pri aktualizácii zamestnanca');\r\n     }\r\n   };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <LoadingSpinner size=\"lg\" text=\"Načítavam zamestnancov...\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <button\r\n            onClick={onBack}\r\n            className=\"flex items-center text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white\"\r\n          >\r\n            <ArrowLeftIcon className=\"h-5 w-5 mr-2\" />\r\n            Späť na Dashboard\r\n          </button>\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">Zamestnanci</h1>\r\n            <p className=\"text-gray-600 dark:text-gray-300\">Prehľad zamestnancov a ich aktuálnych stavov</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Štatistiky */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        <div className=\"bg-white dark:bg-dark-800 rounded-lg shadow p-6 border-l-4 border-green-500\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"p-2 bg-green-100 dark:bg-green-900 rounded-lg\">\r\n              <CheckCircleIcon className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\r\n            </div>\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-300\">Pracujú</p>\r\n              <p className=\"text-2xl font-bold text-green-600 dark:text-green-400\">{workingCount}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white dark:bg-dark-800 rounded-lg shadow p-6 border-l-4 border-red-500\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"p-2 bg-red-100 dark:bg-red-900 rounded-lg\">\r\n              <XCircleIcon className=\"w-6 h-6 text-red-600 dark:text-red-400\" />\r\n            </div>\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-300\">Nepracujú</p>\r\n              <p className=\"text-2xl font-bold text-red-600 dark:text-red-400\">{notWorkingCount}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white dark:bg-dark-800 rounded-lg shadow p-6 border-l-4 border-blue-500\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\">\r\n              <UserIcon className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\r\n            </div>\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-300\">Celkovo</p>\r\n              <p className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">{employees.length}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Filtre */}\r\n      <div className=\"bg-white dark:bg-dark-800 rounded-lg shadow p-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          {/* Výber firmy */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Firma\r\n            </label>\r\n            <select\r\n              value={selectedCompany?.id || ''}\r\n              onChange={(e) => handleCompanyChange(parseInt(e.target.value))}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-dark-700 text-gray-900 dark:text-white\"\r\n            >\r\n              {companies.map(company => (\r\n                <option key={company.id} value={company.id}>\r\n                  {company.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Vyhľadávanie */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Vyhľadávanie\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Hľadať zamestnancov...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-dark-700 text-gray-900 dark:text-white\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Zoznam zamestnancov */}\r\n      <div className=\"bg-white dark:bg-dark-800 rounded-lg shadow overflow-hidden\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200 dark:border-dark-600\">\r\n          <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n            Zoznam zamestnancov {selectedCompany && `- ${selectedCompany.name}`}\r\n          </h2>\r\n        </div>\r\n        \r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-dark-600\">\r\n            <thead className=\"bg-gray-50 dark:bg-dark-700\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                  Zamestnanec\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                  Pozícia\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                  Kontakt\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                  Aktuálny stav\r\n                </th>\r\n                                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                   Dátum nástupu\r\n                 </th>\r\n                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                   Akcie\r\n                 </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white dark:bg-dark-800 divide-y divide-gray-200 dark:divide-dark-600\">\r\n              {filteredEmployees.map((employee) => {\r\n                const status = getEmployeeStatus(employee);\r\n                const StatusIcon = status.icon;\r\n                \r\n                return (\r\n                  <tr key={employee.id} className=\"hover:bg-gray-50 dark:hover:bg-dark-700\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center\">\r\n                        <div className=\"flex-shrink-0 h-10 w-10\">\r\n                          <div className=\"h-10 w-10 rounded-full bg-gray-300 dark:bg-dark-600 flex items-center justify-center\">\r\n                            <UserIcon className=\"h-6 w-6 text-gray-600 dark:text-gray-400\" />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"ml-4\">\r\n                          <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                            {employee.first_name} {employee.last_name}\r\n                          </div>\r\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                            {employee.employee_id}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm text-gray-900 dark:text-white\">{employee.position}</div>\r\n                      <div className=\"text-sm text-gray-500 dark:text-gray-400\">{employee.department}</div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm text-gray-900 dark:text-white\">{employee.email}</div>\r\n                      {employee.phone && (\r\n                        <div className=\"text-sm text-gray-500 dark:text-gray-400\">{employee.phone}</div>\r\n                      )}\r\n                    </td>\r\n                                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                       <div className=\"flex items-center\">\r\n                         <StatusIcon className={`h-4 w-4 mr-2 ${status.color === 'green' ? 'text-green-600 dark:text-green-400' : \r\n                           status.color === 'yellow' ? 'text-yellow-600 dark:text-yellow-400' :\r\n                           status.color === 'red' ? 'text-red-600 dark:text-red-400' :\r\n                           status.color === 'blue' ? 'text-blue-600 dark:text-blue-400' :\r\n                           'text-gray-600 dark:text-gray-400'}`} />\r\n                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(status.color)}`}>\r\n                           {status.label}\r\n                         </span>\r\n                       </div>\r\n                     </td>\r\n                                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                       {new Date(employee.hire_date).toLocaleDateString('sk-SK')}\r\n                     </td>\r\n                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                       <button\r\n                         onClick={() => {\r\n                           setSelectedEmployee(employee);\r\n                           setShowEditModal(true);\r\n                         }}\r\n                         className=\"inline-flex items-center px-3 py-1 border border-gray-300 dark:border-dark-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-dark-700 hover:bg-gray-50 dark:hover:bg-dark-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                       >\r\n                         <PencilIcon className=\"h-4 w-4 mr-1\" />\r\n                         Upraviť\r\n                       </button>\r\n                     </td>\r\n                   </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          \r\n          {filteredEmployees.length === 0 && (\r\n            <div className=\"text-center py-8\">\r\n              <UserIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n              <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">\r\n                {searchTerm ? 'Žiadni zamestnanci nenájdení' : 'Žiadni zamestnanci'}\r\n              </h3>\r\n              <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\r\n                {searchTerm \r\n                  ? 'Skúste zmeniť vyhľadávací výraz' \r\n                  : 'V tejto firme nie sú žiadni zamestnanci'\r\n                }\r\n              </p>\r\n            </div>\r\n          )}\r\n                 </div>\r\n       </div>\r\n\r\n       {/* Edit Employee Modal */}\r\n       <EditEmployeeModal\r\n         isOpen={showEditModal}\r\n         onClose={() => {\r\n           setShowEditModal(false);\r\n           setSelectedEmployee(null);\r\n         }}\r\n         onSave={handleEditEmployee}\r\n         employee={selectedEmployee}\r\n       />\r\n     </div>\r\n   );\r\n };\r\n\r\nexport default UserEmployeesPage;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { \r\n  UsersIcon, \r\n  CheckCircleIcon,\r\n  BuildingOfficeIcon,\r\n  UserIcon,\r\n  EnvelopeIcon,\r\n  PlusIcon,\r\n  ArrowRightIcon,\r\n  ClipboardDocumentListIcon,\r\n  CalendarIcon,\r\n  UserGroupIcon,\r\n  DocumentIcon\r\n} from '@heroicons/react/24/outline';\r\nimport EditProfileModal from '../components/EditProfileModal';\r\nimport CompanyModal from '../components/CompanyModal';\r\nimport CompanyDashboard from '../components/CompanyDashboard';\r\nimport { Task } from '../components/TaskModal';\r\nimport UserTasksPage from './UserTasksPage';\r\nimport UserMessagesPage from './UserMessagesPage';\r\nimport UserEmployeesPage from './UserEmployeesPage';\r\nimport { apiService, Company } from '../services/apiService';\r\nimport { hrService } from '../services/hrService';\r\n\r\n// Helper funkcia pre lokálne formátovanie dátumu\r\nconst formatDate = (date: Date): string => {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0');\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\ninterface DashboardProps {\r\n  userEmail?: string;\r\n}\r\n\r\nconst Dashboard: React.FC<DashboardProps> = ({ userEmail = 'user@portal.sk' }) => {\r\n  const [userProfile, setUserProfile] = useState({\r\n    name: 'Používateľ',\r\n    email: userEmail,\r\n    phone: '+421 123 456 789',\r\n    bio: 'Aktívny používateľ portálu s záujmom o dokumenty a úlohy.'\r\n  });\r\n\r\n  const [showEditProfileModal, setShowEditProfileModal] = useState(false);\r\n  const [showCompanyModal, setShowCompanyModal] = useState(false);\r\n  const [editingCompany, setEditingCompany] = useState<any>(null);\r\n  const [isEditingCompany, setIsEditingCompany] = useState(false);\r\n  const [selectedCompany, setSelectedCompany] = useState<Company | null>(null);\r\n\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [unreadMessagesCount, setUnreadMessagesCount] = useState(0);\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [loadingTasks, setLoadingTasks] = useState(true);\r\n  const [showTasksPage, setShowTasksPage] = useState(false);\r\n  const [showMessagesPage, setShowMessagesPage] = useState(false);\r\n  const [showEmployeesPage, setShowEmployeesPage] = useState(false);\r\n  const [employeesCount, setEmployeesCount] = useState({ working: 0, notWorking: 0, total: 0 });\r\n\r\n  // Načítanie počtu neprečítaných správ\r\n  const loadUnreadMessagesCount = useCallback(async () => {\r\n    try {\r\n      const count = await apiService.getUnreadCount(userEmail);\r\n      setUnreadMessagesCount(count);\r\n    } catch (error) {\r\n      console.error('Chyba pri načítaní počtu neprečítaných správ:', error);\r\n    }\r\n  }, [userEmail]);\r\n\r\n  // Načítanie počtu zamestnancov\r\n  const loadEmployeesCount = useCallback(async () => {\r\n    try {\r\n      const userCompanies = await apiService.getUserCompanies(userEmail);\r\n      let totalWorking = 0;\r\n      let totalNotWorking = 0;\r\n      let totalEmployees = 0;\r\n\r\n      for (const company of userCompanies) {\r\n        try {\r\n          const employees = await hrService.getEmployees(company.id);\r\n          totalEmployees += employees.length;\r\n          \r\n          // Načítanie dochádzky a dovoleniek pre každého zamestnanca\r\n          const today = formatDate(new Date());\r\n          \r\n          for (const employee of employees) {\r\n            try {\r\n              const [attendance, leaveRequests] = await Promise.all([\r\n                hrService.getAttendance(company.id, employee.id),\r\n                hrService.getLeaveRequests(company.id)\r\n              ]);\r\n              \r\n              const employeeAttendance = attendance.filter(att => att.employee_id === employee.id);\r\n              const employeeLeaveRequests = leaveRequests.filter(leave => leave.employee_id === employee.id);\r\n              \r\n              // Používame rovnakú logiku ako v UserEmployeesPage\r\n              // Najprv kontrolujeme status zamestnania z databázy\r\n              if (employee.status === 'terminated' || employee.status === 'inactive') {\r\n                totalNotWorking++;\r\n              } else if (employee.status === 'on_leave') {\r\n                totalNotWorking++;\r\n              } else {\r\n                // Kontrola dochádzky na dnešný deň\r\n                const todayAttendance = employeeAttendance.find(att => att.date === today);\r\n                \r\n                if (todayAttendance && todayAttendance.status === 'present') {\r\n                  totalWorking++;\r\n                } else {\r\n                  // Kontrola dovoleniek\r\n                  const activeLeave = employeeLeaveRequests.find(leave => \r\n                    leave.status === 'approved' && \r\n                    leave.start_date <= today && \r\n                    leave.end_date >= today\r\n                  );\r\n                  \r\n                  if (!activeLeave) {\r\n                    totalNotWorking++;\r\n                  }\r\n                }\r\n              }\r\n            } catch (error) {\r\n              console.error(`Chyba pri načítaní detailov pre zamestnanca ${employee.id}:`, error);\r\n              // Ak sa nepodarí načítať údaje, považujeme za neprítomného\r\n              totalNotWorking++;\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(`Chyba pri načítaní zamestnancov pre firmu ${company.id}:`, error);\r\n        }\r\n      }\r\n\r\n      setEmployeesCount({ working: totalWorking, notWorking: totalNotWorking, total: totalEmployees });\r\n    } catch (error) {\r\n      console.error('Chyba pri načítaní počtu zamestnancov:', error);\r\n    }\r\n  }, [userEmail]);\r\n\r\n  useEffect(() => {\r\n    loadUnreadMessagesCount();\r\n    loadEmployeesCount();\r\n  }, [loadUnreadMessagesCount, loadEmployeesCount]);\r\n\r\n  // Načítanie úloh používateľa\r\n  useEffect(() => {\r\n    const loadTasks = async () => {\r\n      try {\r\n        setLoadingTasks(true);\r\n        const apiTasks = await apiService.getUserTasks(userEmail);\r\n        \r\n        // Konvertujeme API Task na TaskModal Task\r\n        const convertedTasks: Task[] = apiTasks.map(apiTask => ({\r\n          id: apiTask.id.toString(),\r\n          title: apiTask.title,\r\n          description: apiTask.description || '',\r\n          status: apiTask.status,\r\n          priority: apiTask.priority,\r\n          assignedTo: apiTask.assigned_to,\r\n          dueDate: apiTask.due_date || '',\r\n          createdAt: apiTask.created_at,\r\n          createdBy: apiTask.created_by,\r\n          category: 'other', // Default kategória\r\n        }));\r\n        \r\n        setTasks(convertedTasks);\r\n      } catch (error) {\r\n        console.error('Chyba pri načítaní úloh:', error);\r\n      } finally {\r\n        setLoadingTasks(false);\r\n      }\r\n    };\r\n\r\n    loadTasks();\r\n  }, [userEmail]);\r\n\r\n\r\n\r\n\r\n\r\n  // Načítanie firiem z API\r\n  useEffect(() => {\r\n    const loadCompanies = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const userCompanies = await apiService.getUserCompanies(userEmail);\r\n        setCompanies(userCompanies);\r\n      } catch (error) {\r\n        console.error('Chyba pri načítaní firiem:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadCompanies();\r\n  }, [userEmail]);\r\n\r\n  const handleSaveProfile = (updatedProfile: any) => {\r\n    setUserProfile(updatedProfile);\r\n    console.log('Profil bol aktualizovaný:', updatedProfile);\r\n  };\r\n\r\n  const handleAddCompany = () => {\r\n    setEditingCompany(null);\r\n    setIsEditingCompany(false);\r\n    setShowCompanyModal(true);\r\n  };\r\n\r\n  const handleEditCompany = (company: any) => {\r\n    setEditingCompany(company);\r\n    setIsEditingCompany(true);\r\n    setShowCompanyModal(true);\r\n  };\r\n\r\n\r\n\r\n  const handleSaveCompany = async (company: any) => {\r\n    try {\r\n      if (isEditingCompany) {\r\n        // Aktualizácia existujúcej firmy\r\n        await apiService.updateCompany(company.id, company);\r\n        setCompanies((prev: Company[]) => prev.map((c: Company) => c.id === company.id ? company : c));\r\n      } else {\r\n        // Vytvorenie novej firmy\r\n        const companyData = {\r\n          ...company,\r\n          owner_email: userEmail,\r\n          status: 'active'\r\n        };\r\n        \r\n        // Kontrola povinných polí\r\n        if (!companyData.name || !companyData.ico || !companyData.address || !companyData.authorized_person) {\r\n          alert('Chýbajú povinné údaje: názov firmy, IČO, adresa alebo oprávnená osoba');\r\n          return;\r\n        }\r\n        \r\n        console.log('Vytváram firmu s dátami:', companyData);\r\n        const response = await apiService.createCompany(companyData);\r\n        console.log('Odpoveď z API:', response);\r\n        const newCompany = { ...company, id: response.companyId, owner_email: userEmail, status: 'active' };\r\n        setCompanies((prev: Company[]) => [...prev, newCompany]);\r\n        setShowCompanyModal(false);\r\n        setEditingCompany(null);\r\n        setIsEditingCompany(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Chyba pri ukladaní firmy:', error);\r\n      alert('Chyba pri ukladaní firmy: ' + (error instanceof Error ? error.message : 'Neznáma chyba'));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleSelectCompany = (company: Company) => {\r\n    setSelectedCompany(company);\r\n  };\r\n\r\n  const handleBackToCompanySelection = () => {\r\n    setSelectedCompany(null);\r\n  };\r\n\r\n  // Ak je vybraná firma, zobrazíme dashboard firmy\r\n  if (selectedCompany) {\r\n    return (\r\n      <CompanyDashboard\r\n        company={selectedCompany}\r\n        onClose={handleBackToCompanySelection}\r\n        userEmail={userEmail}\r\n        userRole=\"company\"\r\n      />\r\n    );\r\n  }\r\n\r\n  // Ak je zobrazená stránka úloh, zobrazíme ju\r\n  if (showTasksPage) {\r\n    return (\r\n      <UserTasksPage\r\n        userEmail={userEmail}\r\n        onBack={() => setShowTasksPage(false)}\r\n      />\r\n    );\r\n  }\r\n\r\n  // Ak je zobrazená stránka správ, zobrazíme ju\r\n  if (showMessagesPage) {\r\n    return (\r\n      <UserMessagesPage\r\n        userEmail={userEmail}\r\n        onBack={() => setShowMessagesPage(false)}\r\n      />\r\n    );\r\n  }\r\n\r\n  // Ak je zobrazená stránka zamestnancov, zobrazíme ju\r\n  if (showEmployeesPage) {\r\n    return (\r\n      <UserEmployeesPage\r\n        userEmail={userEmail}\r\n        onBack={() => setShowEmployeesPage(false)}\r\n      />\r\n    );\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">Váš Dashboard</h1>\r\n          <p className=\"text-gray-600 dark:text-gray-300\">Vyberte si firmu pre prácu</p>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">Prihlásený ako: {userProfile.name} ({userEmail})</p>\r\n        </div>\r\n        <div className=\"mt-4 sm:mt-0 flex items-center space-x-4\">\r\n          <button\r\n            onClick={() => setShowEditProfileModal(true)}\r\n            className=\"text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 text-sm font-medium\"\r\n          >\r\n            Upraviť profil\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Stats */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-6\">\r\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"flex-shrink-0\">\r\n              <BuildingOfficeIcon className=\"h-8 w-8 text-blue-500\" />\r\n         </div>\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Vaše firmy</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{companies.length}</p>\r\n                </div>\r\n                </div>\r\n              </div>\r\n\r\n        <div \r\n          className=\"bg-white rounded-lg shadow-md p-6 cursor-pointer hover:shadow-lg transition-shadow\"\r\n          onClick={() => setShowEmployeesPage(true)}\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <div className=\"flex-shrink-0\">\r\n              <UserGroupIcon className=\"h-8 w-8 text-green-500\" />\r\n            </div>\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Zamestnanci</p>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <p className=\"text-2xl font-bold text-green-600\">{employeesCount.working}</p>\r\n                <span className=\"text-sm text-gray-500\">/</span>\r\n                <p className=\"text-2xl font-bold text-red-600\">{employeesCount.notWorking}</p>\r\n              </div>\r\n              <p className=\"text-sm text-gray-500\">{employeesCount.total} celkovo</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        \r\n\r\n        <div \r\n          className=\"bg-white rounded-lg shadow-md p-6 cursor-pointer hover:shadow-lg transition-shadow\"\r\n          onClick={() => setShowMessagesPage(true)}\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <div className=\"flex-shrink-0\">\r\n              <EnvelopeIcon className=\"h-8 w-8 text-purple-500\" />\r\n            </div>\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Neprečítané správy</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{unreadMessagesCount}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"flex-shrink-0\">\r\n              <CheckCircleIcon className=\"h-8 w-8 text-green-500\" />\r\n            </div>\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Aktívne firmy</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">\r\n                {companies.filter(c => c.status === 'active').length}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div \r\n          className=\"bg-white rounded-lg shadow-md p-6 cursor-pointer hover:shadow-lg transition-shadow\"\r\n          onClick={() => setShowTasksPage(true)}\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <div className=\"flex-shrink-0\">\r\n              <ClipboardDocumentListIcon className=\"h-8 w-8 text-orange-500\" />\r\n            </div>\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Vaše úlohy</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{tasks.length}</p>\r\n              <p className=\"text-sm text-gray-500\">{tasks.filter(t => t.status === 'pending').length} čakajúcich</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Company Selection */}\r\n         <div className=\"bg-white rounded-lg shadow-md\">\r\n           <div className=\"px-6 py-4 border-b border-gray-200\">\r\n             <h2 className=\"text-lg font-semibold text-gray-900\">Vaše firmy</h2>\r\n          <p className=\"text-sm text-gray-600 mt-1\">Vyberte firmu, s ktorou chcete pracovať</p>\r\n           </div>\r\n           <div className=\"p-6\">\r\n          {loading ? (\r\n               <div className=\"text-center py-12\">\r\n                 <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"></div>\r\n              <p className=\"mt-4 text-gray-600\">Načítavam vaše firmy...</p>\r\n               </div>\r\n          ) : companies.length > 0 ? (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {companies.map((company) => (\r\n                <div \r\n                  key={company.id} \r\n                  className=\"bg-gray-50 rounded-lg p-6 hover:shadow-md transition-all duration-200 cursor-pointer border-2 border-transparent hover:border-primary-300\"\r\n                  onClick={() => handleSelectCompany(company)}\r\n                >\r\n                     <div className=\"flex items-start justify-between mb-4\">\r\n                       <div className=\"flex-1\">\r\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{company.name}</h3>\r\n                      <div className=\"space-y-2 text-sm text-gray-600\">\r\n                           <div className=\"flex items-center\">\r\n                          <BuildingOfficeIcon className=\"h-4 w-4 mr-2\" />\r\n                          <span>IČO: {company.ico}</span>\r\n                           </div>\r\n                           <div className=\"flex items-center\">\r\n                          <EnvelopeIcon className=\"h-4 w-4 mr-2\" />\r\n                          <span>{company.email || company.owner_email}</span>\r\n                           </div>\r\n                        {company.address && (\r\n                          <div className=\"flex items-start\">\r\n                            <UserIcon className=\"h-4 w-4 mr-2 mt-0.5\" />\r\n                            <span className=\"text-xs\">{company.address}</span>\r\n                 </div>\r\n               )}\r\n           </div>\r\n         </div>\r\n                    <div className=\"flex flex-col items-end space-y-2\">\r\n                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                        company.status === 'active' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n                      }`}>\r\n                        {company.status === 'active' ? 'Aktívna' : 'Neaktívna'}\r\n                         </span>\r\n                       </div>\r\n                     </div>\r\n                     \r\n                     <div className=\"flex items-center justify-between pt-4 border-t border-gray-200\">\r\n                       <div className=\"flex space-x-2\">\r\n                 <button\r\n                         onClick={(e) => {\r\n                           e.stopPropagation();\r\n                           handleEditCompany(company);\r\n                         }}\r\n                         className=\"text-blue-600 hover:text-blue-700 text-sm font-medium\"\r\n                       >\r\n                         Upraviť\r\n                 </button>\r\n                     </div>\r\n                    <div className=\"flex items-center text-primary-600\">\r\n                      <span className=\"text-sm font-medium mr-1\">Vybrať firmu</span>\r\n                      <ArrowRightIcon className=\"h-4 w-4\" />\r\n                       </div>\r\n                     </div>\r\n                   </div>\r\n                 ))}\r\n               </div>\r\n             ) : (\r\n               <div className=\"text-center py-12\">\r\n              <BuildingOfficeIcon className=\"mx-auto h-16 w-16 text-gray-400\" />\r\n              <h3 className=\"mt-4 text-lg font-medium text-gray-900\">Nemáte žiadne firmy</h3>\r\n              <p className=\"mt-2 text-sm text-gray-500 mb-6\">\r\n                Pre prácu v portáli potrebujete vytvoriť aspoň jednu firmu.\r\n              </p>\r\n              <button\r\n                onClick={handleAddCompany}\r\n                className=\"bg-primary-600 text-white px-6 py-3 rounded-md hover:bg-primary-700 flex items-center mx-auto\"\r\n              >\r\n                <PlusIcon className=\"h-5 w-5 mr-2\" />\r\n                Pridať prvú firmu\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          {companies.length > 0 && (\r\n            <div className=\"mt-6 pt-6 border-t border-gray-200\">\r\n              <button\r\n                onClick={handleAddCompany}\r\n                className=\"bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 flex items-center\"\r\n              >\r\n                <PlusIcon className=\"h-5 w-5 mr-2\" />\r\n                Pridať ďalšiu firmu\r\n              </button>\r\n               </div>\r\n             )}\r\n           </div>\r\n         </div>\r\n\r\n       {/* User Profile */}\r\n       <div className=\"bg-white rounded-lg shadow-md\">\r\n         <div className=\"px-6 py-4 border-b border-gray-200\">\r\n           <h2 className=\"text-lg font-semibold text-gray-900\">Váš profil</h2>\r\n         </div>\r\n         <div className=\"p-6\">\r\n           <div className=\"flex items-start space-x-4\">\r\n             <div className=\"flex-shrink-0\">\r\n               <div className=\"w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center\">\r\n                 <UsersIcon className=\"h-8 w-8 text-primary-600\" />\r\n               </div>\r\n             </div>\r\n             <div className=\"flex-1 min-w-0\">\r\n               <h3 className=\"text-lg font-medium text-gray-900\">{userProfile.name}</h3>\r\n               <p className=\"text-sm text-gray-500\">{userProfile.email}</p>\r\n               {userProfile.phone && (\r\n                 <p className=\"text-sm text-gray-500\">{userProfile.phone}</p>\r\n               )}\r\n               {userProfile.bio && (\r\n                 <p className=\"text-sm text-gray-600 mt-2\">{userProfile.bio}</p>\r\n               )}\r\n             </div>\r\n             <button\r\n               onClick={() => setShowEditProfileModal(true)}\r\n               className=\"text-primary-600 hover:text-primary-700 text-sm font-medium\"\r\n             >\r\n               Upraviť\r\n             </button>\r\n           </div>\r\n         </div>\r\n       </div>\r\n\r\n\r\n\r\n       {/* Edit Profile Modal */}\r\n       <EditProfileModal\r\n         isOpen={showEditProfileModal}\r\n         onClose={() => setShowEditProfileModal(false)}\r\n         onSave={handleSaveProfile}\r\n         currentProfile={userProfile}\r\n       />\r\n\r\n       {/* Company Modal */}\r\n        <CompanyModal\r\n          isOpen={showCompanyModal}\r\n          onClose={() => setShowCompanyModal(false)}\r\n          onSave={handleSaveCompany}\r\n          currentCompany={editingCompany}\r\n          isEditing={isEditingCompany}\r\n        />\r\n\r\n\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Dashboard;\r\n"],"names":["_ref","isOpen","onClose","onSave","currentProfile","formData","setFormData","useState","isLoading","setIsLoading","errors","setErrors","handleInputChange","e","name","value","target","prev","_objectSpread","handleClose","_jsx","className","children","_jsxs","onClick","XMarkIcon","onSubmit","async","preventDefault","validateForm","newErrors","trim","length","email","test","phone","Object","keys","setTimeout","htmlFor","type","id","onChange","concat","placeholder","bio","rows","disabled","currentCompany","isEditing","ico","address","business_registry","vat_id","tax_id","authorized_person","contact_phone","contact_email","replace","companyToSave","undefined","error","console","maxLength","userEmail","onBack","tasks","setTasks","loadingTasks","setLoadingTasks","showTaskModal","setShowTaskModal","editingTask","setEditingTask","companies","setCompanies","useEffect","convertedTasks","apiService","getUserTasks","map","apiTask","toString","title","description","status","priority","assignedTo","assigned_to","dueDate","due_date","createdAt","created_at","createdBy","created_by","category","loadTasks","userCompanies","getUserCompanies","c","loadCompanies","handleAddTask","ArrowLeftIcon","ClipboardDocumentListIcon","PlusIcon","filter","t","task","CalendarIcon","UserIcon","pending","completed","in_progress","cancelled","low","medium","high","urgent","handleEditTask","deleteTask","parseInt","taskId","alert","Error","message","handleDeleteTask","TaskModal","updateTask","selectedCompany","response","createTask","company_id","company_name","createdTask","getTask","convertedTask","companyEmployees","company","messages","setMessages","loadingMessages","setLoadingMessages","searchTerm","setSearchTerm","companyFilter","setCompanyFilter","senderFilter","setSenderFilter","log","unreadMessages","getUnreadMessages","loadUnreadMessages","filteredMessages","matchesSearch","subject","toLowerCase","includes","content","sender_name","matchesCompany","matchesSender","sender_email","Array","from","Set","msg","Boolean","senders","EnvelopeIcon","Promise","all","markMessageAsRead","find","fm","CheckIcon","MagnifyingGlassIcon","sender","dateString","Date","toLocaleDateString","year","month","day","hour","minute","messageId","handleMarkAsRead","deleteMessage","handleDeleteMessage","TrashIcon","employees","setEmployees","setSelectedCompany","loading","setLoading","showEditModal","setShowEditModal","selectedEmployee","setSelectedEmployee","loadData","employeesData","hrService","getEmployees","employeesWithDetails","attendance","leaveRequests","getAttendance","employee","getLeaveRequests","att","employee_id","leave_requests","leave","getEmployeeStatus","_employee$attendance","_employee$leave_reque","_employee$leave_reque2","today","date","getFullYear","String","getMonth","padStart","getDate","formatDate","label","color","icon","XCircleIcon","todayAttendance","CheckCircleIcon","ExclamationTriangleIcon","start_date","end_date","leave_type","getStatusColor","filteredEmployees","first_name","last_name","position","workingCount","emp","notWorkingCount","LoadingSpinner","size","text","companyId","handleCompanyChange","StatusIcon","department","hire_date","PencilIcon","EditEmployeeModal","updateEmployee","employeeData","userProfile","setUserProfile","showEditProfileModal","setShowEditProfileModal","showCompanyModal","setShowCompanyModal","editingCompany","setEditingCompany","isEditingCompany","setIsEditingCompany","unreadMessagesCount","setUnreadMessagesCount","showTasksPage","setShowTasksPage","showMessagesPage","setShowMessagesPage","showEmployeesPage","setShowEmployeesPage","employeesCount","setEmployeesCount","working","notWorking","total","loadUnreadMessagesCount","useCallback","count","getUnreadCount","loadEmployeesCount","totalWorking","totalNotWorking","totalEmployees","employeeAttendance","employeeLeaveRequests","handleAddCompany","handleBackToCompanySelection","CompanyDashboard","userRole","UserTasksPage","UserMessagesPage","UserEmployeesPage","BuildingOfficeIcon","UserGroupIcon","handleSelectCompany","owner_email","stopPropagation","handleEditCompany","ArrowRightIcon","UsersIcon","EditProfileModal","updatedProfile","CompanyModal","updateCompany","companyData","createCompany","newCompany"],"sourceRoot":""}