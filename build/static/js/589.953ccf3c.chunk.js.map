{"version":3,"file":"static/js/589.953ccf3c.chunk.js","mappings":"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","sources":["services/accountingService.ts","utils/formatters.ts","components/charts/FinancialCharts.tsx","pages/FinancialAnalysisPage.tsx"],"sourcesContent":["import { apiService, ApiResponse } from './apiService';\r\n\r\n// ===== ÚČTOVNÍCTVO SERVICE =====\r\n\r\nexport interface AccountingSettings {\r\n  id?: number;\r\n  company_id: number;\r\n  pohoda_enabled: boolean;\r\n  pohoda_url?: string;\r\n  pohoda_username?: string;\r\n  pohoda_password?: string;\r\n  pohoda_ico?: string;\r\n  pohoda_year?: string;\r\n  auto_sync: boolean;\r\n  sync_frequency: 'hourly' | 'daily' | 'weekly' | 'manual';\r\n  last_sync?: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport interface AccountingPermissions {\r\n  id?: number;\r\n  user_email: string;\r\n  company_id: number;\r\n  can_view_invoices: boolean;\r\n  can_create_invoices: boolean;\r\n  can_edit_invoices: boolean;\r\n  can_delete_invoices: boolean;\r\n  can_view_bank: boolean;\r\n  can_edit_bank: boolean;\r\n  can_view_cash: boolean;\r\n  can_edit_cash: boolean;\r\n  can_view_reports: boolean;\r\n  can_export_data: boolean;\r\n  can_manage_settings: boolean;\r\n  granted_by: string;\r\n  granted_at?: string;\r\n}\r\n\r\nexport interface FinancialAnalysis {\r\n  expenses: {\r\n    total: number;\r\n    count: number;\r\n    details: Array<{\r\n      account: string;\r\n      account_name: string;\r\n      amount: number;\r\n      count: number;\r\n    }>;\r\n  };\r\n  revenue: {\r\n    total: number;\r\n    count: number;\r\n    details: Array<{\r\n      account: string;\r\n      account_name: string;\r\n      amount: number;\r\n      count: number;\r\n    }>;\r\n  };\r\n  profit: number;\r\n  isProfit: boolean;\r\n  filters?: {\r\n    dateFrom: string | null;\r\n    dateTo: string | null;\r\n  };\r\n}\r\n\r\nexport interface InvoiceItem {\r\n  id?: number;\r\n  description: string;\r\n  quantity: number;\r\n  unit_price: number;\r\n  vat_rate: number;\r\n  total_price: number;\r\n  vat_amount: number;\r\n  unit?: string;\r\n}\r\n\r\nexport interface IssuedInvoice {\r\n  id?: number;\r\n  company_id: number;\r\n  invoice_number: string;\r\n  customer_name: string;\r\n  customer_ico?: string;\r\n  customer_dic?: string;\r\n  customer_address?: string;\r\n  issue_date: string;\r\n  due_date: string;\r\n  total_amount: number;\r\n  vat_amount: number;\r\n  \r\n  // MDB polia - základy DPH\r\n  kc0?: number;\r\n  kc1?: number;\r\n  kc2?: number;\r\n  kc3?: number;\r\n  \r\n  // MDB polia - DPH\r\n  kc_dph1?: number;\r\n  kc_dph2?: number;\r\n  kc_dph3?: number;\r\n  \r\n  // MDB polia - celkové sumy\r\n  kc_celkem?: number;\r\n  \r\n  // MDB polia - ďalšie informácie\r\n  var_sym?: string;\r\n  s_text?: string;\r\n  mdb_id?: number;\r\n  rel_tp_fak?: number;\r\n  datum?: string;\r\n  dat_splat?: string;\r\n  firma?: string;\r\n  ico?: string;\r\n  dic?: string;\r\n  ulice?: string;\r\n  psc?: string;\r\n  obec?: string;\r\n  mdb_cislo?: string;\r\n  \r\n  // MDB polia - likvidácia a platby\r\n  kc_likv?: number;\r\n  kc_u?: number;\r\n  dat_likv?: string;\r\n  \r\n  currency: string;\r\n  status: 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled';\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  items?: InvoiceItem[];\r\n}\r\n\r\nexport interface ReceivedInvoice {\r\n  id?: number;\r\n  company_id: number;\r\n  invoice_number: string;\r\n  supplier_name: string;\r\n  supplier_ico?: string;\r\n  supplier_dic?: string;\r\n  supplier_address?: string;\r\n  issue_date: string;\r\n  due_date: string;\r\n  total_amount: number;\r\n  vat_amount: number;\r\n  \r\n  // MDB polia - základy DPH\r\n  kc0?: number;\r\n  kc1?: number;\r\n  kc2?: number;\r\n  kc3?: number;\r\n  \r\n  // MDB polia - DPH\r\n  kc_dph1?: number;\r\n  kc_dph2?: number;\r\n  kc_dph3?: number;\r\n  \r\n  // MDB polia - celkové sumy\r\n  kc_celkem?: number;\r\n  \r\n  // MDB polia - ďalšie informácie\r\n  var_sym?: string;\r\n  s_text?: string;\r\n  mdb_id?: number;\r\n  rel_tp_fak?: number;\r\n  datum?: string;\r\n  dat_splat?: string;\r\n  firma?: string;\r\n  ico?: string;\r\n  dic?: string;\r\n  ulice?: string;\r\n  psc?: string;\r\n  obec?: string;\r\n  mdb_cislo?: string;\r\n  \r\n  // MDB polia - likvidácia a platby\r\n  kc_likv?: number;\r\n  kc_u?: number;\r\n  dat_likv?: string;\r\n  \r\n  currency: string;\r\n  status: 'received' | 'approved' | 'paid' | 'overdue' | 'disputed';\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  items?: InvoiceItem[];\r\n}\r\n\r\nexport interface BankTransaction {\r\n  id?: number;\r\n  company_id: number;\r\n  transaction_date: string;\r\n  description: string;\r\n  amount: number;\r\n  currency: string;\r\n  type: 'income' | 'expense';\r\n  category?: string;\r\n  bank_account?: string;\r\n  reference?: string;\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport interface CashTransaction {\r\n  id?: number;\r\n  company_id: number;\r\n  transaction_date: string;\r\n  description: string;\r\n  amount: number;\r\n  currency: string;\r\n  type: 'income' | 'expense';\r\n  category?: string;\r\n  receipt_number?: string;\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\n\r\n\r\nexport interface AccountingStats {\r\n  issued_invoices: {\r\n    total_count: number;\r\n    total_amount: number;\r\n    paid_amount: number;\r\n    overdue_amount: number;\r\n  };\r\n  received_invoices: {\r\n    total_count: number;\r\n    total_amount: number;\r\n    paid_amount: number;\r\n    overdue_amount: number;\r\n  };\r\n  bank: {\r\n    total_income: number;\r\n    total_expense: number;\r\n  };\r\n  cash: {\r\n    total_income: number;\r\n    total_expense: number;\r\n  };\r\n}\r\n\r\nexport class AccountingService {\r\n  // 1. NASTAVENIA ÚČTOVNÍCTVA\r\n\r\n    async getSettings(companyId: number): Promise<AccountingSettings> {\r\n    const response = await apiService.get(`/accounting/settings/${companyId}`); \r\n    return response as AccountingSettings;\r\n  }\r\n\r\n  async saveSettings(companyId: number, settings: Partial<AccountingSettings>): Promise<any> {\r\n    const response = await apiService.post(`/accounting/settings/${companyId}`, settings);\r\n    return response;\r\n  }\r\n\r\n  // 2. PRÁVA PRE ÚČTOVNÍCTVO\r\n\r\n  async getPermissions(companyId: number, userEmail: string): Promise<AccountingPermissions> {\r\n    const response = await apiService.get(`/accounting/permissions/${companyId}/${userEmail}`);\r\n    return response as AccountingPermissions;\r\n  }\r\n\r\n  async savePermissions(companyId: number, permissions: Partial<AccountingPermissions>): Promise<any> {\r\n    const response = await apiService.post(`/accounting/permissions/${companyId}`, permissions);\r\n    return response;\r\n  }\r\n\r\n  async getAllPermissions(companyId: number): Promise<AccountingPermissions[]> {\r\n    const response = await apiService.get(`/accounting/permissions/${companyId}`);\r\n    return response as AccountingPermissions[];\r\n  }\r\n\r\n  // 3. VYDANÉ FAKTÚRY\r\n\r\n  async getIssuedInvoices(\r\n    companyId: number, \r\n    filters?: {\r\n      status?: string;\r\n      date_from?: string;\r\n      date_to?: string;\r\n      limit?: number;\r\n      offset?: number;\r\n    }\r\n  ): Promise<IssuedInvoice[]> {\r\n    const params = new URLSearchParams();\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          params.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n    \r\n    const response = await apiService.get(`/accounting/issued-invoices/${companyId}?${params}`);\r\n    return response as IssuedInvoice[];\r\n  }\r\n\r\n  async createIssuedInvoice(companyId: number, invoice: Partial<IssuedInvoice>): Promise<any> {\r\n    const response = await apiService.post(`/accounting/issued-invoices/${companyId}`, invoice);\r\n    return response;\r\n  }\r\n\r\n  async getIssuedInvoiceById(invoiceId: number): Promise<IssuedInvoice> {\r\n    const response = await apiService.get(`/accounting/issued-invoices/detail/${invoiceId}`);\r\n    return response as IssuedInvoice;\r\n  }\r\n\r\n\r\n\r\n  // 4. PRIJATÉ FAKTÚRY\r\n\r\n  async getReceivedInvoices(\r\n    companyId: number, \r\n    filters?: {\r\n      status?: string;\r\n      date_from?: string;\r\n      date_to?: string;\r\n      limit?: number;\r\n      offset?: number;\r\n    }\r\n  ): Promise<ReceivedInvoice[]> {\r\n    const params = new URLSearchParams();\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          params.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n    \r\n    const response = await apiService.get(`/accounting/received-invoices/${companyId}?${params}`);\r\n    return response as ReceivedInvoice[];\r\n  }\r\n\r\n  async getReceivedInvoiceById(invoiceId: number): Promise<ReceivedInvoice> {\r\n    const response = await apiService.get(`/accounting/received-invoices/detail/${invoiceId}`);\r\n    return response as ReceivedInvoice;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // 7. HOSPODÁRSKE VÝSLEDKY (pUD)\r\n\r\n  async getPudSummary(companyId: number): Promise<{ total_kc: number; total_count: number }> {\r\n    const response = await apiService.get(`/accounting/pud-summary/${companyId}`);\r\n    return response as { total_kc: number; total_count: number };\r\n  }\r\n\r\n  // Získanie podrobnej analýzy nákladov a výnosov\r\n  async getFinancialAnalysis(companyId: number, dateFrom?: string, dateTo?: string): Promise<FinancialAnalysis> {\r\n    let url = `/accounting/financial-analysis/${companyId}`;\r\n    const params = new URLSearchParams();\r\n    \r\n    if (dateFrom) params.append('dateFrom', dateFrom);\r\n    if (dateTo) params.append('dateTo', dateTo);\r\n    \r\n    if (params.toString()) {\r\n      url += `?${params.toString()}`;\r\n    }\r\n    \r\n    const response = await apiService.get(url);\r\n    return response as FinancialAnalysis;\r\n  }\r\n\r\n  // 8. ŠTATISTIKY\r\n\r\n  async getStats(\r\n    companyId: number, \r\n    filters?: {\r\n      year?: number;\r\n      month?: number;\r\n    }\r\n  ): Promise<AccountingStats> {\r\n    const params = new URLSearchParams();\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          params.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n    \r\n    const response = await apiService.get(`/accounting/stats/${companyId}?${params}`);\r\n    return response as AccountingStats;\r\n  }\r\n\r\n  // 8. POMOCNÉ METÓDY\r\n\r\n  formatCurrency(amount: number, currency: string = 'EUR'): string {\r\n    return new Intl.NumberFormat('sk-SK', {\r\n      style: 'currency',\r\n      currency: currency\r\n    }).format(amount);\r\n  }\r\n\r\n  formatDate(date: string): string {\r\n    return new Date(date).toLocaleDateString('sk-SK');\r\n  }\r\n\r\n  getStatusBadge(status: string): { text: string; color: string } {\r\n    const statusMap: Record<string, { text: string; color: string }> = {\r\n      // Vydané faktúry\r\n      draft: { text: 'Koncept', color: 'bg-gray-100 text-gray-800' },\r\n      sent: { text: 'Odoslaná', color: 'bg-blue-100 text-blue-800' },\r\n      paid: { text: 'Zaplatená', color: 'bg-green-100 text-green-800' },\r\n      overdue: { text: 'Po splatnosti', color: 'bg-red-100 text-red-800' },\r\n      cancelled: { text: 'Zrušená', color: 'bg-yellow-100 text-yellow-800' },\r\n      \r\n      // Prijaté faktúry\r\n      received: { text: 'Prijatá', color: 'bg-gray-100 text-gray-800' },\r\n      approved: { text: 'Schválená', color: 'bg-blue-100 text-blue-800' },\r\n      disputed: { text: 'Sporná', color: 'bg-orange-100 text-orange-800' }\r\n    };\r\n\r\n    return statusMap[status] || { text: status, color: 'bg-gray-100 text-gray-800' };\r\n  }\r\n\r\n  getTypeBadge(type: string): { text: string; color: string } {\r\n    const typeMap: Record<string, { text: string; color: string }> = {\r\n      income: { text: 'Príjem', color: 'bg-green-100 text-green-800' },\r\n      expense: { text: 'Výdavok', color: 'bg-red-100 text-red-800' }\r\n    };\r\n\r\n    return typeMap[type] || { text: type, color: 'bg-gray-100 text-gray-800' };\r\n  }\r\n\r\n  // 9. POHODA INTEGRÁCIA\r\n\r\n  // Test POHODA connection\r\n  async testPohodaConnection(companyId: number, settings: Partial<AccountingSettings>): Promise<ApiResponse> {\r\n    return await apiService.post('/accounting/test-pohoda-connection', {\r\n      companyId,\r\n      ...settings\r\n    });\r\n  }\r\n\r\n  // Test POHODA invoices\r\n  async testPohodaInvoices(companyId: number, settings: Partial<AccountingSettings>): Promise<ApiResponse> {\r\n    return await apiService.post('/accounting/test-pohoda-invoices', {\r\n      companyId,\r\n      ...settings\r\n    });\r\n  }\r\n\r\n  // Sync POHODA invoices\r\n  async syncPohodaInvoices(companyId: number, dateFrom?: string, dateTo?: string): Promise<ApiResponse> {\r\n    return await apiService.post(`/accounting/sync-pohoda-invoices/${companyId}`, {\r\n      dateFrom,\r\n      dateTo\r\n    });\r\n  }\r\n\r\n  // 10. XML IMPORT/EXPORT\r\n\r\n  // Upload POHODA XML file\r\n  async uploadPohodaXml(companyId: number, file: File): Promise<ApiResponse> {\r\n    const formData = new FormData();\r\n    formData.append('xmlFile', file);\r\n    \r\n    // Používame fetch priamo pre FormData\r\n    const response = await fetch(`http://localhost:5000/api/accounting/upload-pohoda-xml/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n      },\r\n      body: formData\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri nahrávaní XML súboru');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // Export invoices to POHODA XML format\r\n  async exportPohodaXml(companyId: number, dateFrom?: string, dateTo?: string): Promise<Blob> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/export-pohoda-xml/${companyId}?dateFrom=${dateFrom || ''}&dateTo=${dateTo || ''}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri exporte XML súboru');\r\n    }\r\n    \r\n    return await response.blob();\r\n  }\r\n\r\n\r\n\r\n  // 11. OBNOVENIE FAKTÚR Z MDB\r\n\r\n  // Obnovenie vydaných faktúr z MDB\r\n  async refreshInvoicesFromMdb(companyId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    importedCount: number;\r\n    totalCount: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/refresh-invoices/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri obnovení faktúr z MDB');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // Obnovenie prijatých faktúr z MDB\r\n  async refreshReceivedInvoicesFromMdb(companyId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    importedCount: number;\r\n    totalCount: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/refresh-received-invoices/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri obnovení prijatých faktúr z MDB');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 12. IMPORT FAKTÚR Z MDB\r\n\r\n  // Import vydaných faktúr z MDB\r\n  async importInvoicesFromMdb(companyId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    importedCount: number;\r\n    skippedCount: number;\r\n    totalCount: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/import-invoices/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri importe faktúr z MDB');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 12. MAZANIE POLOŽIEK\r\n\r\n  // Mazanie vydanej faktúry\r\n  async deleteIssuedInvoice(invoiceId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/issued-invoices/${invoiceId}`);\r\n    return response;\r\n  }\r\n\r\n  // Mazanie prijatej faktúry\r\n  async deleteReceivedInvoice(invoiceId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/received-invoices/${invoiceId}`);\r\n    return response;\r\n  }\r\n\r\n  // Mazanie bankovej transakcie\r\n  async deleteBankTransaction(transactionId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/bank-transactions/${transactionId}`);\r\n    return response;\r\n  }\r\n\r\n  // Mazanie pokladničnej transakcie\r\n  async deleteCashTransaction(transactionId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/cash-transactions/${transactionId}`);\r\n    return response;\r\n  }\r\n\r\n  // 13. ADRESÁR FIRIEM Z MDB\r\n\r\n  // Načítanie adresára firiem z MDB\r\n  async getDirectory(companyId: number): Promise<{\r\n    success: boolean;\r\n    company: { ico: string; name: string };\r\n    mdb_file: string;\r\n    companies: Array<{\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n      dic: string;\r\n      address: string;\r\n      postal_code: string;\r\n      city: string;\r\n      phone: string;\r\n      email: string;\r\n      bank_account: string;\r\n      bank_code: string;\r\n    }>;\r\n    total_count: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/directory/${companyId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní adresára');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 14. DPH PODANIA\r\n\r\n  // Načítanie DPH podaní z MDB\r\n  async getVatReturns(companyId: number, year?: number): Promise<{\r\n    company: {\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n    };\r\n    year: number;\r\n    returns: Array<{\r\n      id: number;\r\n      rok: number;\r\n      mesiac: number;\r\n      povinnost: number;\r\n      odpočet: number;\r\n      odoslané: boolean;\r\n    }>;\r\n    summary: {\r\n      totalPovinnost: number;\r\n      totalOdpočet: number;\r\n      totalRozdiel: number;\r\n      odoslanéCount: number;\r\n      neodoslanéCount: number;\r\n    };\r\n  }> {\r\n    const yearParam = year || new Date().getFullYear();\r\n    const response = await fetch(`http://localhost:5000/api/accounting/vat-returns/${companyId}?year=${yearParam}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní DPH podaní');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 15. BANKOVÉ ÚČTY\r\n\r\n  // Načítanie bankových účtov z MDB\r\n  async getBankAccounts(companyId: number): Promise<{\r\n    company: {\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n    };\r\n    accounts: Array<{\r\n      id: number;\r\n      accountNumber: string;\r\n      accountName: string;\r\n      bankName: string;\r\n      balance: number;\r\n      creditTotal: number;\r\n      debitTotal: number;\r\n      transactionCount: number;\r\n    }>;\r\n    summary: {\r\n      totalBalance: number;\r\n      totalCredit: number;\r\n      totalDebit: number;\r\n      accountCount: number;\r\n    };\r\n  }> {\r\n    console.log('🏦 Volám bankový endpoint pre companyId:', companyId);\r\n    \r\n    const response = await fetch(`http://localhost:5000/api/accounting/bank-accounts/${companyId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    console.log('🏦 Bankový endpoint response status:', response.status);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní bankových účtov');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('🏦 Bankový endpoint response data:', data);\r\n    \r\n    return data;\r\n  }\r\n\r\n  // 16. POKLADŇA\r\n\r\n  // Načítanie pokladňových účtov z MDB\r\n  async getCashAccounts(companyId: number): Promise<{\r\n    company: {\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n    };\r\n    accounts: Array<{\r\n      id: number;\r\n      accountNumber: string;\r\n      accountName: string;\r\n      balance: number;\r\n      creditTotal: number;\r\n      debitTotal: number;\r\n      transactionCount: number;\r\n    }>;\r\n    summary: {\r\n      totalBalance: number;\r\n      totalCredit: number;\r\n      totalDebit: number;\r\n      accountCount: number;\r\n    };\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/cash-accounts/${companyId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní pokladňových účtov');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 17. BANKOVÉ TRANSAKCIE\r\n  async getBankTransactions(companyId: number, accountNumber: string): Promise<{\r\n    company: { id: number; name: string; ico: string; };\r\n    account: { accountNumber: string; accountName: string; bankName: string; };\r\n    transactions: Array<{\r\n      id: number; datum: string; popis: string; kredit: number; debet: number; zostatok: number; typ: 'kredit' | 'debet';\r\n    }>;\r\n    summary: {\r\n      totalCredit: number; totalDebit: number; currentBalance: number; transactionCount: number;\r\n    };\r\n  }> {\r\n    console.log('🏦 Volám bankový transakčný endpoint pre companyId:', companyId, 'accountNumber:', accountNumber);\r\n\r\n    const response = await fetch(`http://localhost:5000/api/accounting/bank-transactions/${companyId}/${accountNumber}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    console.log('🏦 Bankový transakčný endpoint response status:', response.status);\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní bankových transakcií');\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('🏦 Bankový transakčný endpoint response data:', data);\r\n\r\n    return data;\r\n  }\r\n\r\n  // 18. POKLADŇOVÉ TRANSAKCIE\r\n  async getCashTransactions(companyId: number, accountNumber: string): Promise<{\r\n    company: { id: number; name: string; ico: string; };\r\n    account: { accountNumber: string; accountName: string; bankName: string; };\r\n    transactions: Array<{\r\n      id: number; datum: string; popis: string; kredit: number; debet: number; zostatok: number; typ: 'kredit' | 'debet';\r\n    }>;\r\n    summary: {\r\n      totalCredit: number; totalDebit: number; currentBalance: number; transactionCount: number;\r\n    };\r\n  }> {\r\n    console.log('💰 Volám pokladňový transakčný endpoint pre companyId:', companyId, 'accountNumber:', accountNumber);\r\n\r\n    const response = await fetch(`http://localhost:5000/api/accounting/cash-transactions/${companyId}/${accountNumber}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    console.log('💰 Pokladňový transakčný endpoint response status:', response.status);\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní pokladňových transakcií');\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('💰 Pokladňový transakčný endpoint response data:', data);\r\n\r\n    return data;\r\n  }\r\n}\r\n\r\nexport const accountingService = new AccountingService();\r\n","// Formátovanie meny\r\nexport const formatCurrency = (amount: number | null | undefined, currency: string = 'EUR'): string => {\r\n  if (amount === null || amount === undefined || isNaN(amount)) return '-';\r\n  \r\n  return new Intl.NumberFormat('sk-SK', {\r\n    style: 'currency',\r\n    currency: currency\r\n  }).format(amount);\r\n};\r\n\r\n// Formátovanie dátumu\r\nexport const formatDate = (date: string | Date | null | undefined): string => {\r\n  if (!date) return '-';\r\n  \r\n  const dateObj = typeof date === 'string' ? new Date(date) : date;\r\n  \r\n  if (isNaN(dateObj.getTime())) return '-';\r\n  \r\n  return new Intl.DateTimeFormat('sk-SK', {\r\n    year: 'numeric',\r\n    month: '2-digit',\r\n    day: '2-digit'\r\n  }).format(dateObj);\r\n};\r\n\r\n// Formátovanie čísla\r\nexport const formatNumber = (number: number | null | undefined): string => {\r\n  if (number === null || number === undefined || isNaN(number)) return '-';\r\n  \r\n  return new Intl.NumberFormat('sk-SK').format(number);\r\n};\r\n\r\n// Formátovanie percent\r\nexport const formatPercent = (value: number | null | undefined, decimals: number = 2): string => {\r\n  if (value === null || value === undefined || isNaN(value)) return '-';\r\n  \r\n  return `${value.toFixed(decimals)}%`;\r\n};\r\n","import React from 'react';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\nimport { FinancialAnalysis } from '../../services/accountingService';\r\nimport { formatCurrency } from '../../utils/formatters';\r\n\r\ninterface FinancialChartsProps {\r\n  analysis: FinancialAnalysis;\r\n}\r\n\r\n// Farby pre grafy\r\nconst COLORS = [\r\n  '#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6',\r\n  '#06B6D4', '#84CC16', '#F97316', '#EC4899', '#6366F1'\r\n];\r\n\r\nconst FinancialCharts: React.FC<FinancialChartsProps> = ({ analysis }) => {\r\n  // Príprava dát pre pie chart nákladov\r\n  const expensesPieData = analysis.expenses.details.map((item, index) => ({\r\n    name: item.account_name,\r\n    value: item.amount,\r\n    color: COLORS[index % COLORS.length]\r\n  }));\r\n\r\n  // Príprava dát pre pie chart výnosov\r\n  const revenuePieData = analysis.revenue.details.map((item, index) => ({\r\n    name: item.account_name,\r\n    value: item.amount,\r\n    color: COLORS[index % COLORS.length]\r\n  }));\r\n\r\n  // Príprava dát pre bar chart porovnania\r\n  const comparisonData = [\r\n    {\r\n      name: 'Výnosy',\r\n      value: Math.max(0, analysis.revenue.total),\r\n      color: '#10B981'\r\n    },\r\n    {\r\n      name: 'Náklady',\r\n      value: Math.max(0, analysis.expenses.total),\r\n      color: '#EF4444'\r\n    },\r\n    {\r\n      name: analysis.isProfit ? 'Zisk' : 'Strata',\r\n      value: Math.max(0, Math.abs(analysis.profit)),\r\n      color: analysis.isProfit ? '#10B981' : '#EF4444'\r\n    }\r\n  ];\r\n\r\n  // Príprava dát pre top náklady a výnosy\r\n  const topExpenses = analysis.expenses.details\r\n    .sort((a, b) => b.amount - a.amount)\r\n    .slice(0, 5)\r\n    .map((item, index) => ({\r\n      name: item.account_name,\r\n      account: item.account,\r\n      value: Math.max(0, item.amount),\r\n      count: item.count,\r\n      color: COLORS[index % COLORS.length]\r\n    }));\r\n\r\n  const topRevenue = analysis.revenue.details\r\n    .sort((a, b) => b.amount - a.amount)\r\n    .slice(0, 5)\r\n    .map((item, index) => ({\r\n      name: item.account_name,\r\n      account: item.account,\r\n      value: Math.max(0, item.amount),\r\n      count: item.count,\r\n      color: COLORS[index % COLORS.length]\r\n    }));\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <div className=\"bg-white p-3 border border-gray-200 rounded-lg shadow-lg\">\r\n          <p className=\"font-medium text-gray-900\">{data.name}</p>\r\n          {data.account && (\r\n            <p className=\"text-sm text-gray-500\">Účet: {data.account}</p>\r\n          )}\r\n          <p className=\"text-sm text-gray-600\">\r\n            Suma: {formatCurrency(payload[0].value)}\r\n          </p>\r\n          {data.count && (\r\n            <p className=\"text-sm text-gray-600\">\r\n              Počet: {data.count}\r\n            </p>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Porovnanie Výnosy vs Náklady vs Zisk/Strata */}\r\n      <div className=\"bg-white p-6 rounded-lg shadow\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n          Porovnanie výnosov, nákladov a zisku/straty\r\n        </h3>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <BarChart data={comparisonData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis domain={[0, 'auto']} />\r\n            <Tooltip content={<CustomTooltip />} />\r\n            <Bar dataKey=\"value\" fill=\"#8884d8\">\r\n              {comparisonData.map((entry, index) => (\r\n                <Cell key={`cell-${index}`} fill={entry.color} />\r\n              ))}\r\n            </Bar>\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n             {/* Pie Charts - Výnosy a Náklady */}\r\n       <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n         {/* Pie Chart Výnosy */}\r\n         <div className=\"bg-white p-6 rounded-lg shadow\">\r\n           <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n             Rozloženie výnosov (účty 6xx)\r\n           </h3>\r\n                      <ResponsiveContainer width=\"100%\" height={400}>\r\n              <PieChart>\r\n                               <Pie\r\n                   data={revenuePieData}\r\n                   cx=\"50%\"\r\n                   cy=\"50%\"\r\n                   labelLine={false}\r\n                   outerRadius={120}\r\n                   fill=\"#8884d8\"\r\n                   dataKey=\"value\"\r\n                 >\r\n                  {revenuePieData.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={entry.color} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip content={<CustomTooltip />} />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n         </div>\r\n\r\n         {/* Pie Chart Náklady */}\r\n         <div className=\"bg-white p-6 rounded-lg shadow\">\r\n           <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n             Rozloženie nákladov (účty 5xx)\r\n           </h3>\r\n                      <ResponsiveContainer width=\"100%\" height={400}>\r\n              <PieChart>\r\n                               <Pie\r\n                   data={expensesPieData}\r\n                   cx=\"50%\"\r\n                   cy=\"50%\"\r\n                   labelLine={false}\r\n                   outerRadius={120}\r\n                   fill=\"#8884d8\"\r\n                   dataKey=\"value\"\r\n                 >\r\n                  {expensesPieData.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={entry.color} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip content={<CustomTooltip />} />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n         </div>\r\n       </div>\r\n\r\n      {/* Top 5 Výnosy a Náklady */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        {/* Top 5 Výnosy */}\r\n        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n            Top 5 výnosov\r\n          </h3>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={topRevenue}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis \r\n                dataKey=\"name\" \r\n                angle={-45}\r\n                textAnchor=\"end\"\r\n                height={80}\r\n                tick={{ fontSize: 11 }}\r\n                interval={0}\r\n              />\r\n              <YAxis domain={[0, 'auto']} />\r\n              <Tooltip content={<CustomTooltip />} />\r\n              <Bar dataKey=\"value\" fill=\"#10B981\">\r\n                {topRevenue.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={entry.color} />\r\n                ))}\r\n              </Bar>\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        {/* Top 5 Náklady */}\r\n        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n            Top 5 nákladov\r\n          </h3>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={topExpenses}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis \r\n                dataKey=\"name\" \r\n                angle={-45}\r\n                textAnchor=\"end\"\r\n                height={80}\r\n                tick={{ fontSize: 11 }}\r\n                interval={0}\r\n              />\r\n              <YAxis domain={[0, 'auto']} />\r\n              <Tooltip content={<CustomTooltip />} />\r\n              <Bar dataKey=\"value\" fill=\"#EF4444\">\r\n                {topExpenses.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={entry.color} />\r\n                ))}\r\n              </Bar>\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Zisková marža gauge */}\r\n      {analysis.revenue.total > 0 && (\r\n        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n            Zisková marža\r\n          </h3>\r\n          <div className=\"flex items-center justify-center\">\r\n            <div className=\"relative\">\r\n              <div className=\"w-32 h-32 rounded-full border-8 border-gray-200 flex items-center justify-center\">\r\n                <div className=\"text-center\">\r\n                  <div className={`text-2xl font-bold ${analysis.isProfit ? 'text-green-600' : 'text-red-600'}`}>\r\n                    {((Math.abs(analysis.profit) / analysis.revenue.total) * 100).toFixed(1)}%\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">\r\n                    {analysis.isProfit ? 'Zisk' : 'Strata'}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div \r\n                className={`absolute inset-0 rounded-full border-8 border-transparent ${\r\n                  analysis.isProfit ? 'border-green-500' : 'border-red-500'\r\n                }`}\r\n                style={{\r\n                  clipPath: `polygon(50% 50%, 50% 0%, 100% 0%, 100% 100%, 50% 100%)`,\r\n                  transform: `rotate(${Math.min((Math.abs(analysis.profit) / analysis.revenue.total) * 180, 180)}deg)`\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinancialCharts;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { ArrowLeftIcon, ArrowPathIcon } from '@heroicons/react/24/outline';\r\nimport { accountingService, FinancialAnalysis } from '../services/accountingService';\r\nimport { formatCurrency } from '../utils/formatters';\r\nimport FinancialCharts from '../components/charts/FinancialCharts';\r\n\r\nconst FinancialAnalysisPage: React.FC = () => {\r\n  const { companyId } = useParams<{ companyId: string }>();\r\n  const navigate = useNavigate();\r\n  const [analysis, setAnalysis] = useState<FinancialAnalysis | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [dateFrom, setDateFrom] = useState<string>('');\r\n  const [dateTo, setDateTo] = useState<string>('');\r\n  const [dateError, setDateError] = useState<string>('');\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [company, setCompany] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    if (companyId) {\r\n      loadCompanyInfo();\r\n      loadFinancialAnalysis();\r\n    }\r\n  }, [companyId]);\r\n\r\n  const loadCompanyInfo = async () => {\r\n    try {\r\n      const response = await fetch(`/api/companies/${companyId}`);\r\n      if (response.ok) {\r\n        const companyData = await response.json();\r\n        setCompany(companyData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Chyba pri načítaní informácií o firme:', error);\r\n    }\r\n  };\r\n\r\n  const loadFinancialAnalysis = async () => {\r\n    // Validácia dátumov\r\n    if (dateFrom && dateTo && dateFrom > dateTo) {\r\n      setDateError('Dátum \"Do\" nemôže byť menší ako dátum \"Od\"');\r\n      return;\r\n    } else {\r\n      setDateError('');\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setRefreshing(true);\r\n      setError(null);\r\n      const data = await accountingService.getFinancialAnalysis(\r\n        parseInt(companyId!),\r\n        dateFrom || undefined,\r\n        dateTo || undefined\r\n      );\r\n      setAnalysis(data);\r\n    } catch (err) {\r\n      console.error('Chyba pri načítaní finančnej analýzy:', err);\r\n      setError('Chyba pri načítaní finančnej analýzy');\r\n    } finally {\r\n      setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 p-6\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"animate-pulse\">\r\n            <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-6\"></div>\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\">\r\n              {[1, 2, 3].map((i) => (\r\n                <div key={i} className=\"bg-white p-6 rounded-lg shadow\">\r\n                  <div className=\"h-4 bg-gray-200 rounded w-1/2 mb-2\"></div>\r\n                  <div className=\"h-8 bg-gray-200 rounded w-3/4\"></div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 p-6\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n            <div className=\"flex\">\r\n              <div className=\"flex-shrink-0\">\r\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n              </div>\r\n              <div className=\"ml-3\">\r\n                <h3 className=\"text-sm font-medium text-red-800\">Chyba</h3>\r\n                <div className=\"mt-2 text-sm text-red-700\">{error}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!analysis) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 p-6\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"text-center text-gray-500\">Žiadne dáta k zobrazeniu</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-6\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header s navigáciou späť */}\r\n        <div className=\"bg-white p-6 rounded-lg shadow mb-8\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <button\r\n                onClick={() => navigate('/accounting')}\r\n                className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n              >\r\n                <ArrowLeftIcon className=\"h-4 w-4 mr-2\" />\r\n                Späť na účtovníctvo\r\n              </button>\r\n            </div>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">\r\n                  Analýza hospodárskych výsledkov\r\n                </h1>\r\n                {/* Zobrazenie aktuálnej firmy */}\r\n                {company && (\r\n                  <div className=\"text-sm text-gray-600 mt-1\">\r\n                    Firma: {company.name} (IČO: {company.ico})\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <button\r\n                onClick={loadFinancialAnalysis}\r\n                disabled={refreshing}\r\n                className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\r\n              >\r\n                <ArrowPathIcon className={`h-4 w-4 mr-2 ${refreshing ? 'animate-spin' : ''}`} />\r\n                Obnoviť\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-gray-600 mt-2\">\r\n            Podrobná analýza nákladov, výnosov a zisku/straty\r\n          </p>\r\n        </div>\r\n\r\n        {/* Dátumové filtre */}\r\n        <div className=\"bg-white p-6 rounded-lg shadow mb-8\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Filtrovanie podľa obdobia</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div>\r\n              <label htmlFor=\"dateFrom\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Od dátumu\r\n              </label>\r\n                             <input\r\n                 type=\"date\"\r\n                 id=\"dateFrom\"\r\n                 value={dateFrom}\r\n                 min=\"1990-01-01\"\r\n                 onChange={(e) => setDateFrom(e.target.value)}\r\n                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n               />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"dateTo\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Do dátumu\r\n              </label>\r\n                             <input\r\n                 type=\"date\"\r\n                 id=\"dateTo\"\r\n                 value={dateTo}\r\n                 min={dateFrom || \"1990-01-01\"}\r\n                 onChange={(e) => setDateTo(e.target.value)}\r\n                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n               />\r\n            </div>\r\n                         <div className=\"flex items-end space-x-2\">\r\n               <button\r\n                 onClick={loadFinancialAnalysis}\r\n                 className=\"flex-1 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors\"\r\n               >\r\n                 Aplikovať filtre\r\n               </button>\r\n               <button\r\n                 onClick={() => {\r\n                   setDateFrom('');\r\n                   setDateTo('');\r\n                   setDateError('');\r\n                 }}\r\n                 className=\"flex-1 px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 transition-colors\"\r\n               >\r\n                 Vymazať filtre\r\n               </button>\r\n             </div>\r\n          </div>\r\n                     {dateError && (\r\n             <div className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded-md\">\r\n               <p className=\"text-sm text-red-800\">\r\n                 <strong>Chyba:</strong> {dateError}\r\n               </p>\r\n             </div>\r\n           )}\r\n           {analysis?.filters && (analysis.filters.dateFrom || analysis.filters.dateTo) && (\r\n             <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-md\">\r\n               <p className=\"text-sm text-blue-800\">\r\n                 <strong>Aktívne filtre:</strong> \r\n                 {analysis.filters.dateFrom && ` Od: ${analysis.filters.dateFrom}`}\r\n                 {analysis.filters.dateTo && ` Do: ${analysis.filters.dateTo}`}\r\n               </p>\r\n             </div>\r\n           )}\r\n        </div>\r\n\r\n        {/* Summary Cards */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\">\r\n          {/* Výnosy */}\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Celkové výnosy</p>\r\n                <p className=\"text-2xl font-bold text-green-600\">\r\n                  {formatCurrency(analysis.revenue.total)}\r\n                </p>\r\n                <p className=\"text-sm text-gray-500 mt-1\">\r\n                  {analysis.revenue.count} účtových skupín\r\n                </p>\r\n              </div>\r\n              <div className=\"bg-green-100 p-3 rounded-full\">\r\n                <svg className=\"h-6 w-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Náklady */}\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Celkové náklady</p>\r\n                <p className=\"text-2xl font-bold text-red-600\">\r\n                  {formatCurrency(analysis.expenses.total)}\r\n                </p>\r\n                <p className=\"text-sm text-gray-500 mt-1\">\r\n                  {analysis.expenses.count} účtových skupín\r\n                </p>\r\n              </div>\r\n              <div className=\"bg-red-100 p-3 rounded-full\">\r\n                <svg className=\"h-6 w-6 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Zisk/Strata */}\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">\r\n                  {analysis.isProfit ? 'Zisk' : 'Strata'}\r\n                </p>\r\n                <p className={`text-2xl font-bold ${analysis.isProfit ? 'text-green-600' : 'text-red-600'}`}>\r\n                  {formatCurrency(Math.abs(analysis.profit))}\r\n                </p>\r\n                <p className=\"text-sm text-gray-500 mt-1\">\r\n                  {analysis.isProfit ? 'Pozitívny výsledok' : 'Negatívny výsledok'}\r\n                </p>\r\n              </div>\r\n              <div className={`p-3 rounded-full ${analysis.isProfit ? 'bg-green-100' : 'bg-red-100'}`}>\r\n                <svg className={`h-6 w-6 ${analysis.isProfit ? 'text-green-600' : 'text-red-600'}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  {analysis.isProfit ? (\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  ) : (\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  )}\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Detailed Analysis */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n          {/* Výnosy Detail */}\r\n          <div className=\"bg-white rounded-lg shadow\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">Výnosy (účty 6xx)</h3>\r\n              <p className=\"text-sm text-gray-600\">\r\n                Celková suma: {formatCurrency(analysis.revenue.total)}\r\n              </p>\r\n            </div>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Účet\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Suma\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {analysis.revenue.details.map((item, index) => (\r\n                    <tr key={index} className=\"hover:bg-gray-50\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                        <div>\r\n                          <div className=\"font-semibold\">{item.account_name}</div>\r\n                          <div className=\"text-xs text-gray-500\">{item.account}</div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-green-600 font-medium\">\r\n                        {formatCurrency(item.amount)}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Náklady Detail */}\r\n          <div className=\"bg-white rounded-lg shadow\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">Náklady (účty 5xx)</h3>\r\n              <p className=\"text-sm text-gray-600\">\r\n                Celková suma: {formatCurrency(analysis.expenses.total)}\r\n              </p>\r\n            </div>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Účet\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Suma\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {analysis.expenses.details.map((item, index) => (\r\n                    <tr key={index} className=\"hover:bg-gray-50\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                        <div>\r\n                          <div className=\"font-semibold\">{item.account_name}</div>\r\n                          <div className=\"text-xs text-gray-500\">{item.account}</div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-red-600 font-medium\">\r\n                        {formatCurrency(item.amount)}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n                 {/* Profit/Loss Summary */}\r\n         <div className=\"mt-8 bg-white rounded-lg shadow\">\r\n           <div className=\"px-6 py-4 border-b border-gray-200\">\r\n             <h3 className=\"text-lg font-medium text-gray-900\">Výsledok hospodárenia</h3>\r\n           </div>\r\n           <div className=\"p-6\">\r\n             <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n               <div className=\"text-center\">\r\n                 <p className=\"text-sm font-medium text-gray-600\">Výnosy</p>\r\n                 <p className=\"text-2xl font-bold text-green-600\">\r\n                   {formatCurrency(analysis.revenue.total)}\r\n                 </p>\r\n               </div>\r\n               <div className=\"text-center\">\r\n                 <p className=\"text-sm font-medium text-gray-600\">Náklady</p>\r\n                 <p className=\"text-2xl font-bold text-red-600\">\r\n                   {formatCurrency(analysis.expenses.total)}\r\n                 </p>\r\n               </div>\r\n               <div className=\"text-center\">\r\n                 <p className=\"text-sm font-medium text-gray-600\">\r\n                   {analysis.isProfit ? 'Zisk' : 'Strata'}\r\n                 </p>\r\n                 <p className={`text-2xl font-bold ${analysis.isProfit ? 'text-green-600' : 'text-red-600'}`}>\r\n                   {analysis.isProfit ? '+' : '-'} {formatCurrency(Math.abs(analysis.profit))}\r\n                 </p>\r\n               </div>\r\n             </div>\r\n             \r\n             {/* Profit Margin */}\r\n             {analysis.revenue.total > 0 && (\r\n               <div className=\"mt-6 pt-6 border-t border-gray-200\">\r\n                 <div className=\"text-center\">\r\n                   <p className=\"text-sm font-medium text-gray-600\">Zisková marža</p>\r\n                   <p className={`text-xl font-bold ${analysis.isProfit ? 'text-green-600' : 'text-red-600'}`}>\r\n                     {((Math.abs(analysis.profit) / analysis.revenue.total) * 100).toFixed(2)}%\r\n                   </p>\r\n                 </div>\r\n               </div>\r\n             )}\r\n           </div>\r\n         </div>\r\n\r\n         {/* Grafy */}\r\n         <div className=\"mt-8\">\r\n           <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Grafická analýza</h2>\r\n           <FinancialCharts analysis={analysis} />\r\n         </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinancialAnalysisPage;\r\n"],"names":["accountingService","getSettings","companyId","apiService","get","concat","saveSettings","settings","post","getPermissions","userEmail","savePermissions","permissions","getAllPermissions","getIssuedInvoices","filters","params","URLSearchParams","Object","entries","forEach","_ref","key","value","undefined","append","toString","createIssuedInvoice","invoice","getIssuedInvoiceById","invoiceId","getReceivedInvoices","_ref2","getReceivedInvoiceById","getPudSummary","getFinancialAnalysis","dateFrom","dateTo","url","getStats","_ref3","formatCurrency","amount","currency","arguments","length","Intl","NumberFormat","style","format","formatDate","date","Date","toLocaleDateString","getStatusBadge","status","draft","text","color","sent","paid","overdue","cancelled","received","approved","disputed","getTypeBadge","type","income","expense","testPohodaConnection","_objectSpread","testPohodaInvoices","syncPohodaInvoices","uploadPohodaXml","file","formData","FormData","response","fetch","method","headers","localStorage","getItem","body","ok","Error","json","exportPohodaXml","blob","refreshInvoicesFromMdb","refreshReceivedInvoicesFromMdb","importInvoicesFromMdb","deleteIssuedInvoice","delete","deleteReceivedInvoice","deleteBankTransaction","transactionId","deleteCashTransaction","getDirectory","getVatReturns","year","yearParam","getFullYear","getBankAccounts","console","log","data","getCashAccounts","getBankTransactions","accountNumber","getCashTransactions","isNaN","COLORS","analysis","expensesPieData","expenses","details","map","item","index","name","account_name","revenuePieData","revenue","comparisonData","Math","max","total","isProfit","abs","profit","topExpenses","sort","a","b","slice","account","count","topRevenue","CustomTooltip","active","payload","label","_jsxs","className","children","_jsx","ResponsiveContainer","width","height","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","Tooltip","content","Bar","fill","entry","Cell","PieChart","Pie","cx","cy","labelLine","outerRadius","angle","textAnchor","tick","fontSize","interval","toFixed","clipPath","transform","min","FinancialAnalysisPage","useParams","navigate","useNavigate","setAnalysis","useState","loading","setLoading","error","setError","setDateFrom","setDateTo","dateError","setDateError","refreshing","setRefreshing","company","setCompany","useEffect","loadCompanyInfo","loadFinancialAnalysis","async","companyData","parseInt","err","i","viewBox","fillRule","d","clipRule","onClick","ArrowLeftIcon","ico","disabled","ArrowPathIcon","htmlFor","id","onChange","e","target","stroke","strokeLinecap","strokeLinejoin","strokeWidth","FinancialCharts"],"sourceRoot":""}