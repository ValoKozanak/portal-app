{"version":3,"file":"static/js/22.58d8bf64.chunk.js","mappings":"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","sources":["components/DropboxIntegration.tsx","components/FileUploadModal.tsx","components/TaskModal.tsx","components/FilePreviewModal.tsx","services/dropboxService.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  CloudIcon, \r\n  CheckCircleIcon, \r\n  XCircleIcon,\r\n  ArrowUpTrayIcon,\r\n  ArrowDownTrayIcon,\r\n  TrashIcon,\r\n  FolderIcon,\r\n  DocumentIcon,\r\n  PhotoIcon,\r\n  LinkIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { dropboxService, DropboxFile } from '../services/dropboxService';\r\n\r\ninterface DropboxIntegrationProps {\r\n  companyId?: number;\r\n  userEmail?: string;\r\n  isCompanyView?: boolean;\r\n  onFileSelect?: (file: DropboxFile) => void;\r\n  companyEmail?: string; // Email firmy pre zobrazenie správneho folderu\r\n  userRole?: 'admin' | 'accountant' | 'company'; // Role používateľa\r\n  companyName?: string; // Názov firmy pre zobrazenie\r\n  companyICO?: string; // IČO firmy pre vytvorenie zložky\r\n}\r\n\r\nconst DropboxIntegration: React.FC<DropboxIntegrationProps> = ({ \r\n  companyId, \r\n  userEmail,\r\n  companyEmail,\r\n  isCompanyView = false,\r\n  onFileSelect,\r\n  userRole = 'company',\r\n  companyName,\r\n  companyICO\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [accountInfo, setAccountInfo] = useState<any>(null);\r\n  const [files, setFiles] = useState<DropboxFile[]>([]);\r\n  const [currentPath, setCurrentPath] = useState('');\r\n  const [uploadProgress, setUploadProgress] = useState<number>(0);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    console.log('=== DROPBOX INTEGRATION - checkAuthStatus ===');\r\n    console.log('DropboxIntegration.checkAuthStatus - začiatok');\r\n    \r\n    const authenticated = dropboxService.isAuthenticated();\r\n    console.log('DropboxIntegration.checkAuthStatus - authenticated:', authenticated);\r\n    \r\n    setIsAuthenticated(authenticated);\r\n    \r\n    if (authenticated) {\r\n      try {\r\n        const account = await dropboxService.getAccountInfo();\r\n        setAccountInfo(account);\r\n        loadFiles(authenticated); // Předáme authenticated hodnotu\r\n      } catch (error) {\r\n        console.error('Error loading account info:', error);\r\n        // Token môže byť expirovaný, skúsime ho obnoviť\r\n        try {\r\n          await dropboxService.refreshAccessToken();\r\n          const account = await dropboxService.getAccountInfo();\r\n          setAccountInfo(account);\r\n          loadFiles(true); // Předáme true, protože refreshAccessToken úspěšný\r\n        } catch (refreshError) {\r\n          console.error('Error refreshing token:', refreshError);\r\n          handleLogout();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const authUrl = dropboxService.getAuthUrl();\r\n    window.location.href = authUrl;\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dropboxService.logout();\r\n    setIsAuthenticated(false);\r\n    setAccountInfo(null);\r\n    setFiles([]);\r\n  };\r\n\r\n  const loadFiles = async (authenticatedOverride?: boolean) => {\r\n    const isAuth = authenticatedOverride !== undefined ? authenticatedOverride : isAuthenticated;\r\n    \r\n    if (!isAuth) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      console.log('=== DROPBOX INTEGRATION DEBUG ===');\r\n      // Ak je company view, načítame iba súbory z firmy\r\n      if (isCompanyView && companyICO) {\r\n        const companyFolder = dropboxService.getCompanyFolderPath(companyICO);\r\n        \r\n        const fileList = await dropboxService.listFiles(companyFolder, companyICO);\r\n        \r\n        setFiles(fileList);\r\n        setCurrentPath(companyFolder);\r\n      } else {\r\n        const fileList = await dropboxService.listFiles(currentPath, userEmail);\r\n        setFiles(fileList);\r\n      }\r\n    } catch (error) {\r\n      console.error('DropboxIntegration.loadFiles - ERROR:', error);\r\n      if (error instanceof Error) {\r\n        console.error('DropboxIntegration.loadFiles - error.message:', error.message);\r\n        console.error('DropboxIntegration.loadFiles - error.stack:', error.stack);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile || !isAuthenticated) return;\r\n\r\n    setIsUploading(true);\r\n    setUploadProgress(0);\r\n\r\n    try {\r\n      const icoToUse = isCompanyView && companyICO ? companyICO : undefined;\r\n      \r\n      const result = await dropboxService.uploadFile(selectedFile, currentPath || '', icoToUse);\r\n      \r\n      // Pridanie nového súboru do zoznamu\r\n      setFiles(prev => [...prev, {\r\n        id: result.id,\r\n        name: result.name,\r\n        path_lower: result.path_lower,\r\n        size: result.size,\r\n        server_modified: result.server_modified,\r\n        content_hash: '',\r\n        tag: 'file'\r\n      }]);\r\n\r\n      setSelectedFile(null);\r\n      setUploadProgress(100);\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      alert('Chyba pri nahrávaní súboru');\r\n    } finally {\r\n      setIsUploading(false);\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  const handleFileDownload = async (file: DropboxFile) => {\r\n    if (!isAuthenticated) return;\r\n\r\n    try {\r\n      const blob = await dropboxService.downloadFile(file.path_lower);\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = file.name;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n    } catch (error) {\r\n      console.error('Error downloading file:', error);\r\n      alert('Chyba pri sťahovaní súboru');\r\n    }\r\n  };\r\n\r\n  const handleFileDelete = async (file: DropboxFile) => {\r\n    if (!isAuthenticated) return;\r\n\r\n    if (!window.confirm(`Naozaj chcete vymazať súbor \"${file.name}\"?`)) return;\r\n\r\n    try {\r\n      await dropboxService.deleteFile(file.path_lower);\r\n      setFiles(prev => prev.filter(f => f.id !== file.id));\r\n    } catch (error) {\r\n      console.error('Error deleting file:', error);\r\n      alert('Chyba pri mazaní súboru');\r\n    }\r\n  };\r\n\r\n  const handleFolderClick = (file: DropboxFile) => {\r\n    if (file.tag === 'folder') {\r\n      setCurrentPath(file.path_lower);\r\n      loadFiles();\r\n    }\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    const parentPath = currentPath.split('/').slice(0, -1).join('/');\r\n    setCurrentPath(parentPath);\r\n    loadFiles();\r\n  };\r\n\r\n  const handleCreateSharedLink = async () => {\r\n    if (!isAuthenticated || !companyICO) return;\r\n\r\n    try {\r\n      const sharedLink = await dropboxService.getCompanySharedLink(companyICO);\r\n      // Skopírovanie linku do clipboard\r\n      navigator.clipboard.writeText(sharedLink);\r\n      alert('Zdieľateľný link bol skopírovaný do clipboard!');\r\n    } catch (error) {\r\n      console.error('Error creating shared link:', error);\r\n      alert('Chyba pri vytváraní zdieľateľného linku');\r\n    }\r\n  };\r\n\r\n  const getFileIcon = (file: DropboxFile) => {\r\n    if (file.tag === 'folder') return FolderIcon;\r\n    if (file.name.match(/\\.(jpg|jpeg|png|gif|bmp|svg)$/i)) return PhotoIcon;\r\n    return DocumentIcon;\r\n  };\r\n\r\n  const formatFileSize = (bytes: number) => {\r\n    if (bytes === 0) return '0 B';\r\n    const k = 1024;\r\n    const sizes = ['B', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n        <div className=\"text-center\">\r\n          <CloudIcon className=\"mx-auto h-12 w-12 text-blue-500 mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n            Pripojte sa k Dropbox\r\n          </h3>\r\n          <p className=\"text-gray-600 mb-4\">\r\n            Synchronizujte súbory s vaším Dropbox účtom pre bezpečné zálohovanie a prístup z akéhokoľvek zariadenia.\r\n          </p>\r\n          <button\r\n            onClick={handleLogin}\r\n            className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\r\n          >\r\n            <CloudIcon className=\"h-5 w-5 mr-2\" />\r\n            Pripojiť Dropbox\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md\">\r\n      {/* Header */}\r\n      <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                  <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <CloudIcon className=\"h-6 w-6 text-blue-500\" />\r\n              <div>\r\n                <h2 className=\"text-lg font-semibold text-gray-900\">\r\n                  {isCompanyView && companyEmail \r\n                    ? `Dropbox súbory - ${companyEmail}` \r\n                    : userEmail \r\n                      ? `Dropbox súbory - ${userEmail}` \r\n                      : 'Dropbox súbory'\r\n                  }\r\n                </h2>\r\n                {accountInfo && (\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    Prihlásený ako: {userRole === 'company' && companyName ? companyName : accountInfo.name.display_name}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              {/* Tlačidlá zobrazujeme len pre admin a accountant */}\r\n              {userRole !== 'company' && (\r\n                <>\r\n                  {(userEmail || (isCompanyView && companyEmail)) && (\r\n                    <button\r\n                      onClick={handleCreateSharedLink}\r\n                      className=\"inline-flex items-center px-3 py-1 text-sm bg-green-600 text-white rounded-md hover:bg-green-700\"\r\n                      title=\"Vytvoriť zdieľateľný link\"\r\n                    >\r\n                      <LinkIcon className=\"h-4 w-4 mr-1\" />\r\n                      Zdieľať\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={handleLogout}\r\n                    className=\"text-sm text-red-600 hover:text-red-700\"\r\n                  >\r\n                    Odhlásiť\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n      </div>\r\n\r\n      {/* Upload Section */}\r\n      <div className=\"px-6 py-4 border-b border-gray-200\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <input\r\n            type=\"file\"\r\n            onChange={(e) => setSelectedFile(e.target.files?.[0] || null)}\r\n            className=\"flex-1 border border-gray-300 rounded-md px-3 py-2\"\r\n          />\r\n          <button\r\n            onClick={handleFileUpload}\r\n            disabled={!selectedFile || isUploading}\r\n            className=\"inline-flex items-center px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            <ArrowUpTrayIcon className=\"h-5 w-5 mr-2\" />\r\n            {isUploading ? 'Nahrávam...' : 'Nahrať'}\r\n          </button>\r\n        </div>\r\n        {isUploading && (\r\n          <div className=\"mt-2\">\r\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n              <div \r\n                className=\"bg-green-600 h-2 rounded-full transition-all duration-300\"\r\n                style={{ width: `${uploadProgress}%` }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Navigation */}\r\n      <div className=\"px-6 py-2 bg-gray-50 border-b border-gray-200\">\r\n        <div className=\"flex items-center space-x-2 text-sm\">\r\n          <button\r\n            onClick={handleBackClick}\r\n            disabled={!currentPath}\r\n            className=\"text-blue-600 hover:text-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            ..\r\n          </button>\r\n          <span className=\"text-gray-600\">/</span>\r\n          <span className=\"text-gray-900\">{currentPath || 'root'}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* File List */}\r\n      <div className=\"p-6\">\r\n        {isLoading ? (\r\n          <div className=\"text-center py-8\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\r\n            <p className=\"mt-2 text-gray-600\">Načítavam súbory...</p>\r\n          </div>\r\n        ) : files.length > 0 ? (\r\n          <div className=\"space-y-2\">\r\n            {files.map((file) => {\r\n              const Icon = getFileIcon(file);\r\n              return (\r\n                <div\r\n                  key={file.id}\r\n                  className=\"flex items-center justify-between p-3 border border-gray-200 rounded-lg hover:bg-gray-50\"\r\n                >\r\n                  <div \r\n                    className=\"flex items-center space-x-3 flex-1 cursor-pointer\"\r\n                    onClick={() => file.tag === 'folder' ? handleFolderClick(file) : onFileSelect?.(file)}\r\n                  >\r\n                    <Icon className=\"h-5 w-5 text-gray-500\" />\r\n                    <div>\r\n                      <p className=\"font-medium text-gray-900\">{file.name}</p>\r\n                      {file.tag === 'file' && (\r\n                        <p className=\"text-sm text-gray-500\">\r\n                          {formatFileSize(file.size)} • {new Date(file.server_modified).toLocaleDateString('sk-SK')}\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {file.tag === 'file' && (\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <button\r\n                        onClick={() => handleFileDownload(file)}\r\n                        className=\"text-blue-600 hover:text-blue-700 p-1\"\r\n                        title=\"Stiahnuť\"\r\n                      >\r\n                        <ArrowDownTrayIcon className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleFileDelete(file)}\r\n                        className=\"text-red-600 hover:text-red-700 p-1\"\r\n                        title=\"Vymazať\"\r\n                      >\r\n                        <TrashIcon className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center py-8\">\r\n            <CloudIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900\">Žiadne súbory</h3>\r\n            <p className=\"mt-1 text-sm text-gray-500\">\r\n              {currentPath ? 'Tento priečinok je prázdny' : 'Začnite nahrávaním súborov'}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropboxIntegration;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { apiService } from '../services/apiService';\r\nimport { \r\n  XMarkIcon, \r\n  DocumentArrowUpIcon,\r\n  DocumentIcon,\r\n  DocumentTextIcon,\r\n  PhotoIcon,\r\n  ArchiveBoxIcon,\r\n  TrashIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { FileData } from '../services/apiService';\r\n\r\ninterface UploadProgress {\r\n  loaded: number;\r\n  total: number;\r\n  percentage: number;\r\n}\r\n\r\ninterface FileUploadModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  companyId?: number;\r\n  companies?: Array<{ id: number; name: string }>;\r\n  onFileUpload: (file: FileData) => void;\r\n  userRole?: 'admin' | 'accountant' | 'company';\r\n}\r\n\r\nconst FileUploadModal: React.FC<FileUploadModalProps> = ({ \r\n  isOpen, \r\n  onClose, \r\n  companyId,\r\n  companies = [],\r\n  onFileUpload,\r\n  userRole = 'company'\r\n}) => {\r\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\r\n  const [category, setCategory] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [tags, setTags] = useState('');\r\n  const [selectedCompanyId, setSelectedCompanyId] = useState<number>(companyId || 0);\r\n\r\n  // Pre firmy automaticky nastavíme ich vlastnú firmu\r\n  useEffect(() => {\r\n    if (userRole === 'company' && companyId) {\r\n      setSelectedCompanyId(companyId);\r\n    }\r\n  }, [userRole, companyId]);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState<Record<string, UploadProgress>>({});\r\n  const [uploadErrors, setUploadErrors] = useState<Record<string, string>>({});\r\n\r\n  const categories = [\r\n    { id: 'documents', name: 'Dokumenty', icon: DocumentTextIcon },\r\n    { id: 'invoices', name: 'Faktúry', icon: DocumentIcon },\r\n    { id: 'contracts', name: 'Zmluvy', icon: DocumentTextIcon },\r\n    { id: 'reports', name: 'Správy', icon: DocumentTextIcon },\r\n    { id: 'images', name: 'Obrázky', icon: PhotoIcon },\r\n    { id: 'archives', name: 'Archívy', icon: ArchiveBoxIcon },\r\n    { id: 'other', name: 'Ostatné', icon: DocumentIcon }\r\n  ];\r\n\r\n  const allowedFileTypes = [\r\n    'application/pdf',\r\n    'application/msword',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n    'application/vnd.ms-excel',\r\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    'image/jpeg',\r\n    'image/png',\r\n    'image/gif',\r\n    'application/zip',\r\n    'application/x-rar-compressed'\r\n  ];\r\n\r\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      const filesArray = Array.from(e.target.files);\r\n      \r\n      // Validácia súborov\r\n      const validFiles = filesArray.filter(file => {\r\n        // Kontrola veľkosti (10MB = 10 * 1024 * 1024 bytes)\r\n        if (file.size > 10 * 1024 * 1024) {\r\n          setUploadErrors(prev => ({\r\n            ...prev,\r\n            [file.name]: 'Súbor je príliš veľký (max. 10MB)'\r\n          }));\r\n          return false;\r\n        }\r\n\r\n        // Kontrola typu\r\n        if (!allowedFileTypes.includes(file.type)) {\r\n          setUploadErrors(prev => ({\r\n            ...prev,\r\n            [file.name]: 'Nepodporovaný typ súboru'\r\n          }));\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      });\r\n\r\n      setSelectedFiles(prev => [...prev, ...validFiles]);\r\n    }\r\n  };\r\n\r\n  const removeFile = (index: number) => {\r\n    const file = selectedFiles[index];\r\n    setSelectedFiles(prev => prev.filter((_, i) => i !== index));\r\n    setUploadErrors(prev => {\r\n      const newErrors = { ...prev };\r\n      delete newErrors[file.name];\r\n      return newErrors;\r\n    });\r\n    setUploadProgress(prev => {\r\n      const newProgress = { ...prev };\r\n      delete newProgress[file.name];\r\n      return newProgress;\r\n    });\r\n  };\r\n\r\n  const getFileIcon = (fileType: string) => {\r\n    if (fileType.startsWith('image/')) return PhotoIcon;\r\n    if (fileType.includes('pdf')) return DocumentTextIcon;\r\n    if (fileType.includes('zip') || fileType.includes('rar')) return ArchiveBoxIcon;\r\n    return DocumentIcon;\r\n  };\r\n\r\n  const formatFileSize = (bytes: number) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (selectedFiles.length === 0) {\r\n      alert('Vyberte aspoň jeden súbor na nahranie');\r\n      return;\r\n    }\r\n\r\n    if (!selectedCompanyId) {\r\n      alert('Vyberte firmu, pre ktorú nahrávate súbory');\r\n      return;\r\n    }\r\n\r\n    if (!category) {\r\n      alert('Vyberte typ súboru');\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setUploadErrors({});\r\n\r\n    try {\r\n      for (const file of selectedFiles) {\r\n        // Progress tracking pre každý súbor\r\n        setUploadProgress(prev => ({\r\n          ...prev,\r\n          [file.name]: { loaded: 0, total: file.size, percentage: 0 }\r\n        }));\r\n\r\n        try {\r\n          // Skutočné nahrávanie súboru cez API\r\n          const fileData = await apiService.uploadFile(file, selectedCompanyId, 'user@portal.sk', category);\r\n          \r\n          // Voláme onFileUpload s kompletným objektom súboru\r\n          onFileUpload(fileData);\r\n        } catch (error) {\r\n          setUploadErrors(prev => ({\r\n            ...prev,\r\n            [file.name]: error instanceof Error ? error.message : 'Neznáma chyba'\r\n          }));\r\n        }\r\n      }\r\n    } finally {\r\n      setIsUploading(false);\r\n      setSelectedFiles([]);\r\n      setDescription('');\r\n      setTags('');\r\n      setUploadProgress({});\r\n      // Modal sa zatvorí až po úspešnom nahratí všetkých súborov\r\n      // onClose() sa volá v handleFileUpload v FileManager\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex justify-between items-center p-6 border-b\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900\">\r\n            Nahrať súbory\r\n          </h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600\"\r\n          >\r\n            <XMarkIcon className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-6 space-y-6\">\r\n          {/* Výber firmy - skrytý pre firmy */}\r\n          {userRole !== 'company' && (\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Firma *\r\n              </label>\r\n              <select\r\n                value={selectedCompanyId}\r\n                onChange={(e) => setSelectedCompanyId(Number(e.target.value))}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n                required\r\n              >\r\n                <option value=\"\">Vyberte firmu</option>\r\n                {companies.map((company) => (\r\n                  <option key={company.id} value={company.id}>\r\n                    {company.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Pre firmy zobrazíme informáciu o ich firme */}\r\n          {userRole === 'company' && companyId && (\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-md p-4\">\r\n              <p className=\"text-sm text-blue-800\">\r\n                <strong>Súbory sa nahrávajú pre vašu firmu</strong>\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Kategória */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Typ súboru *\r\n            </label>\r\n            <select\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n              required\r\n            >\r\n              <option value=\"\">Vyberte typ súboru</option>\r\n              {categories.map((cat) => (\r\n                <option key={cat.id} value={cat.id}>\r\n                  {cat.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Upload area */}\r\n          <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\r\n            <DocumentArrowUpIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n            <div className=\"mt-4\">\r\n              <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\r\n                <span className=\"text-primary-600 hover:text-primary-700 font-medium\">\r\n                  Kliknite pre výber súborov\r\n                </span>\r\n                <span className=\"text-gray-500\"> alebo ich sem presuňte</span>\r\n              </label>\r\n              <input\r\n                id=\"file-upload\"\r\n                type=\"file\"\r\n                multiple\r\n                onChange={handleFileSelect}\r\n                className=\"hidden\"\r\n                accept=\".pdf,.doc,.docx,.xls,.xlsx,.jpg,.jpeg,.png,.zip,.rar\"\r\n              />\r\n            </div>\r\n            <p className=\"text-xs text-gray-500 mt-2\">\r\n              PDF, DOC, XLS, obrázky, archívy (max. 10MB na súbor)\r\n            </p>\r\n          </div>\r\n\r\n          {/* Selected files */}\r\n          {selectedFiles.length > 0 && (\r\n            <div>\r\n              <h3 className=\"text-sm font-medium text-gray-700 mb-3\">\r\n                Vybrané súbory ({selectedFiles.length})\r\n              </h3>\r\n              <div className=\"space-y-2\">\r\n                {selectedFiles.map((file, index) => {\r\n                  const Icon = getFileIcon(file.type);\r\n                  const progress = uploadProgress[file.name];\r\n                  const error = uploadErrors[file.name];\r\n                  \r\n                  return (\r\n                    <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-md\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <Icon className=\"h-5 w-5 text-gray-400\" />\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-gray-900\">{file.name}</p>\r\n                          <p className=\"text-xs text-gray-500\">{formatFileSize(file.size)}</p>\r\n                          {error && (\r\n                            <p className=\"text-xs text-red-600\">{error}</p>\r\n                          )}\r\n                          {progress && (\r\n                            <div className=\"mt-1\">\r\n                              <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                                <div \r\n                                  className=\"bg-primary-600 h-2 rounded-full transition-all duration-300\"\r\n                                  style={{ width: `${progress.percentage}%` }}\r\n                                ></div>\r\n                              </div>\r\n                              <p className=\"text-xs text-gray-500 mt-1\">\r\n                                {progress.percentage}% ({formatFileSize(progress.loaded)} / {formatFileSize(progress.total)})\r\n                              </p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => removeFile(index)}\r\n                        className=\"text-red-500 hover:text-red-700\"\r\n                      >\r\n                        <TrashIcon className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Description */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Popis (voliteľné)\r\n            </label>\r\n            <textarea\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              rows={3}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n              placeholder=\"Krátky popis súborov...\"\r\n            />\r\n          </div>\r\n\r\n          {/* Tags */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Tagy (voliteľné)\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={tags}\r\n              onChange={(e) => setTags(e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n              placeholder=\"dôležité, urgent, 2024 (oddelené čiarkami)\"\r\n            />\r\n          </div>\r\n\r\n          {/* Actions */}\r\n          <div className=\"flex space-x-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"flex-1 px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n            >\r\n              Zrušiť\r\n            </button>\r\n            <button\r\n              onClick={handleUpload}\r\n              disabled={selectedFiles.length === 0 || isUploading || !selectedCompanyId}\r\n              className=\"flex-1 bg-primary-600 text-white py-2 px-4 rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isUploading ? 'Nahrávam...' : `Nahrať ${selectedFiles.length} súborov`}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadModal;\r\n","import React, { useState, useEffect } from 'react';\nimport { XMarkIcon, CalendarIcon } from '@heroicons/react/24/outline';\n\nexport interface Task {\n  id: string;\n  title: string;\n  description: string;\n  status: 'pending' | 'in_progress' | 'completed' | 'cancelled';\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  assignedTo: string;\n  assignedToEmail?: string;\n  dueDate: string;\n  createdAt: string;\n  createdBy: string;\n  category: string;\n  estimatedHours?: number;\n  actualHours?: number;\n  attachments?: string[];\n  comments?: Comment[];\n  companyId?: number;\n  companyName?: string;\n}\n\ninterface Comment {\n  id: string;\n  text: string;\n  author: string;\n  createdAt: string;\n}\n\ninterface TaskModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (task: Omit<Task, 'id' | 'createdAt'>) => void;\n  task?: Task | null;\n  companyEmployees: Employee[];\n  company?: {\n    id: number;\n    name: string;\n    assignedToAccountants?: string[];\n  };\n  // Nové props pre účtovníka\n  isAccountant?: boolean;\n  assignedCompanies?: Array<{\n    id: number;\n    name: string;\n    ico: string;\n  }>;\n  userEmail?: string; // Email prihláseného používateľa\n}\n\nexport interface Employee {\n  id: string;\n  name: string;\n  email: string;\n  role: string;\n  department: string;\n}\n\nconst TaskModal: React.FC<TaskModalProps> = ({ \n  isOpen, \n  onClose, \n  onSave, \n  task, \n  companyEmployees,\n  company,\n  isAccountant = false,\n  assignedCompanies = [],\n  userEmail = ''\n}) => {\n  const [formData, setFormData] = useState<{\n    title: string;\n    description: string;\n    status: 'pending' | 'in_progress' | 'completed' | 'cancelled';\n    priority: 'low' | 'medium' | 'high' | 'urgent';\n    assignedTo: string;\n    dueDate: string;\n    category: string;\n    estimatedHours: string;\n  }>({\n    title: '',\n    description: '',\n    status: 'pending',\n    priority: 'medium',\n    assignedTo: '',\n    dueDate: '',\n    category: '',\n    estimatedHours: '',\n  });\n\n  const [selectedCompanyId, setSelectedCompanyId] = useState<number | ''>('');\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Kategórie úloh\n  const taskCategories = [\n    { id: 'accounting', name: 'Účtovníctvo' },\n    { id: 'tax', name: 'Daňové záležitosti' },\n    { id: 'legal', name: 'Právne záležitosti' },\n    { id: 'hr', name: 'Personalistika' },\n    { id: 'operations', name: 'Operácie' },\n    { id: 'marketing', name: 'Marketing' },\n    { id: 'it', name: 'IT podpora' },\n    { id: 'other', name: 'Ostatné' },\n  ];\n\n  // Naplnenie formulára pri editácii\n  useEffect(() => {\n    if (!isOpen) return; // Neresetuj ak nie je modal otvorený\n    \n    if (task) {\n      setFormData({\n        title: task.title,\n        description: task.description,\n        status: task.status,\n        priority: task.priority,\n        assignedTo: task.assignedTo,\n        dueDate: task.dueDate,\n        category: task.category,\n        estimatedHours: task.estimatedHours?.toString() || '',\n      });\n      // Nastaviť firmu ak je dostupná\n      if (task.companyId) {\n        setSelectedCompanyId(task.companyId);\n      }\n    } else {\n      // Reset formulára pre novú úlohu\n      setFormData({\n        title: '',\n        description: '',\n        status: 'pending',\n        priority: 'medium',\n        assignedTo: '',\n        dueDate: '',\n        category: '',\n        estimatedHours: '',\n      });\n      // Nastaviť prvú firmu ako default pre účtovníka\n      if (isAccountant && assignedCompanies.length > 0) {\n        setSelectedCompanyId(assignedCompanies[0].id);\n      } else {\n        setSelectedCompanyId('');\n      }\n    }\n    setErrors({});\n  }, [task, isOpen, isAccountant]); // Odstránené assignedCompanies z závislostí\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.title.trim()) {\n      newErrors.title = 'Názov úlohy je povinný';\n    }\n\n    if (!formData.description.trim()) {\n      newErrors.description = 'Popis úlohy je povinný';\n    }\n\n    if (!formData.assignedTo) {\n      newErrors.assignedTo = 'Priradenie zamestnanca je povinné';\n    }\n\n    if (!formData.dueDate) {\n      newErrors.dueDate = 'Termín dokončenia je povinný';\n    } else {\n      const dueDate = new Date(formData.dueDate);\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      \n      if (dueDate < today) {\n        newErrors.dueDate = 'Termín nemôže byť v minulosti';\n      }\n    }\n\n    if (!formData.category) {\n      newErrors.category = 'Kategória je povinná';\n    }\n\n    // Pre účtovníka kontrolujeme aj vybranú firmu\n    if (isAccountant && !selectedCompanyId) {\n      newErrors.company = 'Výber firmy je povinný';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      // Pre účtovníkov používame generické hodnoty pre assignedTo, ale email účtovníka pre assignedToEmail\n      const assignedToEmail = isAccountant ? userEmail : formData.assignedTo;\n      const assignedToName = isAccountant \n        ? formData.assignedTo \n        : (formData.assignedTo.includes('@') \n          ? formData.assignedTo.split('@')[0].replace(/[._]/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n          : formData.assignedTo);\n      \n      // Určiť companyId a companyName\n      let companyId: number | undefined;\n      let companyName: string | undefined;\n\n      if (isAccountant && selectedCompanyId) {\n        // Pre účtovníka používame vybranú firmu\n        companyId = selectedCompanyId as number;\n        const selectedCompany = assignedCompanies.find(c => c.id === selectedCompanyId);\n        companyName = selectedCompany?.name;\n      } else if (company) {\n        // Pre ostatných používame company prop\n        companyId = company.id;\n        companyName = company.name;\n      }\n\n      const taskData: Omit<Task, 'id' | 'createdAt'> = {\n        title: formData.title.trim(),\n        description: formData.description.trim(),\n        status: formData.status,\n        priority: formData.priority,\n        assignedTo: assignedToName,\n        assignedToEmail: assignedToEmail,\n        dueDate: formData.dueDate,\n        category: formData.category,\n        estimatedHours: formData.estimatedHours ? parseInt(formData.estimatedHours) : undefined,\n        createdBy: userEmail || 'Aktuálny používateľ',\n        companyId: companyId,\n        companyName: companyName,\n      };\n\n      await onSave(taskData);\n      onClose();\n    } catch (error) {\n      console.error('Chyba pri ukladaní úlohy:', error);\n      setErrors({ submit: 'Nepodarilo sa uložiť úlohu' });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleInputChange = (field: string, value: string) => {\n    console.log('handleInputChange called:', field, value);\n    setFormData(prev => {\n      const newData = { ...prev, [field]: value };\n      console.log('New formData:', newData);\n      return newData;\n    });\n    \n    // Vyčistiť chybu pre dané pole\n    setErrors(prev => {\n      if (prev[field]) {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      }\n      return prev;\n    });\n  };\n\n  if (!isOpen) return null;\n\n  // Kontrola či sú dostupné firmy\n  if (!isAccountant && !company) {\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\n        <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full p-6\">\n          <div className=\"text-center\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">\n              Chyba\n            </h2>\n            <p className=\"text-gray-600 mb-6\">\n              Pre vytvorenie úlohy musíte mať aspoň jednu firmu. Najprv vytvorte firmu.\n            </p>\n            <button\n              onClick={onClose}\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\n            >\n              Zavrieť\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">\n            {task ? 'Upraviť úlohu' : 'Nová úloha'}\n          </h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600\"\n          >\n            <XMarkIcon className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n          {/* Názov úlohy */}\n          <div>\n            <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Názov úlohy *\n            </label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={formData.title}\n              onChange={(e) => handleInputChange('title', e.target.value)}\n              className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 ${\n                errors.title ? 'border-red-500' : 'border-gray-300'\n              }`}\n              placeholder=\"Zadajte názov úlohy\"\n            />\n            {errors.title && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.title}</p>\n            )}\n          </div>\n\n          {/* Popis */}\n          <div>\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Popis úlohy *\n            </label>\n            <textarea\n              id=\"description\"\n              value={formData.description}\n              onChange={(e) => handleInputChange('description', e.target.value)}\n              rows={4}\n              className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 ${\n                errors.description ? 'border-red-500' : 'border-gray-300'\n              }`}\n              placeholder=\"Podrobný popis úlohy...\"\n            />\n            {errors.description && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.description}</p>\n            )}\n          </div>\n\n          {/* Kategória a Priorita */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Kategória *\n              </label>\n              <select\n                id=\"category\"\n                value={formData.category}\n                onChange={(e) => handleInputChange('category', e.target.value)}\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 ${\n                  errors.category ? 'border-red-500' : 'border-gray-300'\n                }`}\n              >\n                <option value=\"\">Vyberte kategóriu</option>\n                {taskCategories.map((cat) => (\n                  <option key={cat.id} value={cat.id}>\n                    {cat.name}\n                  </option>\n                ))}\n              </select>\n              {errors.category && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.category}</p>\n              )}\n            </div>\n\n            <div>\n              <label htmlFor=\"priority\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Priorita\n              </label>\n              <select\n                id=\"priority\"\n                value={formData.priority}\n                onChange={(e) => handleInputChange('priority', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\n              >\n                <option value=\"low\">Nízka</option>\n                <option value=\"medium\">Stredná</option>\n                <option value=\"high\">Vysoká</option>\n                <option value=\"urgent\">Urgentná</option>\n              </select>\n            </div>\n          </div>\n\n          {/* Výber firmy pre účtovníka */}\n          {isAccountant && (\n            <div>\n              <label htmlFor=\"company\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Priradiť firme *\n              </label>\n              <select\n                id=\"company\"\n                value={selectedCompanyId}\n                onChange={(e) => setSelectedCompanyId(e.target.value ? parseInt(e.target.value) : '')}\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 ${\n                  errors.company ? 'border-red-500' : 'border-gray-300'\n                }`}\n              >\n                <option value=\"\">Vyberte firmu</option>\n                {assignedCompanies.map((company) => (\n                  <option key={company.id} value={company.id}>\n                    {company.name} (IČO: {company.ico})\n                  </option>\n                ))}\n              </select>\n              {errors.company && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.company}</p>\n              )}\n            </div>\n          )}\n\n          {/* Priradenie a Termín */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label htmlFor=\"assignedTo\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                {isAccountant ? 'Priradiť zamestnancovi firmy' : 'Priradiť zamestnancovi'} *\n              </label>\n              <select\n                id=\"assignedTo\"\n                value={formData.assignedTo}\n                onChange={(e) => handleInputChange('assignedTo', e.target.value)}\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 ${\n                  errors.assignedTo ? 'border-red-500' : 'border-gray-300'\n                }`}\n              >\n                {isAccountant ? (\n                  <>\n                    <option value=\"\">Vyberte zamestnanca firmy</option>\n                    <option value=\"owner\">Vlastník firmy</option>\n                    <option value=\"manager\">Manažér</option>\n                    <option value=\"employee\">Zamestnanec</option>\n                    <option value=\"accountant\">Účtovník</option>\n                  </>\n                ) : (\n                  <>\n                    <option value=\"\">Vyberte účtovníka</option>\n                    {company && company.assignedToAccountants && company.assignedToAccountants.length > 0 ? (\n                      company.assignedToAccountants.map((accountantEmail, index) => {\n                        const accountantName = accountantEmail.includes('@') \n                          ? accountantEmail.split('@')[0].replace(/[._]/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n                          : accountantEmail;\n                        return (\n                          <option key={index} value={accountantEmail}>\n                            {accountantName} - Účtovník ({accountantEmail})\n                          </option>\n                        );\n                      })\n                    ) : (\n                      <option value=\"\" disabled>\n                        Žiadni priradení účtovníci\n                      </option>\n                    )}\n                  </>\n                )}\n              </select>\n              {errors.assignedTo && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.assignedTo}</p>\n              )}\n            </div>\n\n            <div>\n              <label htmlFor=\"dueDate\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Termín dokončenia *\n              </label>\n              <div className=\"relative\">\n                <input\n                  type=\"date\"\n                  id=\"dueDate\"\n                  value={formData.dueDate}\n                  onChange={(e) => handleInputChange('dueDate', e.target.value)}\n                  className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 ${\n                    errors.dueDate ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                />\n                <CalendarIcon className=\"absolute right-3 top-2.5 h-5 w-5 text-gray-400\" />\n              </div>\n              {errors.dueDate && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.dueDate}</p>\n              )}\n            </div>\n          </div>\n\n          {/* Odhadované hodiny */}\n          <div>\n            <label htmlFor=\"estimatedHours\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Odhadované hodiny\n            </label>\n            <input\n              type=\"number\"\n              id=\"estimatedHours\"\n              value={formData.estimatedHours}\n              onChange={(e) => handleInputChange('estimatedHours', e.target.value)}\n              min=\"0\"\n              step=\"0.5\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\n              placeholder=\"Napríklad: 8\"\n            />\n          </div>\n\n          {/* Status (len pri editácii) */}\n          {task && (\n            <div>\n              <label htmlFor=\"status\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Status\n              </label>\n              <select\n                id=\"status\"\n                value={formData.status}\n                onChange={(e) => handleInputChange('status', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\n              >\n                <option value=\"pending\">Čakajúca</option>\n                <option value=\"in_progress\">V spracovaní</option>\n                <option value=\"completed\">Dokončená</option>\n                <option value=\"cancelled\">Zrušená</option>\n              </select>\n            </div>\n          )}\n\n          {/* Chyba pri odosielaní */}\n          {errors.submit && (\n            <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n              <p className=\"text-sm text-red-600\">{errors.submit}</p>\n            </div>\n          )}\n\n          {/* Tlačidlá */}\n          <div className=\"flex justify-end space-x-3 pt-6 border-t border-gray-200\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-primary-500\"\n            >\n              Zrušiť\n            </button>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-primary-600 border border-transparent rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isSubmitting ? 'Ukladám...' : (task ? 'Uložiť zmeny' : 'Vytvoriť úlohu')}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskModal;\n","import React, { useState, useEffect } from 'react';\r\nimport { XMarkIcon, ArrowLeftIcon, ArrowRightIcon } from '@heroicons/react/24/outline';\r\nimport { FileData } from '../services/apiService';\r\n\r\ninterface FilePreviewModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  file: FileData | null;\r\n}\r\n\r\nconst FilePreviewModal: React.FC<FilePreviewModalProps> = ({ isOpen, onClose, file }) => {\r\n  const [previewUrl, setPreviewUrl] = useState<string>('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    if (isOpen && file) {\r\n      loadPreview();\r\n    }\r\n  }, [isOpen, file]);\r\n\r\n  const loadPreview = async () => {\r\n    if (!file) return;\r\n\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      // Používame apiService pre autentifikáciu\r\n      const { apiService } = await import('../services/apiService');\r\n      const blob = await apiService.downloadFile(file.id);\r\n      const url = window.URL.createObjectURL(blob);\r\n      setPreviewUrl(url);\r\n    } catch (err) {\r\n      setError('Nepodarilo sa načítať náhľad súboru');\r\n      console.error('Chyba pri načítaní náhľadu:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleOpenInNewTab = async () => {\r\n    if (!file) return;\r\n\r\n    try {\r\n      // Používame apiService pre autentifikáciu\r\n      const { apiService } = await import('../services/apiService');\r\n      const blob = await apiService.downloadFile(file.id);\r\n      const url = window.URL.createObjectURL(blob);\r\n      window.open(url, '_blank');\r\n    } catch (err) {\r\n      console.error('Chyba pri otváraní súboru:', err);\r\n      alert('Nepodarilo sa otvoriť súbor');\r\n    }\r\n  };\r\n\r\n  const handleDownload = async () => {\r\n    if (!file) return;\r\n\r\n    try {\r\n      // Používame apiService pre konzistenciu\r\n      const { apiService } = await import('../services/apiService');\r\n      const blob = await apiService.downloadFile(file.id);\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = file.original_name;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n    } catch (err) {\r\n      console.error('Chyba pri sťahovaní súboru:', err);\r\n      alert('Nepodarilo sa stiahnuť súbor');\r\n    }\r\n  };\r\n\r\n  const isImage = file?.file_type.includes('image');\r\n  const isPdf = file?.file_type.includes('pdf');\r\n  const isText = file?.file_type.includes('text') || file?.file_type.includes('document');\r\n\r\n  if (!isOpen || !file) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl w-[95vw] h-[95vh] flex flex-col\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900\">{file.original_name}</h2>\r\n            <span className=\"text-sm text-gray-500\">\r\n              {file.file_size > 1024 * 1024 \r\n                ? `${(file.file_size / (1024 * 1024)).toFixed(1)} MB`\r\n                : `${(file.file_size / 1024).toFixed(1)} KB`\r\n              }\r\n            </span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <button\r\n              onClick={handleOpenInNewTab}\r\n              className=\"px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n              title=\"Otvoriť v novom okne\"\r\n            >\r\n              Otvoriť\r\n            </button>\r\n            <button\r\n              onClick={handleDownload}\r\n              className=\"px-3 py-1 text-sm bg-green-600 text-white rounded hover:bg-green-700\"\r\n              title=\"Stiahnuť súbor\"\r\n            >\r\n              Stiahnuť\r\n            </button>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-1 text-gray-400 hover:text-gray-600\"\r\n            >\r\n              <XMarkIcon className=\"h-6 w-6\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"flex-1 overflow-hidden\">\r\n          {loading ? (\r\n            <div className=\"flex items-center justify-center h-full\">\r\n              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n              <span className=\"ml-3 text-gray-600\">Načítavam náhľad...</span>\r\n            </div>\r\n          ) : error ? (\r\n            <div className=\"flex items-center justify-center h-full\">\r\n              <div className=\"text-center\">\r\n                <div className=\"text-red-500 text-lg mb-2\">⚠️</div>\r\n                <p className=\"text-gray-600\">{error}</p>\r\n                <div className=\"mt-4 space-x-2\">\r\n                  <button\r\n                    onClick={handleOpenInNewTab}\r\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n                  >\r\n                    Otvoriť v novom okne\r\n                  </button>\r\n                  <button\r\n                    onClick={handleDownload}\r\n                    className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\r\n                  >\r\n                    Stiahnuť súbor\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"h-full overflow-auto\">\r\n              {isImage && previewUrl && (\r\n                <div className=\"flex items-center justify-center h-full p-4\">\r\n                  <img\r\n                    src={previewUrl}\r\n                    alt={file.original_name}\r\n                    className=\"max-w-full max-h-full object-contain\"\r\n                  />\r\n                </div>\r\n              )}\r\n              {isPdf && previewUrl && (\r\n                <div className=\"h-full\">\r\n                  <iframe\r\n                    src={previewUrl}\r\n                    className=\"w-full h-full border-0\"\r\n                    title={file.original_name}\r\n                  />\r\n                </div>\r\n              )}\r\n              {isText && (\r\n                <div className=\"h-full p-4\">\r\n                  <pre className=\"whitespace-pre-wrap text-sm text-gray-800 bg-gray-50 p-4 rounded border h-full overflow-auto\">\r\n                    {/* Pre textové súbory by sme tu zobrazili obsah */}\r\n                    Simulovaný textový súbor: {file.original_name}\r\n                    \r\n                    Tento súbor bol vytvorený v simulovanom prostredí.\r\n                    Dátum vytvorenia: {new Date(file.created_at).toLocaleDateString('sk-SK')}\r\n                    Veľkosť: {file.file_size} bajtov\r\n                    Kategória: {file.file_type}\r\n                    \r\n                    Obsah súboru:\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. \r\n                    Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \r\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \r\n                    nisi ut aliquip ex ea commodo consequat.\r\n                  </pre>\r\n                </div>\r\n              )}\r\n              {!isImage && !isPdf && !isText && (\r\n                <div className=\"flex items-center justify-center h-full\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-gray-500 text-lg mb-2\">📄</div>\r\n                    <p className=\"text-gray-600\">Náhľad nie je dostupný pre tento typ súboru</p>\r\n                    <div className=\"mt-4 space-x-2\">\r\n                      <button\r\n                        onClick={handleOpenInNewTab}\r\n                        className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n                      >\r\n                        Otvoriť v novom okne\r\n                      </button>\r\n                      <button\r\n                        onClick={handleDownload}\r\n                        className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\r\n                      >\r\n                        Stiahnuť súbor\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilePreviewModal;\r\n\r\n","import { Dropbox } from 'dropbox';\r\n\r\n// Dropbox konfigurácia\r\nconst DROPBOX_APP_KEY = process.env.REACT_APP_DROPBOX_APP_KEY || '';\r\nconst DROPBOX_APP_SECRET = process.env.REACT_APP_DROPBOX_APP_SECRET || '';\r\nconst DROPBOX_REDIRECT_URI = process.env.REACT_APP_DROPBOX_REDIRECT_URI || 'http://localhost:3000/dropbox-callback';\r\n\r\nexport interface DropboxFile {\r\n  id: string;\r\n  name: string;\r\n  path_lower: string;\r\n  size: number;\r\n  server_modified: string;\r\n  content_hash: string;\r\n  tag: string;\r\n}\r\n\r\nexport interface DropboxUploadResult {\r\n  id: string;\r\n  name: string;\r\n  path_lower: string;\r\n  size: number;\r\n  server_modified: string;\r\n}\r\n\r\nexport interface DropboxAuthResult {\r\n  access_token: string;\r\n  token_type: string;\r\n  expires_in: number;\r\n  refresh_token?: string;\r\n  scope: string;\r\n  uid: string;\r\n  account_id: string;\r\n}\r\n\r\nclass DropboxService {\r\n  private dbx: Dropbox | null = null;\r\n  private accessToken: string | null = null;\r\n\r\n  constructor() {\r\n    console.log('DropboxService: Inicializujem...');\r\n    console.log('DropboxService: Environment premenné:', {\r\n      appKey: DROPBOX_APP_KEY,\r\n      appSecret: DROPBOX_APP_SECRET ? '***' : 'CHÝBA',\r\n      appSecretLength: DROPBOX_APP_SECRET ? DROPBOX_APP_SECRET.length : 0,\r\n      redirectUri: DROPBOX_REDIRECT_URI\r\n    });\r\n    \r\n    this.accessToken = localStorage.getItem('dropbox_access_token');\r\n    console.log('DropboxService: Token z localStorage:', this.accessToken ? 'existuje' : 'neexistuje');\r\n    \r\n    if (this.accessToken) {\r\n      this.initializeDropbox(this.accessToken);\r\n      console.log('DropboxService: Dropbox klient inicializovaný');\r\n    } else {\r\n      console.log('DropboxService: Žiadny token, Dropbox klient nie je inicializovaný');\r\n    }\r\n  }\r\n\r\n  // Inicializácia Dropbox klienta\r\n  private initializeDropbox(accessToken: string) {\r\n    this.dbx = new Dropbox({\r\n      accessToken: accessToken,\r\n      fetch: window.fetch.bind(window)\r\n    });\r\n  }\r\n\r\n  // Generovanie OAuth URL pre autentifikáciu\r\n  getAuthUrl(): string {\r\n    // Vyčistíme starý state pred vytvorením nového\r\n    localStorage.removeItem('dropbox_auth_state');\r\n    \r\n    const state = Math.random().toString(36).substring(7);\r\n    localStorage.setItem('dropbox_auth_state', state);\r\n    \r\n    console.log('DropboxService.getAuthUrl - konfigurácia:', {\r\n      appKey: DROPBOX_APP_KEY,\r\n      redirectUri: DROPBOX_REDIRECT_URI,\r\n      state: state,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n    \r\n    const authUrl = `https://www.dropbox.com/oauth2/authorize?client_id=${DROPBOX_APP_KEY}&response_type=code&redirect_uri=${encodeURIComponent(DROPBOX_REDIRECT_URI)}&state=${state}&token_access_type=offline`;\r\n    \r\n    console.log('DropboxService.getAuthUrl - vygenerovaný URL:', authUrl);\r\n    \r\n    return authUrl;\r\n  }\r\n\r\n  // Spracovanie OAuth callback\r\n  async handleAuthCallback(code: string, state: string): Promise<DropboxAuthResult> {\r\n    console.log('dropboxService.handleAuthCallback - začiatok');\r\n    console.log('Parametre:', { code: code.substring(0, 10) + '...', state });\r\n    \r\n    const savedState = localStorage.getItem('dropbox_auth_state');\r\n    console.log('Uložený state:', savedState);\r\n    console.log('State porovnanie:', { received: state, saved: savedState, match: state === savedState });\r\n    \r\n    if (state !== savedState) {\r\n      console.error('State nezhoduje:', { received: state, saved: savedState });\r\n      console.error('Všetky localStorage položky:', {\r\n        dropbox_auth_state: localStorage.getItem('dropbox_auth_state'),\r\n        dropbox_access_token: localStorage.getItem('dropbox_access_token'),\r\n        dropbox_refresh_token: localStorage.getItem('dropbox_refresh_token')\r\n      });\r\n      throw new Error('Invalid state parameter');\r\n    }\r\n    \r\n    // State kontrola úspešná, pokračujem v spracovaní...\r\n    console.log('State kontrola úspešná, pokračujem v spracovaní...');\r\n\r\n    try {\r\n      console.log('Posielam požiadavku na Dropbox API...');\r\n      console.log('DropboxService.handleAuthCallback - parametre pre API:', {\r\n        code: code.substring(0, 10) + '...',\r\n        client_id: DROPBOX_APP_KEY,\r\n        client_secret: DROPBOX_APP_SECRET ? '***' : 'CHÝBA',\r\n        redirect_uri: DROPBOX_REDIRECT_URI\r\n      });\r\n      \r\n      const requestBody = new URLSearchParams({\r\n        code: code,\r\n        grant_type: 'authorization_code',\r\n        client_id: DROPBOX_APP_KEY,\r\n        client_secret: DROPBOX_APP_SECRET,\r\n        redirect_uri: DROPBOX_REDIRECT_URI,\r\n      });\r\n      \r\n      console.log('DropboxService.handleAuthCallback - request body:', requestBody.toString());\r\n      \r\n      const response = await window.fetch('https://api.dropboxapi.com/oauth2/token', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: requestBody,\r\n      });\r\n\r\n      console.log('Dropbox API response status:', response.status);\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('Dropbox API error:', errorText);\r\n        console.error('Dropbox API response headers:', Object.fromEntries(response.headers.entries()));\r\n        throw new Error(`Failed to exchange code for token: ${errorText}`);\r\n      }\r\n\r\n      const authResult: DropboxAuthResult = await response.json();\r\n      console.log('Dropbox API úspešná odpoveď:', { \r\n        access_token: authResult.access_token.substring(0, 10) + '...',\r\n        token_type: authResult.token_type,\r\n        expires_in: authResult.expires_in\r\n      });\r\n      \r\n      // Uloženie tokenu\r\n      this.accessToken = authResult.access_token;\r\n      localStorage.setItem('dropbox_access_token', authResult.access_token);\r\n      if (authResult.refresh_token) {\r\n        localStorage.setItem('dropbox_refresh_token', authResult.refresh_token);\r\n      }\r\n      \r\n      // Vyčistíme state po úspešnom spracovaní\r\n      localStorage.removeItem('dropbox_auth_state');\r\n      console.log('State vyčistený po úspešnom spracovaní');\r\n\r\n      console.log('Tokeny uložené do localStorage');\r\n\r\n      // Inicializácia Dropbox klienta\r\n      this.initializeDropbox(authResult.access_token);\r\n      console.log('Dropbox klient inicializovaný');\r\n\r\n      return authResult;\r\n    } catch (error) {\r\n      console.error('Error during OAuth callback:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Kontrola, či je používateľ prihlásený\r\n  isAuthenticated(): boolean {\r\n    // Skontrolujeme token z localStorage\r\n    const tokenFromStorage = localStorage.getItem('dropbox_access_token');\r\n    \r\n    // Ak máme token v localStorage ale nie v pamäti, inicializujeme klienta\r\n    if (tokenFromStorage && !this.accessToken) {\r\n      this.accessToken = tokenFromStorage;\r\n      this.initializeDropbox(tokenFromStorage);\r\n      console.log('DropboxService.isAuthenticated: Reinicializoval klienta z localStorage');\r\n    }\r\n    \r\n    const authenticated = this.dbx !== null && this.accessToken !== null;\r\n    console.log('DropboxService.isAuthenticated:', { \r\n      dbx: this.dbx !== null, \r\n      accessToken: this.accessToken !== null,\r\n      tokenFromStorage: tokenFromStorage ? 'existuje' : 'neexistuje',\r\n      result: authenticated \r\n    });\r\n    return authenticated;\r\n  }\r\n\r\n  // Odhlásenie\r\n  logout(): void {\r\n    this.dbx = null;\r\n    this.accessToken = null;\r\n    localStorage.removeItem('dropbox_access_token');\r\n    localStorage.removeItem('dropbox_refresh_token');\r\n    localStorage.removeItem('dropbox_auth_state');\r\n  }\r\n\r\n  // Získanie informácií o účte\r\n  async getAccountInfo() {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      console.log('DropboxService.getAccountInfo - volám Dropbox API...');\r\n      // Pridáme kontrolu, či je dbx správne inicializovaný\r\n      if (!this.dbx.usersGetCurrentAccount) {\r\n        throw new Error('Dropbox client not properly initialized');\r\n      }\r\n      \r\n      // Pridáme kontrolu, či je fetch správne nastavený\r\n      if (!this.dbx.usersGetCurrentAccount) {\r\n        console.error('Dropbox client methods not available');\r\n        throw new Error('Dropbox client methods not available');\r\n      }\r\n      \r\n      const response = await this.dbx.usersGetCurrentAccount();\r\n      console.log('DropboxService.getAccountInfo - odpoveď:', response);\r\n      return response.result;\r\n    } catch (error) {\r\n      console.error('Error getting account info:', error);\r\n      // Ak je problém s fetch, skúsime reinicializovať klienta\r\n      if (error instanceof Error && (error.message.includes('fetch') || error.message.includes('Illegal invocation'))) {\r\n        console.log('DropboxService.getAccountInfo - problém s fetch, reinicializujem klienta...');\r\n        const token = localStorage.getItem('dropbox_access_token');\r\n        if (token) {\r\n          this.initializeDropbox(token);\r\n          const response = await this.dbx!.usersGetCurrentAccount();\r\n          console.log('DropboxService.getAccountInfo - reinicializácia úspešná:', response);\r\n          return response.result;\r\n        }\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Získanie zoznamu súborov z priečinka\r\n  async listFiles(path: string = '', ico?: string): Promise<DropboxFile[]> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      console.log('=== DROPBOX SERVICE DEBUG ===');\r\n      console.log('DropboxService.listFiles - začiatok');\r\n      console.log('DropboxService.listFiles - path:', path);\r\n      console.log('DropboxService.listFiles - ico:', ico);\r\n      console.log('DropboxService.listFiles - this.dbx exists:', !!this.dbx);\r\n      \r\n      // Ak je zadaný ico, použijeme špecifickú cestu pre firmu\r\n      let targetPath = path;\r\n      if (ico && !path.startsWith('/Portal/Companies/')) {\r\n        // Vytvoríme cestu pre firmu na základe ico\r\n        const companyFolder = this.getCompanyFolderPath(ico);\r\n        targetPath = companyFolder + (path ? '/' + path : '');\r\n        console.log('DropboxService.listFiles - companyFolder:', companyFolder);\r\n      }\r\n      \r\n      console.log('DropboxService.listFiles - targetPath:', targetPath);\r\n      console.log('DropboxService.listFiles - volám this.dbx.filesListFolder...');\r\n\r\n      const response = await this.dbx.filesListFolder({\r\n        path: targetPath,\r\n        limit: 100\r\n      });\r\n\r\n      console.log('DropboxService.listFiles - response received');\r\n      const mappedFiles = response.result.entries.map(entry => ({\r\n        id: entry['.tag'] === 'deleted' ? '' : (entry as any).id || '',\r\n        name: entry.name,\r\n        path_lower: entry.path_lower || '',\r\n        size: entry['.tag'] === 'file' ? (entry as any).size || 0 : 0,\r\n        server_modified: entry['.tag'] === 'file' ? (entry as any).server_modified || '' : '',\r\n        content_hash: entry['.tag'] === 'file' ? (entry as any).content_hash || '' : '',\r\n        tag: entry['.tag']\r\n      }));\r\n      \r\n      return mappedFiles;\r\n    } catch (error) {\r\n      console.error('DropboxService.listFiles - ERROR:', error);\r\n      if (error instanceof Error) {\r\n        console.error('DropboxService.listFiles - error.message:', error.message);\r\n        console.error('DropboxService.listFiles - error.stack:', error.stack);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Generovanie cesty pre firmu na základe IČO\r\n  getCompanyFolderPath(ico: string): string {\r\n    const icoHash = this.hashICO(ico);\r\n    return `/Portal/Companies/${icoHash}`;\r\n  }\r\n\r\n  // Jednoduchý hash IČO pre vytvorenie unikátnej cesty\r\n  hashICO(ico: string): string {\r\n    // IČO je už unikátne, takže ho môžeme použiť priamo\r\n    // Len odstránime medzery a špeciálne znaky pre bezpečnosť\r\n    return ico.replace(/\\s/g, '').replace(/[^a-zA-Z0-9]/g, '');\r\n  }\r\n\r\n  // Vytvorenie zdieľateľnej zložky pre firmu\r\n  async createCompanyFolder(ico: string): Promise<string> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      const companyPath = this.getCompanyFolderPath(ico);\r\n      \r\n      // Vytvorenie priečinka\r\n      const response = await this.dbx.filesCreateFolderV2({\r\n        path: companyPath,\r\n        autorename: false\r\n      });\r\n      \r\n      return companyPath;\r\n    } catch (error) {\r\n      console.error('Error creating company folder:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Získanie zdieľateľného linku pre firmu\r\n  async getCompanySharedLink(ico: string): Promise<string> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      const companyPath = this.getCompanyFolderPath(ico);\r\n      return await this.getSharedLink(companyPath);\r\n    } catch (error) {\r\n      console.error('Error getting company shared link:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Nahrávanie súboru do Dropbox\r\n  async uploadFile(file: File, path: string, ico?: string, onProgress?: (progress: number) => void): Promise<DropboxUploadResult> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      const fileBuffer = await file.arrayBuffer();\r\n      \r\n      // Ak je zadaný IČO, použijeme špecifickú cestu pre firmu\r\n      let fullPath = path + '/' + file.name;\r\n      if (ico && !path.startsWith('/Portal/Companies/')) {\r\n        const companyFolder = this.getCompanyFolderPath(ico);\r\n        fullPath = companyFolder + '/' + (path ? path + '/' : '') + file.name;\r\n        console.log('DropboxService.uploadFile - companyFolder:', companyFolder);\r\n      }\r\n      \r\n      console.log('DropboxService.uploadFile - fullPath:', fullPath);\r\n\r\n      const response = await this.dbx.filesUpload({\r\n        path: fullPath,\r\n        contents: fileBuffer,\r\n        mode: { '.tag': 'overwrite' },\r\n        autorename: true,\r\n        mute: false\r\n      });\r\n\r\n      console.log('DropboxService.uploadFile - upload response:', response);\r\n\r\n      return {\r\n        id: response.result.id,\r\n        name: response.result.name,\r\n        path_lower: response.result.path_lower || '',\r\n        size: response.result.size,\r\n        server_modified: response.result.server_modified\r\n      };\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Stiahnutie súboru z Dropbox\r\n  async downloadFile(path: string): Promise<Blob> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      const response = await this.dbx.filesDownload({\r\n        path: path\r\n      });\r\n\r\n      // Konverzia ArrayBuffer na Blob\r\n      const fileBlob = (response.result as any).fileBlob;\r\n      const blob = new Blob([fileBlob], {\r\n        type: fileBlob.type || 'application/octet-stream'\r\n      });\r\n\r\n      return blob;\r\n    } catch (error) {\r\n      console.error('Error downloading file:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Vymazanie súboru z Dropbox\r\n  async deleteFile(path: string): Promise<void> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      await this.dbx.filesDeleteV2({\r\n        path: path\r\n      });\r\n    } catch (error) {\r\n      console.error('Error deleting file:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Vytvorenie priečinka\r\n  async createFolder(path: string): Promise<void> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      await this.dbx.filesCreateFolderV2({\r\n        path: path,\r\n        autorename: true\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating folder:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Získanie zdieľateľného linku\r\n  async getSharedLink(path: string): Promise<string> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      const response = await this.dbx.sharingCreateSharedLinkWithSettings({\r\n        path: path,\r\n        settings: {\r\n          requested_visibility: { '.tag': 'public' },\r\n          audience: { '.tag': 'public' },\r\n          access: { '.tag': 'viewer' }\r\n        }\r\n      });\r\n\r\n      return response.result.url;\r\n    } catch (error) {\r\n      console.error('Error creating shared link:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Obnovenie access tokenu\r\n  async refreshAccessToken(): Promise<string> {\r\n    const refreshToken = localStorage.getItem('dropbox_refresh_token');\r\n    if (!refreshToken) {\r\n      throw new Error('No refresh token available');\r\n    }\r\n\r\n    try {\r\n      const response = await window.fetch('https://api.dropboxapi.com/oauth2/token', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          grant_type: 'refresh_token',\r\n          refresh_token: refreshToken,\r\n          client_id: DROPBOX_APP_KEY,\r\n          client_secret: DROPBOX_APP_SECRET,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to refresh token');\r\n      }\r\n\r\n      const result = await response.json();\r\n      this.accessToken = result.access_token;\r\n      localStorage.setItem('dropbox_access_token', result.access_token);\r\n\r\n      // Inicializácia Dropbox klienta s novým tokenom\r\n      this.initializeDropbox(result.access_token);\r\n\r\n      return result.access_token;\r\n    } catch (error) {\r\n      console.error('Error refreshing token:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ===== ADMIN FUNKCIE =====\r\n\r\n  // Vytvorenie zdieľateľného linku s oprávneniami (pre admin)\r\n  async createSharedLink(folderPath: string, permissions: {\r\n    canView: boolean;\r\n    canEdit: boolean;\r\n    canUpload: boolean;\r\n    canDelete: boolean;\r\n  }): Promise<string> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      console.log('DropboxService.createSharedLink - vytváram link pre:', folderPath);\r\n      console.log('DropboxService.createSharedLink - oprávnenia:', permissions);\r\n      \r\n      // Určenie prístupu na základe oprávnení\r\n      let access: { '.tag': 'viewer' } | { '.tag': 'editor' } = { '.tag': 'viewer' };\r\n      if (permissions.canEdit || permissions.canUpload || permissions.canDelete) {\r\n        access = { '.tag': 'editor' };\r\n      }\r\n      \r\n      console.log('DropboxService.createSharedLink - access level:', access);\r\n\r\n      const response = await this.dbx.sharingCreateSharedLinkWithSettings({\r\n        path: folderPath,\r\n        settings: {\r\n          requested_visibility: { '.tag': 'public' },\r\n          audience: { '.tag': 'public' },\r\n          access: access\r\n        }\r\n      });\r\n\r\n      console.log('DropboxService.createSharedLink - úspešne vytvorený link:', response.result.url);\r\n      return response.result.url;\r\n    } catch (error) {\r\n      console.error('Error creating shared link with permissions:', error);\r\n      \r\n             // Ak je chyba 409 (Conflict) alebo \"shared_link_already_exists\", skúsime získať existujúci link\r\n       if (error instanceof Error && (error.message.includes('shared_link_already_exists') || error.message.includes('409'))) {\r\n         console.log('Link už existuje (409), získavam existujúci link...');\r\n         try {\r\n           const existingLinks = await this.dbx.sharingListSharedLinks({\r\n             path: folderPath,\r\n             direct_only: false\r\n           });\r\n           \r\n           if (existingLinks.result.links.length > 0) {\r\n             console.log('Našiel som existujúci link:', existingLinks.result.links[0].url);\r\n             return existingLinks.result.links[0].url;\r\n           }\r\n         } catch (listError) {\r\n           console.error('Chyba pri získavaní existujúceho linku:', listError);\r\n         }\r\n       }\r\n      \r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Odvolanie zdieľateľného linku\r\n  async revokeSharedLink(shareLink: string): Promise<void> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      console.log('DropboxService.revokeSharedLink - odvolávam link:', shareLink);\r\n      \r\n      await this.dbx.sharingRevokeSharedLink({\r\n        url: shareLink\r\n      });\r\n      \r\n      console.log('DropboxService.revokeSharedLink - link úspešne odvolaný');\r\n    } catch (error) {\r\n      console.error('Error revoking shared link:', error);\r\n      \r\n      // Ak link už neexistuje, považujeme to za úspech\r\n      if (error instanceof Error && error.message.includes('not_found')) {\r\n        console.log('Link už neexistuje, považujem za úspešne odvolaný');\r\n        return;\r\n      }\r\n      \r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Získanie všetkých zdieľateľných linkov\r\n  async getAllSharedLinks(): Promise<any[]> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      console.log('DropboxService.getAllSharedLinks - získavam všetky zdieľateľné linky...');\r\n      \r\n      const response = await this.dbx.sharingListSharedLinks({\r\n        path: '/Portal/Companies',\r\n        direct_only: false\r\n      });\r\n\r\n      console.log('DropboxService.getAllSharedLinks - načítané linky:', response.result.links);\r\n      return response.result.links;\r\n    } catch (error) {\r\n      console.error('Error getting shared links:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Kontrola, či zložka existuje\r\n  async checkFolderExists(folderPath: string): Promise<boolean> {\r\n    if (!this.dbx) {\r\n      throw new Error('Dropbox not initialized');\r\n    }\r\n\r\n    try {\r\n      console.log('DropboxService.checkFolderExists - kontrolujem zložku:', folderPath);\r\n      \r\n      const response = await this.dbx.filesGetMetadata({\r\n        path: folderPath\r\n      });\r\n      \r\n      console.log('DropboxService.checkFolderExists - zložka existuje:', response);\r\n      return response.result['.tag'] === 'folder';\r\n    } catch (error) {\r\n      console.log('DropboxService.checkFolderExists - zložka neexistuje:', error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const dropboxService = new DropboxService();\r\nexport default dropboxService;\r\n"],"names":["_ref","companyId","userEmail","companyEmail","isCompanyView","onFileSelect","userRole","companyName","companyICO","isAuthenticated","setIsAuthenticated","useState","isLoading","setIsLoading","accountInfo","setAccountInfo","files","setFiles","currentPath","setCurrentPath","uploadProgress","setUploadProgress","isUploading","setIsUploading","selectedFile","setSelectedFile","useEffect","checkAuthStatus","async","console","log","authenticated","dropboxService","account","getAccountInfo","loadFiles","error","refreshAccessToken","refreshError","handleLogout","handleLogin","authUrl","getAuthUrl","window","location","href","logout","undefined","authenticatedOverride","companyFolder","getCompanyFolderPath","fileList","listFiles","Error","message","stack","formatFileSize","bytes","i","Math","floor","parseFloat","pow","toFixed","_jsxs","className","children","_jsx","CloudIcon","concat","name","display_name","_Fragment","onClick","sharedLink","getCompanySharedLink","navigator","clipboard","writeText","alert","title","LinkIcon","type","onChange","e","_e$target$files","target","icoToUse","result","uploadFile","prev","id","path_lower","size","server_modified","content_hash","tag","disabled","ArrowUpTrayIcon","style","width","handleBackClick","parentPath","split","slice","join","length","map","file","Icon","FolderIcon","match","PhotoIcon","DocumentIcon","getFileIcon","handleFolderClick","Date","toLocaleDateString","blob","downloadFile","url","URL","createObjectURL","a","document","createElement","download","body","appendChild","click","revokeObjectURL","removeChild","handleFileDownload","ArrowDownTrayIcon","confirm","deleteFile","filter","f","handleFileDelete","TrashIcon","isOpen","onClose","companies","onFileUpload","selectedFiles","setSelectedFiles","category","setCategory","description","setDescription","tags","setTags","selectedCompanyId","setSelectedCompanyId","uploadErrors","setUploadErrors","categories","icon","DocumentTextIcon","ArchiveBoxIcon","allowedFileTypes","XMarkIcon","value","Number","required","company","cat","DocumentArrowUpIcon","htmlFor","multiple","validFiles","Array","from","_objectSpread","includes","accept","index","fileType","startsWith","progress","percentage","loaded","total","_","newErrors","newProgress","removeFile","rows","placeholder","fileData","apiService","onSave","task","companyEmployees","isAccountant","assignedCompanies","formData","setFormData","status","priority","assignedTo","dueDate","estimatedHours","errors","setErrors","isSubmitting","setIsSubmitting","_task$estimatedHours","toString","handleInputChange","field","newData","onSubmit","preventDefault","validateForm","trim","today","setHours","Object","keys","assignedToEmail","assignedToName","replace","l","toUpperCase","selectedCompany","find","c","taskData","parseInt","createdBy","submit","ico","assignedToAccountants","accountantEmail","accountantName","CalendarIcon","min","step","previewUrl","setPreviewUrl","loading","setLoading","setError","loadPreview","err","handleOpenInNewTab","open","handleDownload","original_name","isImage","file_type","isPdf","isText","file_size","src","alt","created_at","DROPBOX_APP_KEY","process","DROPBOX_APP_SECRET","DROPBOX_REDIRECT_URI","constructor","dbx","accessToken","appKey","appSecret","appSecretLength","redirectUri","this","localStorage","getItem","initializeDropbox","Dropbox","fetch","bind","removeItem","state","random","substring","setItem","timestamp","toISOString","encodeURIComponent","handleAuthCallback","code","savedState","received","saved","dropbox_auth_state","dropbox_access_token","dropbox_refresh_token","client_id","client_secret","redirect_uri","requestBody","URLSearchParams","grant_type","response","method","headers","ok","errorText","text","fromEntries","entries","authResult","json","access_token","token_type","expires_in","refresh_token","tokenFromStorage","usersGetCurrentAccount","token","path","arguments","targetPath","filesListFolder","limit","entry","icoHash","hashICO","createCompanyFolder","companyPath","filesCreateFolderV2","autorename","getSharedLink","onProgress","fileBuffer","arrayBuffer","fullPath","filesUpload","contents","mode","mute","fileBlob","filesDownload","Blob","filesDeleteV2","createFolder","sharingCreateSharedLinkWithSettings","settings","requested_visibility","audience","access","refreshToken","createSharedLink","folderPath","permissions","canEdit","canUpload","canDelete","existingLinks","sharingListSharedLinks","direct_only","links","listError","revokeSharedLink","shareLink","sharingRevokeSharedLink","getAllSharedLinks","checkFolderExists","filesGetMetadata"],"sourceRoot":""}