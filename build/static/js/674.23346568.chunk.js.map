{"version":3,"file":"static/js/674.23346568.chunk.js","mappings":"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","sources":["services/accountingService.ts","../node_modules/@heroicons/react/24/outline/esm/DocumentTextIcon.js","../node_modules/@heroicons/react/24/outline/esm/ChartBarIcon.js","../node_modules/@heroicons/react/24/outline/esm/CreditCardIcon.js","../node_modules/@heroicons/react/24/outline/esm/ArrowDownIcon.js","../node_modules/@heroicons/react/24/outline/esm/ChartPieIcon.js","pages/AccountingPage.tsx","../node_modules/@heroicons/react/24/outline/esm/ArrowLeftIcon.js","../node_modules/@heroicons/react/24/outline/esm/BanknotesIcon.js"],"sourcesContent":["import { apiService, ApiResponse } from './apiService';\r\n\r\n// ===== ÚČTOVNÍCTVO SERVICE =====\r\n\r\nexport interface AccountingSettings {\r\n  id?: number;\r\n  company_id: number;\r\n  pohoda_enabled: boolean;\r\n  pohoda_url?: string;\r\n  pohoda_username?: string;\r\n  pohoda_password?: string;\r\n  pohoda_ico?: string;\r\n  pohoda_year?: string;\r\n  auto_sync: boolean;\r\n  sync_frequency: 'hourly' | 'daily' | 'weekly' | 'manual';\r\n  last_sync?: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport interface AccountingPermissions {\r\n  id?: number;\r\n  user_email: string;\r\n  company_id: number;\r\n  can_view_invoices: boolean;\r\n  can_create_invoices: boolean;\r\n  can_edit_invoices: boolean;\r\n  can_delete_invoices: boolean;\r\n  can_view_bank: boolean;\r\n  can_edit_bank: boolean;\r\n  can_view_cash: boolean;\r\n  can_edit_cash: boolean;\r\n  can_view_reports: boolean;\r\n  can_export_data: boolean;\r\n  can_manage_settings: boolean;\r\n  granted_by: string;\r\n  granted_at?: string;\r\n}\r\n\r\nexport interface FinancialAnalysis {\r\n  expenses: {\r\n    total: number;\r\n    count: number;\r\n    details: Array<{\r\n      account: string;\r\n      account_name: string;\r\n      amount: number;\r\n      count: number;\r\n    }>;\r\n  };\r\n  revenue: {\r\n    total: number;\r\n    count: number;\r\n    details: Array<{\r\n      account: string;\r\n      account_name: string;\r\n      amount: number;\r\n      count: number;\r\n    }>;\r\n  };\r\n  profit: number;\r\n  isProfit: boolean;\r\n  filters?: {\r\n    dateFrom: string | null;\r\n    dateTo: string | null;\r\n  };\r\n}\r\n\r\nexport interface InvoiceItem {\r\n  id?: number;\r\n  description: string;\r\n  quantity: number;\r\n  unit_price: number;\r\n  vat_rate: number;\r\n  total_price: number;\r\n  vat_amount: number;\r\n  unit?: string;\r\n}\r\n\r\nexport interface IssuedInvoice {\r\n  id?: number;\r\n  company_id: number;\r\n  invoice_number: string;\r\n  customer_name: string;\r\n  customer_ico?: string;\r\n  customer_dic?: string;\r\n  customer_address?: string;\r\n  issue_date: string;\r\n  due_date: string;\r\n  total_amount: number;\r\n  vat_amount: number;\r\n  \r\n  // MDB polia - základy DPH\r\n  kc0?: number;\r\n  kc1?: number;\r\n  kc2?: number;\r\n  kc3?: number;\r\n  \r\n  // MDB polia - DPH\r\n  kc_dph1?: number;\r\n  kc_dph2?: number;\r\n  kc_dph3?: number;\r\n  \r\n  // MDB polia - celkové sumy\r\n  kc_celkem?: number;\r\n  \r\n  // MDB polia - ďalšie informácie\r\n  var_sym?: string;\r\n  s_text?: string;\r\n  mdb_id?: number;\r\n  rel_tp_fak?: number;\r\n  datum?: string;\r\n  dat_splat?: string;\r\n  firma?: string;\r\n  ico?: string;\r\n  dic?: string;\r\n  ulice?: string;\r\n  psc?: string;\r\n  obec?: string;\r\n  mdb_cislo?: string;\r\n  \r\n  // MDB polia - likvidácia a platby\r\n  kc_likv?: number;\r\n  kc_u?: number;\r\n  dat_likv?: string;\r\n  \r\n  currency: string;\r\n  status: 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled';\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  items?: InvoiceItem[];\r\n}\r\n\r\nexport interface ReceivedInvoice {\r\n  id?: number;\r\n  company_id: number;\r\n  invoice_number: string;\r\n  supplier_name: string;\r\n  supplier_ico?: string;\r\n  supplier_dic?: string;\r\n  supplier_address?: string;\r\n  issue_date: string;\r\n  due_date: string;\r\n  total_amount: number;\r\n  vat_amount: number;\r\n  \r\n  // MDB polia - základy DPH\r\n  kc0?: number;\r\n  kc1?: number;\r\n  kc2?: number;\r\n  kc3?: number;\r\n  \r\n  // MDB polia - DPH\r\n  kc_dph1?: number;\r\n  kc_dph2?: number;\r\n  kc_dph3?: number;\r\n  \r\n  // MDB polia - celkové sumy\r\n  kc_celkem?: number;\r\n  \r\n  // MDB polia - ďalšie informácie\r\n  var_sym?: string;\r\n  s_text?: string;\r\n  mdb_id?: number;\r\n  rel_tp_fak?: number;\r\n  datum?: string;\r\n  dat_splat?: string;\r\n  firma?: string;\r\n  ico?: string;\r\n  dic?: string;\r\n  ulice?: string;\r\n  psc?: string;\r\n  obec?: string;\r\n  mdb_cislo?: string;\r\n  \r\n  // MDB polia - likvidácia a platby\r\n  kc_likv?: number;\r\n  kc_u?: number;\r\n  dat_likv?: string;\r\n  \r\n  currency: string;\r\n  status: 'received' | 'approved' | 'paid' | 'overdue' | 'disputed';\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  items?: InvoiceItem[];\r\n}\r\n\r\nexport interface BankTransaction {\r\n  id?: number;\r\n  company_id: number;\r\n  transaction_date: string;\r\n  description: string;\r\n  amount: number;\r\n  currency: string;\r\n  type: 'income' | 'expense';\r\n  category?: string;\r\n  bank_account?: string;\r\n  reference?: string;\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport interface CashTransaction {\r\n  id?: number;\r\n  company_id: number;\r\n  transaction_date: string;\r\n  description: string;\r\n  amount: number;\r\n  currency: string;\r\n  type: 'income' | 'expense';\r\n  category?: string;\r\n  receipt_number?: string;\r\n  pohoda_id?: string;\r\n  notes?: string;\r\n  created_by: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\n\r\n\r\nexport interface AccountingStats {\r\n  issued_invoices: {\r\n    total_count: number;\r\n    total_amount: number;\r\n    paid_amount: number;\r\n    overdue_amount: number;\r\n  };\r\n  received_invoices: {\r\n    total_count: number;\r\n    total_amount: number;\r\n    paid_amount: number;\r\n    overdue_amount: number;\r\n  };\r\n  bank: {\r\n    total_income: number;\r\n    total_expense: number;\r\n  };\r\n  cash: {\r\n    total_income: number;\r\n    total_expense: number;\r\n  };\r\n}\r\n\r\nexport class AccountingService {\r\n  // 1. NASTAVENIA ÚČTOVNÍCTVA\r\n\r\n    async getSettings(companyId: number): Promise<AccountingSettings> {\r\n    const response = await apiService.get(`/accounting/settings/${companyId}`); \r\n    return response as AccountingSettings;\r\n  }\r\n\r\n  async saveSettings(companyId: number, settings: Partial<AccountingSettings>): Promise<any> {\r\n    const response = await apiService.post(`/accounting/settings/${companyId}`, settings);\r\n    return response;\r\n  }\r\n\r\n  // 2. PRÁVA PRE ÚČTOVNÍCTVO\r\n\r\n  async getPermissions(companyId: number, userEmail: string): Promise<AccountingPermissions> {\r\n    const response = await apiService.get(`/accounting/permissions/${companyId}/${userEmail}`);\r\n    return response as AccountingPermissions;\r\n  }\r\n\r\n  async savePermissions(companyId: number, permissions: Partial<AccountingPermissions>): Promise<any> {\r\n    const response = await apiService.post(`/accounting/permissions/${companyId}`, permissions);\r\n    return response;\r\n  }\r\n\r\n  async getAllPermissions(companyId: number): Promise<AccountingPermissions[]> {\r\n    const response = await apiService.get(`/accounting/permissions/${companyId}`);\r\n    return response as AccountingPermissions[];\r\n  }\r\n\r\n  // 3. VYDANÉ FAKTÚRY\r\n\r\n  async getIssuedInvoices(\r\n    companyId: number, \r\n    filters?: {\r\n      status?: string;\r\n      date_from?: string;\r\n      date_to?: string;\r\n      limit?: number;\r\n      offset?: number;\r\n    }\r\n  ): Promise<IssuedInvoice[]> {\r\n    const params = new URLSearchParams();\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          params.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n    \r\n    const response = await apiService.get(`/accounting/issued-invoices/${companyId}?${params}`);\r\n    return response as IssuedInvoice[];\r\n  }\r\n\r\n  async createIssuedInvoice(companyId: number, invoice: Partial<IssuedInvoice>): Promise<any> {\r\n    const response = await apiService.post(`/accounting/issued-invoices/${companyId}`, invoice);\r\n    return response;\r\n  }\r\n\r\n  async getIssuedInvoiceById(invoiceId: number): Promise<IssuedInvoice> {\r\n    const response = await apiService.get(`/accounting/issued-invoices/detail/${invoiceId}`);\r\n    return response as IssuedInvoice;\r\n  }\r\n\r\n\r\n\r\n  // 4. PRIJATÉ FAKTÚRY\r\n\r\n  async getReceivedInvoices(\r\n    companyId: number, \r\n    filters?: {\r\n      status?: string;\r\n      date_from?: string;\r\n      date_to?: string;\r\n      limit?: number;\r\n      offset?: number;\r\n    }\r\n  ): Promise<ReceivedInvoice[]> {\r\n    const params = new URLSearchParams();\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          params.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n    \r\n    const response = await apiService.get(`/accounting/received-invoices/${companyId}?${params}`);\r\n    return response as ReceivedInvoice[];\r\n  }\r\n\r\n  async getReceivedInvoiceById(invoiceId: number): Promise<ReceivedInvoice> {\r\n    const response = await apiService.get(`/accounting/received-invoices/detail/${invoiceId}`);\r\n    return response as ReceivedInvoice;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // 7. HOSPODÁRSKE VÝSLEDKY (pUD)\r\n\r\n  async getPudSummary(companyId: number): Promise<{ total_kc: number; total_count: number }> {\r\n    const response = await apiService.get(`/accounting/pud-summary/${companyId}`);\r\n    return response as { total_kc: number; total_count: number };\r\n  }\r\n\r\n  // Získanie podrobnej analýzy nákladov a výnosov\r\n  async getFinancialAnalysis(companyId: number, dateFrom?: string, dateTo?: string): Promise<FinancialAnalysis> {\r\n    let url = `/accounting/financial-analysis/${companyId}`;\r\n    const params = new URLSearchParams();\r\n    \r\n    if (dateFrom) params.append('dateFrom', dateFrom);\r\n    if (dateTo) params.append('dateTo', dateTo);\r\n    \r\n    if (params.toString()) {\r\n      url += `?${params.toString()}`;\r\n    }\r\n    \r\n    const response = await apiService.get(url);\r\n    return response as FinancialAnalysis;\r\n  }\r\n\r\n  // 8. ŠTATISTIKY\r\n\r\n  async getStats(\r\n    companyId: number, \r\n    filters?: {\r\n      year?: number;\r\n      month?: number;\r\n    }\r\n  ): Promise<AccountingStats> {\r\n    const params = new URLSearchParams();\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined) {\r\n          params.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n    \r\n    const response = await apiService.get(`/accounting/stats/${companyId}?${params}`);\r\n    return response as AccountingStats;\r\n  }\r\n\r\n  // 8. POMOCNÉ METÓDY\r\n\r\n  formatCurrency(amount: number, currency: string = 'EUR'): string {\r\n    return new Intl.NumberFormat('sk-SK', {\r\n      style: 'currency',\r\n      currency: currency\r\n    }).format(amount);\r\n  }\r\n\r\n  formatDate(date: string): string {\r\n    return new Date(date).toLocaleDateString('sk-SK');\r\n  }\r\n\r\n  getStatusBadge(status: string): { text: string; color: string } {\r\n    const statusMap: Record<string, { text: string; color: string }> = {\r\n      // Vydané faktúry\r\n      draft: { text: 'Koncept', color: 'bg-gray-100 text-gray-800' },\r\n      sent: { text: 'Odoslaná', color: 'bg-blue-100 text-blue-800' },\r\n      paid: { text: 'Zaplatená', color: 'bg-green-100 text-green-800' },\r\n      overdue: { text: 'Po splatnosti', color: 'bg-red-100 text-red-800' },\r\n      cancelled: { text: 'Zrušená', color: 'bg-yellow-100 text-yellow-800' },\r\n      \r\n      // Prijaté faktúry\r\n      received: { text: 'Prijatá', color: 'bg-gray-100 text-gray-800' },\r\n      approved: { text: 'Schválená', color: 'bg-blue-100 text-blue-800' },\r\n      disputed: { text: 'Sporná', color: 'bg-orange-100 text-orange-800' }\r\n    };\r\n\r\n    return statusMap[status] || { text: status, color: 'bg-gray-100 text-gray-800' };\r\n  }\r\n\r\n  getTypeBadge(type: string): { text: string; color: string } {\r\n    const typeMap: Record<string, { text: string; color: string }> = {\r\n      income: { text: 'Príjem', color: 'bg-green-100 text-green-800' },\r\n      expense: { text: 'Výdavok', color: 'bg-red-100 text-red-800' }\r\n    };\r\n\r\n    return typeMap[type] || { text: type, color: 'bg-gray-100 text-gray-800' };\r\n  }\r\n\r\n  // 9. POHODA INTEGRÁCIA\r\n\r\n  // Test POHODA connection\r\n  async testPohodaConnection(companyId: number, settings: Partial<AccountingSettings>): Promise<ApiResponse> {\r\n    return await apiService.post('/accounting/test-pohoda-connection', {\r\n      companyId,\r\n      ...settings\r\n    });\r\n  }\r\n\r\n  // Test POHODA invoices\r\n  async testPohodaInvoices(companyId: number, settings: Partial<AccountingSettings>): Promise<ApiResponse> {\r\n    return await apiService.post('/accounting/test-pohoda-invoices', {\r\n      companyId,\r\n      ...settings\r\n    });\r\n  }\r\n\r\n  // Sync POHODA invoices\r\n  async syncPohodaInvoices(companyId: number, dateFrom?: string, dateTo?: string): Promise<ApiResponse> {\r\n    return await apiService.post(`/accounting/sync-pohoda-invoices/${companyId}`, {\r\n      dateFrom,\r\n      dateTo\r\n    });\r\n  }\r\n\r\n  // 10. XML IMPORT/EXPORT\r\n\r\n  // Upload POHODA XML file\r\n  async uploadPohodaXml(companyId: number, file: File): Promise<ApiResponse> {\r\n    const formData = new FormData();\r\n    formData.append('xmlFile', file);\r\n    \r\n    // Používame fetch priamo pre FormData\r\n    const response = await fetch(`http://localhost:5000/api/accounting/upload-pohoda-xml/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n      },\r\n      body: formData\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri nahrávaní XML súboru');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // Export invoices to POHODA XML format\r\n  async exportPohodaXml(companyId: number, dateFrom?: string, dateTo?: string): Promise<Blob> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/export-pohoda-xml/${companyId}?dateFrom=${dateFrom || ''}&dateTo=${dateTo || ''}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri exporte XML súboru');\r\n    }\r\n    \r\n    return await response.blob();\r\n  }\r\n\r\n\r\n\r\n  // 11. OBNOVENIE FAKTÚR Z MDB\r\n\r\n  // Obnovenie vydaných faktúr z MDB\r\n  async refreshInvoicesFromMdb(companyId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    importedCount: number;\r\n    totalCount: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/refresh-invoices/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri obnovení faktúr z MDB');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // Obnovenie prijatých faktúr z MDB\r\n  async refreshReceivedInvoicesFromMdb(companyId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    importedCount: number;\r\n    totalCount: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/refresh-received-invoices/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri obnovení prijatých faktúr z MDB');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 12. IMPORT FAKTÚR Z MDB\r\n\r\n  // Import vydaných faktúr z MDB\r\n  async importInvoicesFromMdb(companyId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    importedCount: number;\r\n    skippedCount: number;\r\n    totalCount: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/import-invoices/${companyId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri importe faktúr z MDB');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 12. MAZANIE POLOŽIEK\r\n\r\n  // Mazanie vydanej faktúry\r\n  async deleteIssuedInvoice(invoiceId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/issued-invoices/${invoiceId}`);\r\n    return response;\r\n  }\r\n\r\n  // Mazanie prijatej faktúry\r\n  async deleteReceivedInvoice(invoiceId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/received-invoices/${invoiceId}`);\r\n    return response;\r\n  }\r\n\r\n  // Mazanie bankovej transakcie\r\n  async deleteBankTransaction(transactionId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/bank-transactions/${transactionId}`);\r\n    return response;\r\n  }\r\n\r\n  // Mazanie pokladničnej transakcie\r\n  async deleteCashTransaction(transactionId: number): Promise<any> {\r\n    const response = await apiService.delete(`/accounting/cash-transactions/${transactionId}`);\r\n    return response;\r\n  }\r\n\r\n  // 13. ADRESÁR FIRIEM Z MDB\r\n\r\n  // Načítanie adresára firiem z MDB\r\n  async getDirectory(companyId: number): Promise<{\r\n    success: boolean;\r\n    company: { ico: string; name: string };\r\n    mdb_file: string;\r\n    companies: Array<{\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n      dic: string;\r\n      address: string;\r\n      postal_code: string;\r\n      city: string;\r\n      phone: string;\r\n      email: string;\r\n      bank_account: string;\r\n      bank_code: string;\r\n    }>;\r\n    total_count: number;\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/directory/${companyId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní adresára');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 14. DPH PODANIA\r\n\r\n  // Načítanie DPH podaní z MDB\r\n  async getVatReturns(companyId: number, year?: number): Promise<{\r\n    company: {\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n    };\r\n    year: number;\r\n    returns: Array<{\r\n      id: number;\r\n      rok: number;\r\n      mesiac: number;\r\n      povinnost: number;\r\n      odpočet: number;\r\n      odoslané: boolean;\r\n    }>;\r\n    summary: {\r\n      totalPovinnost: number;\r\n      totalOdpočet: number;\r\n      totalRozdiel: number;\r\n      odoslanéCount: number;\r\n      neodoslanéCount: number;\r\n    };\r\n  }> {\r\n    const yearParam = year || new Date().getFullYear();\r\n    const response = await fetch(`http://localhost:5000/api/accounting/vat-returns/${companyId}?year=${yearParam}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní DPH podaní');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 15. BANKOVÉ ÚČTY\r\n\r\n  // Načítanie bankových účtov z MDB\r\n  async getBankAccounts(companyId: number): Promise<{\r\n    company: {\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n    };\r\n    accounts: Array<{\r\n      id: number;\r\n      accountNumber: string;\r\n      accountName: string;\r\n      bankName: string;\r\n      balance: number;\r\n      creditTotal: number;\r\n      debitTotal: number;\r\n      transactionCount: number;\r\n    }>;\r\n    summary: {\r\n      totalBalance: number;\r\n      totalCredit: number;\r\n      totalDebit: number;\r\n      accountCount: number;\r\n    };\r\n  }> {\r\n    console.log('🏦 Volám bankový endpoint pre companyId:', companyId);\r\n    \r\n    const response = await fetch(`http://localhost:5000/api/accounting/bank-accounts/${companyId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    console.log('🏦 Bankový endpoint response status:', response.status);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní bankových účtov');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('🏦 Bankový endpoint response data:', data);\r\n    \r\n    return data;\r\n  }\r\n\r\n  // 16. POKLADŇA\r\n\r\n  // Načítanie pokladňových účtov z MDB\r\n  async getCashAccounts(companyId: number): Promise<{\r\n    company: {\r\n      id: number;\r\n      name: string;\r\n      ico: string;\r\n    };\r\n    accounts: Array<{\r\n      id: number;\r\n      accountNumber: string;\r\n      accountName: string;\r\n      balance: number;\r\n      creditTotal: number;\r\n      debitTotal: number;\r\n      transactionCount: number;\r\n    }>;\r\n    summary: {\r\n      totalBalance: number;\r\n      totalCredit: number;\r\n      totalDebit: number;\r\n      accountCount: number;\r\n    };\r\n  }> {\r\n    const response = await fetch(`http://localhost:5000/api/accounting/cash-accounts/${companyId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní pokladňových účtov');\r\n    }\r\n    \r\n    return await response.json();\r\n  }\r\n\r\n  // 17. BANKOVÉ TRANSAKCIE\r\n  async getBankTransactions(companyId: number, accountNumber: string): Promise<{\r\n    company: { id: number; name: string; ico: string; };\r\n    account: { accountNumber: string; accountName: string; bankName: string; };\r\n    transactions: Array<{\r\n      id: number; datum: string; popis: string; kredit: number; debet: number; zostatok: number; typ: 'kredit' | 'debet';\r\n    }>;\r\n    summary: {\r\n      totalCredit: number; totalDebit: number; currentBalance: number; transactionCount: number;\r\n    };\r\n  }> {\r\n    console.log('🏦 Volám bankový transakčný endpoint pre companyId:', companyId, 'accountNumber:', accountNumber);\r\n\r\n    const response = await fetch(`http://localhost:5000/api/accounting/bank-transactions/${companyId}/${accountNumber}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    console.log('🏦 Bankový transakčný endpoint response status:', response.status);\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní bankových transakcií');\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('🏦 Bankový transakčný endpoint response data:', data);\r\n\r\n    return data;\r\n  }\r\n\r\n  // 18. POKLADŇOVÉ TRANSAKCIE\r\n  async getCashTransactions(companyId: number, accountNumber: string): Promise<{\r\n    company: { id: number; name: string; ico: string; };\r\n    account: { accountNumber: string; accountName: string; bankName: string; };\r\n    transactions: Array<{\r\n      id: number; datum: string; popis: string; kredit: number; debet: number; zostatok: number; typ: 'kredit' | 'debet';\r\n    }>;\r\n    summary: {\r\n      totalCredit: number; totalDebit: number; currentBalance: number; transactionCount: number;\r\n    };\r\n  }> {\r\n    console.log('💰 Volám pokladňový transakčný endpoint pre companyId:', companyId, 'accountNumber:', accountNumber);\r\n\r\n    const response = await fetch(`http://localhost:5000/api/accounting/cash-transactions/${companyId}/${accountNumber}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    console.log('💰 Pokladňový transakčný endpoint response status:', response.status);\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Chyba pri načítaní pokladňových transakcií');\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('💰 Pokladňový transakčný endpoint response data:', data);\r\n\r\n    return data;\r\n  }\r\n}\r\n\r\nexport const accountingService = new AccountingService();\r\n","import * as React from \"react\";\nfunction DocumentTextIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(DocumentTextIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ChartBarIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3 13.125C3 12.504 3.504 12 4.125 12h2.25c.621 0 1.125.504 1.125 1.125v6.75C7.5 20.496 6.996 21 6.375 21h-2.25A1.125 1.125 0 0 1 3 19.875v-6.75ZM9.75 8.625c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125v11.25c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V8.625ZM16.5 4.125c0-.621.504-1.125 1.125-1.125h2.25C20.496 3 21 3.504 21 4.125v15.75c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V4.125Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChartBarIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CreditCardIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 8.25h19.5M2.25 9h19.5m-16.5 5.25h6m-6 2.25h3m-3.75 3h15a2.25 2.25 0 0 0 2.25-2.25V6.75A2.25 2.25 0 0 0 19.5 4.5h-15a2.25 2.25 0 0 0-2.25 2.25v10.5A2.25 2.25 0 0 0 4.5 19.5Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CreditCardIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19.5 13.5 12 21m0 0-7.5-7.5M12 21V3\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ChartPieIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10.5 6a7.5 7.5 0 1 0 7.5 7.5h-7.5V6Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M13.5 10.5H21A7.5 7.5 0 0 0 13.5 3v7.5Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChartPieIcon);\nexport default ForwardRef;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { \r\n  DocumentTextIcon, \r\n  BanknotesIcon, \r\n  CreditCardIcon, \r\n  ArrowDownIcon,\r\n  ChartBarIcon,\r\n  BuildingOfficeIcon,\r\n  ArrowLeftIcon,\r\n  ChartPieIcon\r\n} from '@heroicons/react/24/outline';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport { \r\n  accountingService, \r\n  AccountingStats,\r\n  FinancialAnalysis\r\n} from '../services/accountingService';\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\n\r\nconst AccountingPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(true);\r\n  const [companies, setCompanies] = useState<any[]>([]);\r\n  \r\n  // Používame useLocalStorage hook pre konzistentnosť s App.tsx\r\n  const [userEmail] = useLocalStorage('userEmail', '');\r\n  const [userRole] = useLocalStorage<'admin' | 'accountant' | 'user' | 'employee' | null>('userRole', null);\r\n  const [companyId, setCompanyId] = useLocalStorage<number | null>('selectedCompanyId', null);\r\n  \r\n  const [stats, setStats] = useState<AccountingStats | null>(null);\r\n  const [financialAnalysis, setFinancialAnalysis] = useState<FinancialAnalysis | null>(null);\r\n  const [vatData, setVatData] = useState<any>(null);\r\n  const [bankData, setBankData] = useState<any>(null);\r\n  const [cashData, setCashData] = useState<any>(null);\r\n\r\n  const loadData = useCallback(async () => {\r\n    if (!companyId) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Paralelné načítanie štatistík, finančnej analýzy, DPH dát, bankových dát a pokladňových dát\r\n      const [statsData, analysisData, vatData, bankData, cashData] = await Promise.all([\r\n        accountingService.getStats(companyId),\r\n        accountingService.getFinancialAnalysis(companyId),\r\n        accountingService.getVatReturns(companyId, new Date().getFullYear()).catch(() => null),\r\n        accountingService.getBankAccounts(companyId).catch(() => null),\r\n        accountingService.getCashAccounts(companyId).catch(() => null)\r\n      ]);\r\n      \r\n      setStats(statsData);\r\n      setFinancialAnalysis(analysisData);\r\n      setVatData(vatData);\r\n      setBankData(bankData);\r\n      setCashData(cashData);\r\n    } catch (error) {\r\n      console.error('Chyba pri načítaní účtovníckych dát:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [companyId]);\r\n\r\n  useEffect(() => {\r\n    if (userRole && userEmail) {\r\n      loadCompanies();\r\n    }\r\n  }, [userRole, userEmail]);\r\n\r\n  useEffect(() => {\r\n    if (companyId) {\r\n      loadData();\r\n    }\r\n  }, [companyId, loadData]);\r\n\r\n  const loadCompanies = async () => {\r\n    try {\r\n      let endpoint = '/api/companies';\r\n      \r\n      // Výber správneho endpointu podľa role\r\n      if (userRole === 'user') {\r\n        endpoint = `/api/companies/user/${userEmail}`;\r\n      } else if (userRole === 'accountant') {\r\n        endpoint = `/api/companies/accountant/${userEmail}`;\r\n      }\r\n      // Pre admin sa používa default endpoint '/api/companies'\r\n      \r\n      const response = await fetch(endpoint);\r\n      const companiesData = await response.json();\r\n      setCompanies(companiesData);\r\n      \r\n      // Automaticky nastavíme firmu podľa role, len ak nemáme companyId v localStorage\r\n      if (companiesData.length > 0 && !companyId) {\r\n        setCompanyId(companiesData[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Chyba pri načítaní firiem:', error);\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number | null | undefined) => {\r\n    if (amount === null || amount === undefined || isNaN(amount)) return '-';\r\n    return new Intl.NumberFormat('sk-SK', {\r\n      style: 'currency',\r\n      currency: 'EUR'\r\n    }).format(amount);\r\n  };\r\n\r\n  // Funkcia na získanie posledného DPH obdobia s výsledkom\r\n  const getLastVatPeriod = () => {\r\n    if (!vatData || !vatData.returns || vatData.returns.length === 0) {\r\n      return { period: '-', result: 0, isPositive: false };\r\n    }\r\n    \r\n    // Zoradenie podľa mesiaca a výber posledného\r\n    const sortedReturns = [...vatData.returns].sort((a, b) => b.mesiac - a.mesiac);\r\n    const lastReturn = sortedReturns[0];\r\n    \r\n    const months = [\r\n      'Január', 'Február', 'Marec', 'Apríl', 'Máj', 'Jún',\r\n      'Júl', 'August', 'September', 'Október', 'November', 'December'\r\n    ];\r\n    \r\n    const period = `${months[lastReturn.mesiac - 1]} ${lastReturn.rok}`;\r\n    const result = lastReturn.povinnost - lastReturn.odpočet;\r\n    // Zmenená logika: mínus = povinnosť (musí platiť), plus = odpočet (môže si odpočítať)\r\n    const isPositive = result < 0; // Negatívny výsledok znamená povinnosť\r\n    \r\n    return { period, result, isPositive };\r\n  };\r\n\r\n  const accountingCards = [\r\n    {\r\n      id: 'issued-invoices',\r\n      name: 'Vydané faktúry',\r\n      description: 'Správa vydaných faktúr',\r\n      icon: DocumentTextIcon,\r\n      color: 'bg-blue-500',\r\n      hoverColor: 'hover:bg-blue-600',\r\n      stats: stats?.issued_invoices?.total_count || 0,\r\n      unpaidAmount: stats?.issued_invoices?.overdue_amount || 0\r\n    },\r\n    {\r\n      id: 'received-invoices',\r\n      name: 'Prijaté faktúry',\r\n      description: 'Správa prijatých faktúr',\r\n      icon: ArrowDownIcon,\r\n      color: 'bg-green-500',\r\n      hoverColor: 'hover:bg-green-600',\r\n      stats: stats?.received_invoices?.total_count || 0,\r\n      unpaidAmount: stats?.received_invoices?.overdue_amount || 0\r\n    },\r\n    {\r\n      id: 'cash',\r\n      name: 'Pokladňa',\r\n      description: 'Celkový zostatok pokladní',\r\n      icon: BanknotesIcon,\r\n      color: 'bg-yellow-500',\r\n      hoverColor: 'hover:bg-yellow-600',\r\n      stats: cashData?.summary?.totalBalance || 0,\r\n      isCashBalance: true,\r\n      unpaidAmount: 0\r\n    },\r\n    {\r\n      id: 'bank',\r\n      name: 'Banka',\r\n      description: 'Celkový zostatok bankových účtov',\r\n      icon: CreditCardIcon,\r\n      color: 'bg-purple-500',\r\n      hoverColor: 'hover:bg-purple-600',\r\n      stats: bankData?.summary?.totalBalance || 0,\r\n      isBankBalance: true,\r\n      unpaidAmount: 0\r\n    },\r\n    {\r\n      id: 'vat-returns',\r\n      name: 'DPH',\r\n      description: `Posledné obdobie: ${getLastVatPeriod().period}`,\r\n      icon: ChartBarIcon,\r\n      color: 'bg-indigo-500',\r\n      hoverColor: 'hover:bg-indigo-600',\r\n      stats: getLastVatPeriod().result,\r\n      isVatResult: true,\r\n      isPositive: getLastVatPeriod().isPositive,\r\n      unpaidAmount: 0\r\n    },\r\n    {\r\n      id: 'financial-results',\r\n      name: 'Hospodárske výsledky',\r\n      description: 'Výsledok hospodárenia',\r\n      icon: ChartPieIcon,\r\n      color: 'bg-red-500',\r\n      hoverColor: 'hover:bg-red-600',\r\n      stats: financialAnalysis?.profit || 0,\r\n      isProfit: financialAnalysis?.isProfit || false,\r\n      unpaidAmount: 0\r\n    },\r\n\r\n  ];\r\n\r\n  const handleCardClick = (cardId: string) => {\r\n    if (cardId === 'financial-results') {\r\n      navigate(`/accounting/financial-analysis/${companyId}`);\r\n    } else if (cardId === 'bank') {\r\n      navigate(`/accounting/bank/${companyId}`);\r\n    } else if (cardId === 'cash') {\r\n      navigate(`/accounting/cash/${companyId}`);\r\n    } else {\r\n      navigate(`/accounting/${cardId}/${companyId}`);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-dark-900\">\r\n      {/* Header s navigáciou späť */}\r\n      <div className=\"bg-white dark:bg-dark-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center justify-between h-16\">\r\n            <div className=\"flex items-center\">\r\n              <button\r\n                onClick={() => navigate('/dashboard')}\r\n                className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n              >\r\n                <ArrowLeftIcon className=\"h-4 w-4 mr-2\" />\r\n                Späť na Dashboard\r\n              </button>\r\n            </div>\r\n                         <div className=\"flex items-center space-x-4\">\r\n               <h1 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Účtovníctvo</h1>\r\n               \r\n                               {/* Pre Admin, Accountant a User - dropdown na výber firmy */}\r\n                {(userRole === 'admin' || userRole === 'accountant' || userRole === 'user') && companies.length > 0 ? (\r\n                  <select\r\n                    value={companyId || ''}\r\n                    onChange={(e) => setCompanyId(Number(e.target.value))}\r\n                    className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                  >\r\n                    <option value=\"\">Vyberte firmu</option>\r\n                    {companies.map(company => (\r\n                      <option key={company.id} value={company.id}>\r\n                        {company.name} (IČO: {company.ico})\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                ) : null}\r\n             </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Hlavný obsah */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n        {/* Sekcie účtovníctva */}\r\n        <div>\r\n          <h2 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Sekcie účtovníctva</h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {accountingCards.map((card) => (\r\n              <div\r\n                key={card.id}\r\n                onClick={() => handleCardClick(card.id)}\r\n                className={`bg-white dark:bg-dark-800 p-6 rounded-lg shadow cursor-pointer transition-all duration-200 hover:shadow-lg transform hover:-translate-y-1`}\r\n              >\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className={`p-3 rounded-lg ${card.color} ${card.hoverColor}`}>\r\n                      <card.icon className=\"h-6 w-6 text-white\" />\r\n                    </div>\r\n                    <div className=\"ml-4\">\r\n                      <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">{card.name}</h3>\r\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">{card.description}</p>\r\n                      {(card.id === 'issued-invoices' || card.id === 'received-invoices') && card.unpaidAmount > 0 && (\r\n                        <p className=\"text-sm text-red-600 font-medium mt-1\">\r\n                          Neuhradené: {formatCurrency(card.unpaidAmount)}\r\n                        </p>\r\n                      )}\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    {card.id === 'financial-results' ? (\r\n                      <>\r\n                        <p className={`text-2xl font-bold ${financialAnalysis?.isProfit ? 'text-green-600' : 'text-red-600'}`}>\r\n                          {financialAnalysis?.isProfit ? '+' : '-'} {formatCurrency(Math.abs(financialAnalysis?.profit || 0))}\r\n                        </p>\r\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                          {financialAnalysis?.isProfit ? 'Zisk' : 'Strata'}\r\n                        </p>\r\n                      </>\r\n                    ) : card.id === 'vat-returns' ? (\r\n                      <>\r\n                        <p className={`text-2xl font-bold ${getLastVatPeriod().isPositive ? 'text-green-600' : 'text-red-600'}`}>\r\n                          {getLastVatPeriod().isPositive ? '+' : '-'} {formatCurrency(Math.abs(getLastVatPeriod().result))}\r\n                        </p>\r\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                          {getLastVatPeriod().isPositive ? 'Odpočet' : 'Povinnosť'}\r\n                        </p>\r\n                      </>\r\n                    ) : card.id === 'bank' ? (\r\n                      <>\r\n                        <p className={`text-2xl font-bold ${(bankData?.summary?.totalBalance || 0) >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                          {formatCurrency(bankData?.summary?.totalBalance || 0)}\r\n                        </p>\r\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                          Celkový zostatok\r\n                        </p>\r\n                      </>\r\n                    ) : card.id === 'cash' ? (\r\n                      <>\r\n                        <p className={`text-2xl font-bold ${(cashData?.summary?.totalBalance || 0) >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                          {formatCurrency(cashData?.summary?.totalBalance || 0)}\r\n                        </p>\r\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                          Celkový zostatok\r\n                        </p>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{card.stats}</p>\r\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">položiek</p>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountingPage;\r\n","import * as React from \"react\";\nfunction ArrowLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowLeftIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction BanknotesIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 18.75a60.07 60.07 0 0 1 15.797 2.101c.727.198 1.453-.342 1.453-1.096V18.75M3.75 4.5v.75A.75.75 0 0 1 3 6h-.75m0 0v-.375c0-.621.504-1.125 1.125-1.125H20.25M2.25 6v9m18-10.5v.75c0 .414.336.75.75.75h.75m-1.5-1.5h.375c.621 0 1.125.504 1.125 1.125v9.75c0 .621-.504 1.125-1.125 1.125h-.375m1.5-1.5H21a.75.75 0 0 0-.75.75v.75m0 0H3.75m0 0h-.375a1.125 1.125 0 0 1-1.125-1.125V15m1.5 1.5v-.75A.75.75 0 0 0 3 15h-.75M15 10.5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm3 0h.008v.008H18V10.5Zm-12 0h.008v.008H6V10.5Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(BanknotesIcon);\nexport default ForwardRef;"],"names":["accountingService","getSettings","companyId","apiService","get","concat","saveSettings","settings","post","getPermissions","userEmail","savePermissions","permissions","getAllPermissions","getIssuedInvoices","filters","params","URLSearchParams","Object","entries","forEach","_ref","key","value","undefined","append","toString","createIssuedInvoice","invoice","getIssuedInvoiceById","invoiceId","getReceivedInvoices","_ref2","getReceivedInvoiceById","getPudSummary","getFinancialAnalysis","dateFrom","dateTo","url","getStats","_ref3","formatCurrency","amount","currency","arguments","length","Intl","NumberFormat","style","format","formatDate","date","Date","toLocaleDateString","getStatusBadge","status","draft","text","color","sent","paid","overdue","cancelled","received","approved","disputed","getTypeBadge","type","income","expense","testPohodaConnection","_objectSpread","testPohodaInvoices","syncPohodaInvoices","uploadPohodaXml","file","formData","FormData","response","fetch","method","headers","localStorage","getItem","body","ok","Error","json","exportPohodaXml","blob","refreshInvoicesFromMdb","refreshReceivedInvoicesFromMdb","importInvoicesFromMdb","deleteIssuedInvoice","delete","deleteReceivedInvoice","deleteBankTransaction","transactionId","deleteCashTransaction","getDirectory","getVatReturns","year","yearParam","getFullYear","getBankAccounts","console","log","data","getCashAccounts","getBankTransactions","accountNumber","getCashTransactions","DocumentTextIcon","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","ChartBarIcon","CreditCardIcon","ArrowDownIcon","ChartPieIcon","AccountingPage","_stats$issued_invoice","_stats$issued_invoice2","_stats$received_invoi","_stats$received_invoi2","_cashData$summary","_bankData$summary","navigate","useNavigate","loading","setLoading","useState","companies","setCompanies","useLocalStorage","userRole","setCompanyId","stats","setStats","financialAnalysis","setFinancialAnalysis","vatData","setVatData","bankData","setBankData","cashData","setCashData","loadData","useCallback","async","statsData","analysisData","Promise","all","catch","error","useEffect","loadCompanies","endpoint","companiesData","isNaN","getLastVatPeriod","returns","period","result","isPositive","lastReturn","sort","a","b","mesiac","rok","povinnost","odpočet","accountingCards","name","description","icon","hoverColor","issued_invoices","total_count","unpaidAmount","overdue_amount","received_invoices","BanknotesIcon","summary","totalBalance","isCashBalance","isBankBalance","isVatResult","profit","isProfit","_jsx","LoadingSpinner","_jsxs","className","children","onClick","ArrowLeftIcon","onChange","e","Number","target","map","company","ico","card","_bankData$summary2","_bankData$summary3","_cashData$summary2","_cashData$summary3","handleCardClick","cardId","_Fragment","Math","abs"],"sourceRoot":""}